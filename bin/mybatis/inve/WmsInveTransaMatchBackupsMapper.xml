<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.zx.emanage.inve.persist.WmsInveTransaMatchBackupsDao">
	<!-- get entity by pk -->
	<select id="get" parameterType="int" resultType="WmsInveTransaMatch">
		select
		wms_inve_transa_match,
		wms_inve_transa_prod_id,
		wms_fina_cre_repay_id,
		credit_name,
		credit_id_card,
		assign_account,
		date_format(date_of_assign,'%Y-%m-%d') as date_of_assign_str,
		date_of_assign,
		date_format(repay_begin_date,'%Y-%m-%d') as repay_begin_date_str,
		repay_begin_date,
		date_format(repay_end_date,'%Y-%m-%d') as repay_end_date_str,
		repay_end_date,
		product_interest_month,
		create_user_id,
		date_format(create_timestamp,'%Y-%m-%d %H:%i:%s') as create_timestamp_str,
		create_timestamp,
		last_update_user_id,
		date_format(last_update_timestamp,'%Y-%m-%d %H:%i:%s') as last_update_timestamp_str,
		last_update_timestamp,
		enable_flag,
		wms_inve_redeem_id,
		protocol_code,
		wms_inve_transa_protocol_id
		from
		wms_inve_transa_match_backups
		where
		wms_inve_transa_match = #{wms_inve_transa_match}
	</select>

	<!-- count num -->
	<select id="findCount" parameterType="map" resultType="int">
		select count(wms_inve_transa_match) as count
		from
		wms_inve_transa_match_backups
		<where>
			<if test="paramname != null">
				<!-- and columnName = #{columnName} -->
			</if>
		</where>
	</select>

	<!-- list -->
	<select id="search" parameterType="map" resultType="java.util.HashMap">
		select
		wms_inve_transa_match,
		wms_inve_transa_prod_id,
		wms_fina_cre_repay_id,
		credit_name,
		credit_id_card,
		assign_account,
		date_format(date_of_assign,'%Y-%m-%d') as date_of_assign_str,
		date_of_assign,
		date_format(repay_begin_date,'%Y-%m-%d') as repay_begin_date_str,
		repay_begin_date,
		date_format(repay_end_date,'%Y-%m-%d') as repay_end_date_str,
		repay_end_date,
		product_interest_month,
		create_user_id,
		date_format(create_timestamp,'%Y-%m-%d %H:%i:%s') as create_timestamp_str,
		create_timestamp,
		last_update_user_id,
		date_format(last_update_timestamp,'%Y-%m-%d %H:%i:%s') as last_update_timestamp_str,
		last_update_timestamp,
		enable_flag,
		wms_inve_redeem_id,
		protocol_code,
		wms_inve_transa_protocol_id
		from wms_inve_transa_match_backups
		<where>
			<if test="paramname != null">
				<!-- and columnName = #{columnName} -->
			</if>
		</where>
		<if test="sortname != '' and sortorder !=''">
			ORDER BY ${sortname} ${sortorder}
		</if>
		<if test="offset != null and pagesize !=null">
			LIMIT ${offset} , ${pagesize}
		</if>
	</select>

	<!-- save -->
	<insert id="save" parameterType="WmsInveTransaMatch"
		useGeneratedKeys="true" keyProperty="wms_inve_transa_match">
		INSERT INTO
		wms_inve_transa_match_backups
		(

		wms_inve_transa_prod_id,

		wms_fina_cre_repay_id,

		credit_name,

		credit_id_card,

		assign_account,

		date_of_assign,

		repay_begin_date,

		repay_end_date,

		product_interest_month,

		create_user_id,

		create_timestamp,

		last_update_user_id,

		last_update_timestamp,

		enable_flag,

		wms_inve_redeem_id,
		
		protocol_code,
		
		wms_inve_transa_protocol_id
		)
		VALUES
		(
		#{wms_inve_transa_prod_id},
		#{wms_fina_cre_repay_id},
		#{credit_name},
		#{credit_id_card},
		#{assign_account},
		#{date_of_assign},
		#{repay_begin_date},
		#{repay_end_date},
		#{product_interest_month},
		#{create_user_id},
		#{create_timestamp},
		#{last_update_user_id},
		#{last_update_timestamp},
		#{enable_flag},
		#{wms_inve_redeem_id},
		#{protocol_code},
		#{wms_inve_transa_protocol_id}
		);
	</insert>

	<!-- 更新用户 -->
	<update id="update" parameterType="WmsInveTransaMatch">
		update wms_inve_transa_match_backups
		<set>
			<if test="wms_inve_transa_match != null">
				wms_inve_transa_match = #{wms_inve_transa_match},
			</if>
			<if test="wms_inve_transa_prod_id != null">
				wms_inve_transa_prod_id = #{wms_inve_transa_prod_id},
			</if>
			<if test="wms_fina_cre_repay_id != null">
				wms_fina_cre_repay_id = #{wms_fina_cre_repay_id},
			</if>
			<if test="credit_name != null">
				credit_name = #{credit_name},
			</if>
			<if test="credit_id_card != null">
				credit_id_card = #{credit_id_card},
			</if>
			<if test="assign_account != null">
				assign_account = #{assign_account},
			</if>
			<if test="date_of_assign != null">
				date_of_assign = #{date_of_assign},
			</if>
			<if test="repay_begin_date != null">
				repay_begin_date = #{repay_begin_date},
			</if>
			<if test="repay_end_date != null">
				repay_end_date = #{repay_end_date},
			</if>
			<if test="product_interest_month != null">
				product_interest_month = #{product_interest_month},
			</if>
			<if test="create_user_id != null">
				create_user_id = #{create_user_id},
			</if>
			<if test="create_timestamp != null">
				create_timestamp = #{create_timestamp},
			</if>
			<if test="last_update_user_id != null">
				last_update_user_id = #{last_update_user_id},
			</if>
			<if test="last_update_timestamp != null">
				last_update_timestamp = #{last_update_timestamp},
			</if>
			<if test="enable_flag != null">
				enable_flag = #{enable_flag},
			</if>
			<if test="wms_inve_redeem_id != null">
				wms_inve_redeem_id = #{wms_inve_redeem_id},
			</if>
			<if test="protocol_code !=null">
				protocol_code =#{protocol_code}
			</if>
			<if test="wms_inve_transa_protocol_id !=null">
			    wms_inve_transa_protocol_id =#{wms_inve_transa_protocol_id}
			</if>
		</set>
		where
		wms_inve_transa_match = #{wms_inve_transa_match}
	</update>
	<select id="getListByEntity" parameterType="WmsInveTransaMatch"
		resultType="WmsInveTransaMatch">
		select
		wms_inve_transa_match,
		wms_inve_transa_prod_id,
		wms_fina_cre_repay_id,
		credit_name,
		credit_id_card,
		assign_account,
		date_format(date_of_assign,'%Y-%m-%d') as date_of_assign_str,
		date_of_assign,
		date_format(repay_begin_date,'%Y-%m-%d') as repay_begin_date_str,
		repay_begin_date,
		date_format(repay_end_date,'%Y-%m-%d') as repay_end_date_str,
		repay_end_date,
		product_interest_month,
		create_user_id,
		date_format(create_timestamp,'%Y-%m-%d %H:%i:%s') as create_timestamp_str,
		create_timestamp,
		last_update_user_id,
		date_format(last_update_timestamp,'%Y-%m-%d %H:%i:%s') as last_update_timestamp_str,
		last_update_timestamp,
		enable_flag,
		wms_inve_redeem_id,
		protocol_code,
		wms_inve_transa_protocol_id
		from
		wms_inve_transa_match_backups
		<where>
			<if test="wms_inve_transa_match != null">
				and wms_inve_transa_match = #{wms_inve_transa_match}
			</if>
			<if test="wms_inve_transa_prod_id != null">
				and wms_inve_transa_prod_id = #{wms_inve_transa_prod_id}
			</if>
			<if test="wms_fina_cre_repay_id != null">
				and wms_fina_cre_repay_id = #{wms_fina_cre_repay_id}
			</if>
			<if test="credit_name != null">
				and credit_name = #{credit_name}
			</if>
			<if test="credit_id_card != null">
				and credit_id_card = #{credit_id_card}
			</if>
			<if test="assign_account != null">
				and assign_account = #{assign_account}
			</if>
			<if test="date_of_assign != null">
				and date_of_assign = #{date_of_assign}
			</if>
			<if test="repay_begin_date != null">
				and repay_begin_date = #{repay_begin_date}
			</if>
			<if test="repay_end_date != null">
				and repay_end_date = #{repay_end_date}
			</if>
			<if test="product_interest_month != null">
				and product_interest_month = #{product_interest_month}
			</if>
			<if test="create_user_id != null">
				and create_user_id = #{create_user_id}
			</if>
			<if test="create_timestamp != null">
				and create_timestamp = #{create_timestamp}
			</if>
			<if test="last_update_user_id != null">
				and last_update_user_id = #{last_update_user_id}
			</if>
			<if test="last_update_timestamp != null">
				and last_update_timestamp = #{last_update_timestamp}
			</if>
			<if test="enable_flag != null">
				and enable_flag = #{enable_flag}
			</if>
			<if test="wms_inve_redeem_id != null">
				and wms_inve_redeem_id = #{wms_inve_redeem_id}
			</if>
			<if test="isExcludePKFlag != null and isExcludePKFlag == true">
				and wms_inve_transa_match != #{wms_inve_transa_match}
			</if>
			<if test="protocol_code != null">
				and protocol_code =#{protocol_code}
			</if>
			<if test="wms_inve_transa_protocol_id !=null">
			    and wms_inve_transa_protocol_id =#{wms_inve_transa_protocol_id}
			</if>
		</where>
	</select>
</mapper> 
