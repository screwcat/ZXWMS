<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.zx.emanage.inve.persist.WmsInveTransaProtocolDao">
	<!-- get entity by pk -->
	<select id="get" parameterType="int" resultType="WmsInveTransaProtocol">
		select
		wms_inve_transa_protocol_id,
		wms_inve_transa_id,
		wms_inve_transa_prod_id,
		prot_code,
		a_name,
		a_id_card,
		product_account,
		date_format(date_of_payment,'%Y-%m-%d') as date_of_payment_str,
		date_of_payment,
		a_bank,
		a_number,
		b_name,
		b_id_card,
		category_name,
		product_deadline,
		sign_place,
		b_data,
		date_format(end_of_date,'%Y-%m-%d') as end_of_date_str,
		end_of_date,
		create_user_id,
		create_user_name,
		date_format(create_timestamp,'%Y-%m-%d %H:%i:%s') as create_timestamp_str,
		create_timestamp,
		last_update_user_id,
		date_format(last_update_timestamp,'%Y-%m-%d %H:%i:%s') as last_update_timestamp_str,
		last_update_timestamp,
		enable_flag,
		contact_address,
		post_code,
		wms_inve_redeem_id
		from
		wms_inve_transa_protocol
		where
		wms_inve_transa_protocol_id = #{wms_inve_transa_protocol_id}
	</select>

	<!-- count num -->
	<select id="findCount" parameterType="map" resultType="int">
		select count(wms_inve_transa_protocol_id) as count
		from
		wms_inve_transa_protocol
		<where>
			<if test="paramname != null">
				<!-- and columnName = #{columnName} -->
			</if>
		</where>
	</select>

	<!-- list -->
	<select id="search" parameterType="map" resultType="java.util.HashMap">
		select
		wms_inve_transa_protocol_id,
		wms_inve_transa_id,
		wms_inve_transa_prod_id,
		prot_code,
		a_name,
		a_id_card,
		product_account,
		date_format(date_of_payment,'%Y-%m-%d') as date_of_payment_str,
		date_of_payment,
		a_bank,
		a_number,
		b_name,
		b_id_card,
		category_name,
		product_deadline,
		sign_place,
		b_data,
		date_format(end_of_date,'%Y-%m-%d') as end_of_date_str,
		end_of_date,
		create_user_id,
		create_user_name,
		date_format(create_timestamp,'%Y-%m-%d %H:%i:%s') as create_timestamp_str,
		create_timestamp,
		last_update_user_id,
		date_format(last_update_timestamp,'%Y-%m-%d %H:%i:%s') as last_update_timestamp_str,
		last_update_timestamp,
		enable_flag,
		contact_address,
		post_code
		from wms_inve_transa_protocol
		<where>
			<if test="paramname != null">
				<!-- and columnName = #{columnName} -->
			</if>
		</where>
		<if test="sortname != '' and sortorder !=''">
			ORDER BY ${sortname} ${sortorder}
		</if>
		<if test="offset != null and pagesize !=null">
			LIMIT ${offset} , ${pagesize}
		</if>
	</select>

	<!-- save -->
	<insert id="save" parameterType="WmsInveTransaProtocol"
		useGeneratedKeys="true" keyProperty="wms_inve_transa_protocol_id" >
		INSERT INTO
		wms_inve_transa_protocol
		(
		wms_inve_transa_protocol_id,

		wms_inve_transa_id,

		wms_inve_transa_prod_id,

		prot_code,

		a_name,

		a_id_card,

		product_account,

		date_of_payment,

		a_bank,

		a_number,

		b_name,

		b_id_card,

		category_name,

		product_deadline,

		sign_place,

		b_data,

		end_of_date,

		create_user_id,

		create_user_name,

		create_timestamp,

		last_update_user_id,

		last_update_timestamp,

		enable_flag,

		contact_address,

		post_code,

		wms_inve_redeem_id
		)
		VALUES
		(
		#{wms_inve_transa_protocol_id},
		#{wms_inve_transa_id},
		#{wms_inve_transa_prod_id},
		#{prot_code},
		#{a_name},
		#{a_id_card},
		#{product_account},
		#{date_of_payment},
		#{a_bank},
		#{a_number},
		#{b_name},
		#{b_id_card},
		#{category_name},
		#{product_deadline},
		#{sign_place},
		#{b_data},
		#{end_of_date},
		#{create_user_id},
		#{create_user_name},
		#{create_timestamp},
		#{last_update_user_id},
		#{last_update_timestamp},
		#{enable_flag},
		#{contact_address},
		#{post_code},
		#{wms_inve_redeem_id}
		);
	</insert>

	<!-- 更新用户 -->
	<update id="update" parameterType="WmsInveTransaProtocol">
		update wms_inve_transa_protocol
		<set>
			<if test="wms_inve_transa_protocol_id != null">
				wms_inve_transa_protocol_id = #{wms_inve_transa_protocol_id},
			</if>
			<if test="wms_inve_transa_id != null">
				wms_inve_transa_id = #{wms_inve_transa_id},
			</if>
			<if test="wms_inve_transa_prod_id != null">
				wms_inve_transa_prod_id = #{wms_inve_transa_prod_id},
			</if>
			<if test="prot_code != null">
				prot_code = #{prot_code},
			</if>
			<if test="a_name != null">
				a_name = #{a_name},
			</if>
			<if test="a_id_card != null">
				a_id_card = #{a_id_card},
			</if>
			<if test="product_account != null">
				product_account = #{product_account},
			</if>
			<if test="date_of_payment != null">
				date_of_payment = #{date_of_payment},
			</if>
			<if test="a_bank != null">
				a_bank = #{a_bank},
			</if>
			<if test="a_number != null">
				a_number = #{a_number},
			</if>
			<if test="b_name != null">
				b_name = #{b_name},
			</if>
			<if test="b_id_card != null">
				b_id_card = #{b_id_card},
			</if>
			<if test="category_name != null">
				category_name = #{category_name},
			</if>
			<if test="product_deadline != null">
				product_deadline = #{product_deadline},
			</if>
			<if test="sign_place != null">
				sign_place = #{sign_place},
			</if>
			<if test="b_data != null">
				b_data = #{b_data},
			</if>
			<if test="end_of_date != null">
				end_of_date = #{end_of_date},
			</if>
			<if test="create_user_id != null">
				create_user_id = #{create_user_id},
			</if>
			<if test="create_user_name != null">
				create_user_name = #{create_user_name},
			</if>
			<if test="create_timestamp != null">
				create_timestamp = #{create_timestamp},
			</if>
			<if test="last_update_user_id != null">
				last_update_user_id = #{last_update_user_id},
			</if>
			<if test="last_update_timestamp != null">
				last_update_timestamp = #{last_update_timestamp},
			</if>
			<if test="enable_flag != null">
				enable_flag = #{enable_flag},
			</if>
			<if test="contact_address != null">
				contact_address = #{contact_address},
			</if>
			<if test="post_code != null">
				post_code = #{post_code},
			</if>
			<if test="wms_inve_redeem_id != null">
				wms_inve_redeem_id = #{wms_inve_redeem_id},
			</if>
		</set>
		where
		wms_inve_transa_protocol_id = #{wms_inve_transa_protocol_id}
	</update>
	<select id="getListByEntity" parameterType="WmsInveTransaProtocol"
		resultType="WmsInveTransaProtocol">
		select
		wms_inve_transa_protocol_id,
		wms_inve_transa_id,
		wms_inve_transa_prod_id,
		prot_code,
		a_name,
		a_id_card,
		product_account,
		date_format(date_of_payment,'%Y-%m-%d') as date_of_payment_str,
		date_of_payment,
		a_bank,
		a_number,
		b_name,
		b_id_card,
		category_name,
		product_deadline,
		sign_place,
		b_data,
		date_format(end_of_date,'%Y-%m-%d') as end_of_date_str,
		end_of_date,
		create_user_id,
		create_user_name,
		date_format(create_timestamp,'%Y-%m-%d %H:%i:%s') as create_timestamp_str,
		create_timestamp,
		last_update_user_id,
		date_format(last_update_timestamp,'%Y-%m-%d %H:%i:%s') as last_update_timestamp_str,
		last_update_timestamp,
		enable_flag,
		contact_address,
		post_code
		from
		wms_inve_transa_protocol
		<where>
			<if test="wms_inve_transa_protocol_id != null">
				and wms_inve_transa_protocol_id = #{wms_inve_transa_protocol_id}
			</if>
			<if test="wms_inve_transa_id != null">
				and wms_inve_transa_id = #{wms_inve_transa_id}
			</if>
			<if test="wms_inve_transa_prod_id != null">
				and wms_inve_transa_prod_id = #{wms_inve_transa_prod_id}
			</if>
			<if test="prot_code != null">
				and prot_code = #{prot_code}
			</if>
			<if test="a_name != null">
				and a_name = #{a_name}
			</if>
			<if test="a_id_card != null">
				and a_id_card = #{a_id_card}
			</if>
			<if test="product_account != null">
				and product_account = #{product_account}
			</if>
			<if test="date_of_payment != null">
				and date_of_payment = #{date_of_payment}
			</if>
			<if test="a_bank != null">
				and a_bank = #{a_bank}
			</if>
			<if test="a_number != null">
				and a_number = #{a_number}
			</if>
			<if test="b_name != null">
				and b_name = #{b_name}
			</if>
			<if test="b_id_card != null">
				and b_id_card = #{b_id_card}
			</if>
			<if test="category_name != null">
				and category_name = #{category_name}
			</if>
			<if test="product_deadline != null">
				and product_deadline = #{product_deadline}
			</if>
			<if test="sign_place != null">
				and sign_place = #{sign_place}
			</if>
			<if test="b_data != null">
				and b_data = #{b_data}
			</if>
			<if test="end_of_date != null">
				and end_of_date = #{end_of_date}
			</if>
			<if test="create_user_id != null">
				and create_user_id = #{create_user_id}
			</if>
			<if test="create_user_name != null">
				and create_user_name = #{create_user_name}
			</if>
			<if test="create_timestamp != null">
				and create_timestamp = #{create_timestamp}
			</if>
			<if test="last_update_user_id != null">
				and last_update_user_id = #{last_update_user_id}
			</if>
			<if test="last_update_timestamp != null">
				and last_update_timestamp = #{last_update_timestamp}
			</if>
			<if test="enable_flag != null">
				and enable_flag = #{enable_flag}
			</if>
			<if test="contact_address != null">
				and contact_address = #{contact_address}
			</if>
			<if test="post_code != null">
				and post_code = #{post_code}
			</if>
			<if test="wms_inve_redeem_id != null">
				and wms_inve_redeem_id = #{wms_inve_redeem_id}
			</if>
			<if test="isExcludePKFlag != null and isExcludePKFlag == true">
				and wms_inve_transa_protocol_id != #{wms_inve_transa_protocol_id}
			</if>
		</where>
		order by wms_inve_transa_protocol_id desc
	</select>

	<select id="getByPk" parameterType="int" resultType="WmsInveTransaProtocol">
		select
		wms_inve_transa_protocol_id,
		wms_inve_transa_id,
		wms_inve_transa_prod_id,
		prot_code,
		a_name,
		a_id_card,
		product_account,
		date_format(date_of_payment,'%Y-%m-%d') as date_of_payment_str,
		date_of_payment,
		a_bank,
		a_number,
		b_name,
		b_id_card,
		category_name,
		product_deadline,
		sign_place,
		b_data,
		date_format(end_of_date,'%Y-%m-%d') as end_of_date_str,
		end_of_date,
		create_user_id,
		create_user_name,
		date_format(create_timestamp,'%Y-%m-%d %H:%i:%s') as create_timestamp_str,
		create_timestamp,
		last_update_user_id,
		date_format(last_update_timestamp,'%Y-%m-%d %H:%i:%s') as last_update_timestamp_str,
		last_update_timestamp,
		enable_flag,
		contact_address,
		post_code,
		wms_inve_redeem_id

		from
		wms_inve_transa_protocol
		where
		wms_inve_transa_prod_id = #{wms_inve_transa_prod_id}
		and wms_inve_redeem_id = "0" and enable_flag="1";
	</select>
	<!-- 赎回申请页面 -->
	<select id="getRedeemApply" parameterType="map" resultType="java.util.HashMap">
		SELECT
		t1.wms_inve_transa_protocol_id,
		t1.wms_inve_transa_id,
		t1.wms_inve_transa_prod_id,
		t1.prot_code,
		t4.bill_code,
		t4.is_order_extend,
		t4.financial_bill_code,
		t4.customer_email,
		t1.a_name,
		t1.a_id_card,
		t1.product_account,
		t1.date_of_payment,
		t1.a_bank,
		t1.a_number,
		t1.b_name,
		CONCAT(LEFT(t1.b_id_card,4),'**********',RIGHT(t1.b_id_card,4)) as b_id_card,
		t1.category_name,
		t1.product_deadline,
		t1.sign_place,
		t1.b_data,
		t1.end_of_date,
		t1.create_user_id,
		t1.create_user_name,
		t1.create_timestamp,
		date_format(t1.create_timestamp,'%Y-%m-%d') as create_timestamp_str,
		date_format(t1.create_timestamp,'%Y-%m-%d %H:%i:%s') as protocol_create_timestamp,
		t1.last_update_user_id,
		t1.last_update_timestamp,
		t1.enable_flag,
		t1.contact_address,
		t1.post_code,
		t1.wms_inve_redeem_id,
		t2.wms_inve_transa_prod_id,
		t2.wms_inve_transa_id,
		t2.wms_inve_pruduct_category_id,
		t2.expect_interest_account,
		t2.product_deadline_name,
		t2.bank_branch,
		t2.bank_of_deposit,
		(select d1.value_meaning from wms_sys_dict_data d1 where d1.wms_sys_dict_data_id = t2.bank_of_deposit_pro) as bank_of_deposit_pro,
		(select d2.value_meaning from wms_sys_dict_data d2 where d2.wms_sys_dict_data_id = t2.bank_of_deposit_city) as bank_of_deposit_city,
		CONCAT(LEFT(t2.card_no,4),'**********',RIGHT(t2.card_no,4)) as card_no,		
		(ADDDATE(t1.date_of_payment,INTERVAL 1 YEAR) &lt; NOW()) as exceed_year,<!-- 判断是否理财超过一年 &gt;表示“>” &lt;表示“<” -->
		<!-- 判断是否理财结束     预约赎回 不能用now计算是否到期 over_date_value不管用  只能用做页面初始化时判断是否到期-->
		(t1.end_of_date &lt; NOW()) as over_date_value,
		(datediff(NOW(),t1.end_of_date)) as income_day,<!-- 产品到期至今多少天-->
		<!--t2.product_interest,-->	
		case 
			when IFNULL(t4.transa_type, '1') = '1'			
				then (case t3.category_interest_pay_method when "1" then  t3.basic_monthly_rate*12 else t3.category_return_rate  end )	
 			else t2.product_interest 		
		end as product_interest,
		t3.category_return_rate as show_product_interest,
		
 		t3.basic_monthly_rate,
		t3.category_type,
		t3.category_deadline,
		t3.category_interest_pay_method,
		t3.category_rebate_way,
		t3.wms_inve_pruduct_category_id,
		t1.date_of_payment,
		date_format(t1.date_of_payment,'%Y-%m') as date_of_payment_str,
		date_format(now(),'%Y-%m') as now_time
		FROM wms_inve_transa_protocol t1,wms_inve_transa_prod t2, wms_inve_pruduct_category t3,wms_inve_transa t4
		<where>
			t1.wms_inve_transa_id = t2.wms_inve_transa_id
			and t1.wms_inve_transa_id = t4.wms_inve_transa_id
			and t1.wms_inve_transa_id in (#{wms_inve_transa_id})
			and t3.wms_inve_pruduct_category_id =t2.wms_inve_pruduct_category_id
			and t1.wms_inve_redeem_id = 0
		</where>
	</select>
	<!-- 赎回查询 -->
	<select id="getRedeemApplyByRedeemId" parameterType="map" resultType="java.util.HashMap">
		SELECT
			t1.cus_name as b_name,
			CONCAT(LEFT(t1.id_card,4),'**********',RIGHT(t1.id_card,4)) as b_id_card,			
			t1.bill_code,
			t1.financial_bill_code,
			IFNULL(t1.old_date_of_payment,t1.date_of_payment) as old_date_of_payment,
			t5.product_account,
			(select t6.date_of_payment from wms_inve_transa_protocol t6 where t6.wms_inve_transa_id = t1.wms_inve_transa_id limit 0,1) as date_of_payment,		
			(select t6.end_of_date from wms_inve_transa_protocol t6 where t6.wms_inve_transa_id = t1.wms_inve_transa_id limit 0,1) as end_of_date,
			t2.wms_inve_transa_prod_id,
			t2.wms_inve_transa_id,
			t2.wms_inve_pruduct_category_id,
			t2.expect_interest_account,
			t2.product_deadline_name,
			t2.bank_branch,
			t2.bank_of_deposit,
			(select d1.value_meaning from wms_sys_dict_data d1 where d1.wms_sys_dict_data_id = t2.bank_of_deposit_pro) as bank_of_deposit_pro,
			(select d2.value_meaning from wms_sys_dict_data d2 where d2.wms_sys_dict_data_id = t2.bank_of_deposit_city) as bank_of_deposit_city,
			CONCAT(LEFT(t2.card_no,4),'**********',RIGHT(t2.card_no,4)) as card_no,					  		
			<!-- t3.category_return_rate as product_interest, -->	
			case 
				when IFNULL(t1.transa_type, '1') = '1'			
					then t3.category_return_rate+0
	 			else t2.product_interest+0
			end as product_interest,	
	 		t3.basic_monthly_rate,
			t3.category_type,
			t3.category_deadline,
			t3.category_interest_pay_method,
			t3.category_rebate_way,
			t3.category_name,
			t3.wms_inve_pruduct_category_id,
			ifnull(t4.auth_person,'') as auth_person,
			ifnull(t4.auth_reason,0) as auth_reason
		FROM wms_inve_transa t1,wms_inve_transa_prod t2, wms_inve_pruduct_category t3,wms_inve_redeem t4,wms_inve_redeem_detail t5	
		<where>
			t1.wms_inve_transa_id = t2.wms_inve_transa_id			
			and t3.wms_inve_pruduct_category_id =t2.wms_inve_pruduct_category_id
			and t2.wms_inve_transa_id = t5.wms_inve_transa_id
			and t5.wms_inve_redeem_id = t4.wms_inve_redeem_id
			and t1.wms_inve_transa_id = #{wms_inve_transa_id}
			and t4.wms_inve_redeem_id = #{wms_inve_redeem_id}
			<!--  
			<foreach collection="checkedInveTransaIDs" item="wms_inve_transa_id"
				index="index" open="(" separator="," close=")">
				#{wms_inve_transa_id}
			</foreach>
			-->
			
		</where>
	</select>
	
	<!-- 赎回查询 -->
	<select id="getRedeemApplyByRedeemIdMoa" parameterType="map" resultType="java.util.HashMap">
		SELECT
			t1.cus_name as b_name,
			t1.id_card as b_id_card,
			t1.bill_code,
			t1.financial_bill_code,
			IFNULL(t1.old_date_of_payment,t1.date_of_payment) as old_date_of_payment,
			(select pm.personnel_shortCode from pm_personnel pm where pm.personnel_id=t1.bel_salesman_id_id) as personnel_shortCode,
			(select pm.personnel_name from pm_personnel pm where pm.personnel_id=t1.bel_salesman_id_id) as bel_salesman_name,
			FORMAT(t5.product_account,2) as product_account,
			(select t6.date_of_payment from wms_inve_transa_protocol t6 where t6.wms_inve_transa_id = t1.wms_inve_transa_id limit 0,1) as date_of_payment,		
			(select t6.end_of_date from wms_inve_transa_protocol t6 where t6.wms_inve_transa_id = t1.wms_inve_transa_id limit 0,1) as end_of_date,
			t2.wms_inve_transa_prod_id,
			t2.wms_inve_transa_id,
			t2.wms_inve_pruduct_category_id,
			t2.expect_interest_account,
			t2.product_deadline_name,
			t2.bank_branch,
			t2.bank_of_deposit,
			t2.card_no,  		
			t3.category_return_rate as product_interest,		
	 		t3.basic_monthly_rate,
			t3.category_type,
			t3.category_deadline,
			t3.category_interest_pay_method,
			t3.category_rebate_way,
			t3.category_name,
			t3.wms_inve_pruduct_category_id,
			t4.data_status
		FROM wms_inve_transa t1,wms_inve_transa_prod t2, wms_inve_pruduct_category t3,wms_inve_redeem t4,wms_inve_redeem_detail t5	
		<where>
			t1.wms_inve_transa_id = t2.wms_inve_transa_id			
			and t3.wms_inve_pruduct_category_id =t2.wms_inve_pruduct_category_id
			and t2.wms_inve_transa_id = t5.wms_inve_transa_id
			and t5.wms_inve_redeem_id = t4.wms_inve_redeem_id
			and t1.wms_inve_transa_id = #{wms_inve_transa_id}
			and t4.wms_inve_redeem_id = #{wms_inve_redeem_id}
		</where>
	</select>
	
	<!-- 更新用户 -->
	<update id="updateforback" parameterType="WmsInveTransaProtocol">
		update wms_inve_transa_protocol
		<set>
			<!-- <if test="wms_inve_transa_protocol_id != null">
				wms_inve_transa_protocol_id = #{wms_inve_transa_protocol_id},
			</if>-->
			<if test="wms_inve_transa_id != null">
				wms_inve_transa_id = #{wms_inve_transa_id},
			</if>
			<if test="wms_inve_transa_prod_id != null">
				wms_inve_transa_prod_id = #{wms_inve_transa_prod_id},
			</if>
			<if test="prot_code != null">
				prot_code = #{prot_code},
			</if>
			<if test="a_name != null">
				a_name = #{a_name},
			</if>
			<if test="a_id_card != null">
				a_id_card = #{a_id_card},
			</if>
			<if test="product_account != null">
				product_account = #{product_account},
			</if>
			<if test="date_of_payment != null">
				date_of_payment = #{date_of_payment},
			</if>
			<if test="a_bank != null">
				a_bank = #{a_bank},
			</if>
			<if test="a_number != null">
				a_number = #{a_number},
			</if>
			<if test="b_name != null">
				b_name = #{b_name},
			</if>
			<if test="b_id_card != null">
				b_id_card = #{b_id_card},
			</if>
			<if test="category_name != null">
				category_name = #{category_name},
			</if>
			<if test="product_deadline != null">
				product_deadline = #{product_deadline},
			</if>
			<if test="sign_place != null">
				sign_place = #{sign_place},
			</if>
			<if test="b_data != null">
				b_data = #{b_data},
			</if>
			<if test="end_of_date != null">
				end_of_date = #{end_of_date},
			</if>
			<if test="create_user_id != null">
				create_user_id = #{create_user_id},
			</if>
			<if test="create_user_name != null">
				create_user_name = #{create_user_name},
			</if>
			<if test="create_timestamp != null">
				create_timestamp = #{create_timestamp},
			</if>
			<if test="last_update_user_id != null">
				last_update_user_id = #{last_update_user_id},
			</if>
			<if test="last_update_timestamp != null">
				last_update_timestamp = #{last_update_timestamp},
			</if>
			<if test="enable_flag != null">
				enable_flag = #{enable_flag},
			</if>
			<if test="contact_address != null">
				contact_address = #{contact_address},
			</if>
			<if test="post_code != null">
				post_code = #{post_code},
			</if>
			<if test="wms_inve_redeem_id != null">
				wms_inve_redeem_id = #{wms_inve_redeem_id},
			</if>
		</set>
		<where>
			enable_flag=1
			and wms_inve_redeem_id = 0
			<if test="wms_inve_transa_id != null">
				and wms_inve_transa_id = #{wms_inve_transa_id}
			</if>
			<if test="wms_inve_transa_prod_id != null">
				and wms_inve_transa_prod_id = #{wms_inve_transa_prod_id}
			</if> 
			<if test="wms_inve_transa_protocol_id != null">
				and wms_inve_transa_protocol_id = #{wms_inve_transa_protocol_id}
			</if>
		</where>
		
	</update>
	<!-- 赎回申请查询客户总投资金额 -->
	<select id="getTotalInvestAmount" parameterType="int"
		resultType="java.util.HashMap">
		SELECT
		t1.bill_code,
		t1.id_card,
		t1.cus_name,
		t1.cus_birthday,
		t1.cus_gender,
		t1.cus_address,
		t1.post_code,
		t1.address_phone,
		t1.mobile_phone,
		t1.work_phone,
		t1.cus_fax,
		t1.wms_inve_transa_id,
		t1.wms_inve_customer_id,
		t1.contact_address,
		t1.customer_email,
		t1.bill_send_mode,
		t1.inve_transa_type,
		t1.product_total_count_lower,
		t1.product_total_count_upper,
		t1.data_status,
		(select value_meaning from wms_sys_dict_data where value_code = data_status
		and wms_sys_dict_id = 55)as data_status_name,
		t1.account_status,
		t1.pay_type,
		t1.pay_usr_id,
		t1.pay_account,
		t1.cash_pay_name,
		t1.act_account_usr_id,
		t1.date_of_act,
		t1.act_account,
		t1.fee_account,
		t1.salesman_name,
		t1.salesman_id,
		t1.salesman_city_code,
		t1.salesman_city,
		t1.salesman_dept_id,
		t1.create_user_id,
		t1.create_user_name,
		t1.create_user_dept_id,
		date_format(t1.create_timestamp,'%Y-%m-%d %H:%i:%s') as create_timestamp_str,
		t1.last_update_user_id,
		t1.last_update_timestamp,
		t1.enable_flag,
		t2.product_account
	
		FROM wms_inve_transa t1,wms_inve_transa_prod t2
		<where>
			t1.enable_flag=1 and t2.enable_flag=1 
			and 
			t1.wms_inve_transa_id = t2.wms_inve_transa_id
			and 
			t1.wms_inve_customer_id = #{wms_inve_customer_id}
			and 
            t1.data_status in (4,5,6)
		</where>
	</select>
	<select id="getListByEntityIsNull" parameterType="WmsInveTransaProtocol"
		resultType="WmsInveTransaProtocol">
		select
		wms_inve_transa_protocol_id,
		wms_inve_transa_id,
		wms_inve_transa_prod_id,
		a_name,
		a_id_card,
		product_account,
		date_format(date_of_payment,'%Y-%m-%d') as date_of_payment_str,
		date_of_payment,
		a_bank,
		a_number,
		b_name,
		b_id_card,
		category_name,
		product_deadline,
		sign_place,
		b_data,
		date_format(end_of_date,'%Y-%m-%d') as end_of_date_str,
		end_of_date,
		create_user_id,
		create_user_name,
		date_format(create_timestamp,'%Y-%m-%d %H:%i:%s') as create_timestamp_str,
		create_timestamp,
		last_update_user_id,
		date_format(last_update_timestamp,'%Y-%m-%d %H:%i:%s') as last_update_timestamp_str,
		last_update_timestamp,
		enable_flag,
		contact_address,
		post_code
		from
		wms_inve_transa_protocol
		<where>
			<if test="wms_inve_transa_protocol_id != null">
				and wms_inve_transa_protocol_id = #{wms_inve_transa_protocol_id}
			</if>
			<if test="wms_inve_transa_id != null">
				and wms_inve_transa_id = #{wms_inve_transa_id}
			</if>
			<if test="wms_inve_transa_prod_id != null">
				and wms_inve_transa_prod_id = #{wms_inve_transa_prod_id}
			</if>
			<if test="a_name != null">
				and a_name = #{a_name}
			</if>
			<if test="a_id_card != null">
				and a_id_card = #{a_id_card}
			</if>
			<if test="product_account != null">
				and product_account = #{product_account}
			</if>
			<if test="date_of_payment != null">
				and date_of_payment = #{date_of_payment}
			</if>
			<if test="a_bank != null">
				and a_bank = #{a_bank}
			</if>
			<if test="a_number != null">
				and a_number = #{a_number}
			</if>
			<if test="b_name != null">
				and b_name = #{b_name}
			</if>
			<if test="b_id_card != null">
				and b_id_card = #{b_id_card}
			</if>
			<if test="category_name != null">
				and category_name = #{category_name}
			</if>
			<if test="product_deadline != null">
				and product_deadline = #{product_deadline}
			</if>
			<if test="sign_place != null">
				and sign_place = #{sign_place}
			</if>
			<if test="b_data != null">
				and b_data = #{b_data}
			</if>
			<if test="end_of_date != null">
				and end_of_date = #{end_of_date}
			</if>
			<if test="create_user_id != null">
				and create_user_id = #{create_user_id}
			</if>
			<if test="create_user_name != null">
				and create_user_name = #{create_user_name}
			</if>
			<if test="create_timestamp != null">
				and create_timestamp = #{create_timestamp}
			</if>
			<if test="last_update_user_id != null">
				and last_update_user_id = #{last_update_user_id}
			</if>
			<if test="last_update_timestamp != null">
				and last_update_timestamp = #{last_update_timestamp}
			</if>
			<if test="enable_flag != null">
				and enable_flag = #{enable_flag}
			</if>
			<if test="contact_address != null">
				and contact_address = #{contact_address}
			</if>
			<if test="post_code != null">
				and post_code = #{post_code}
			</if>
			<if test="isExcludePKFlag != null and isExcludePKFlag == true">
				and wms_inve_transa_protocol_id != #{wms_inve_transa_protocol_id}
			</if>
			<if test="wms_inve_redeem_id != null">
				and wms_inve_redeem_id = #{wms_inve_redeem_id}
			</if>
		</where>
	</select>
	<!-- 获取协议信息 -->
	<select id="getProtocolData" parameterType="map" resultType="java.util.HashMap">
		SELECT
		t1.wms_inve_transa_protocol_id,
		t1.wms_inve_transa_id,
		t1.wms_inve_transa_prod_id,
		t1.prot_code,
		t1.a_name,
		t1.a_id_card,
		t1.product_account,
		t1.date_of_payment,
		t1.a_bank,
		t1.a_number,
		t1.b_name,
		t1.b_id_card,
		t1.category_name,
		t1.product_deadline,
		t1.sign_place,
		t1.b_data,
		t1.end_of_date,
		t1.create_user_id,
		t1.create_user_name,
		t1.create_timestamp,
		date_format(t1.create_timestamp,'%Y-%m-%d') as create_timestamp_str,
		date_format(t1.create_timestamp,'%Y-%m-%d %H:%i:%s') as protocol_create_timestamp,
		t1.last_update_user_id,
		t1.last_update_timestamp,
		t1.enable_flag,
		t1.contact_address,
		t1.post_code,
		t1.wms_inve_redeem_id,
		t2.wms_inve_transa_prod_id,
		t2.wms_inve_transa_id,
		t2.wms_inve_pruduct_category_id,
		t2.product_interest,
		t2.expect_interest_account,
		t2.product_deadline_name
		FROM wms_inve_transa_protocol t1,wms_inve_transa_prod t2
		<where>
			t1.wms_inve_transa_id = t2.wms_inve_transa_id
			and t1.wms_inve_transa_id = #{wms_inve_transa_id}
			and t1.wms_inve_redeem_id = #{wms_inve_redeem_id}
		</where>
	</select>
	<!-- get entity by pk -->
	<select id="getInfoByCode" parameterType="String" resultType="java.util.HashMap">
		select
		wms_inve_transa_protocol_id,
		wms_inve_transa_id,
		wms_inve_transa_prod_id,
		prot_code,
		a_name,
		a_id_card,
		product_account,
		date_format(date_of_payment,'%Y-%m-%d') as date_of_payment_str,
		date_of_payment,
		a_bank,
		a_number,
		b_name,
		b_id_card,
		category_name,
		product_deadline,
		sign_place,
		b_data,
		date_format(end_of_date,'%Y-%m-%d') as end_of_date_str,
		end_of_date,
		create_user_id,
		create_user_name,
		date_format(create_timestamp,'%Y-%m-%d %H:%i:%s') as create_timestamp_str,
		create_timestamp,
		last_update_user_id,
		date_format(last_update_timestamp,'%Y-%m-%d %H:%i:%s') as last_update_timestamp_str,
		last_update_timestamp,
		enable_flag,
		contact_address,
		post_code
		from
		wms_inve_transa_protocol
		where
		prot_code = #{prot_code}
	</select>
	<!-- get entity by pk 暂时不启用 2015-01-26 <select id="getCodeById" parameterType="map" 
		resultType="java.util.HashMap"> select prot_code from wms_inve_transa_protocol 
		where enable_flag=1 and wms_inve_transa_id = #{wms_inve_transa_id} and wms_inve_transa_prod_id 
		= #{wms_inve_transa_prod_id} and wms_inve_redeem_id = #{wms_inve_redeem_id} 
		</select> -->
	
	<!-- 获取客户的该产品的所有上单信息 -->
	<select id="getAllProtocolForCategoryAndIDCard" parameterType="map" resultType="WmsInveTransaProtocol">
		select
			p.wms_inve_transa_protocol_id,
			p.wms_inve_transa_id,
			p.wms_inve_transa_prod_id,
			p.a_name,
			p.a_id_card,
			p.product_account,
			date_format(p.date_of_payment,'%Y-%m-%d') as date_of_payment_str,
			p.date_of_payment,
			p.a_bank,
			p.a_number,
			p.b_name,
			p.b_id_card,
			p.category_name,
			p.product_deadline,
			p.sign_place,
			p.b_data,
			date_format(p.end_of_date,'%Y-%m-%d') as end_of_date_str,
			p.end_of_date,
			p.create_user_id,
			p.create_user_name,
			date_format(p.create_timestamp,'%Y-%m-%d %H:%i:%s') as create_timestamp_str,
			p.create_timestamp,
			p.last_update_user_id,
			date_format(p.last_update_timestamp,'%Y-%m-%d %H:%i:%s') as last_update_timestamp_str,
			p.last_update_timestamp,
			p.enable_flag,
			p.contact_address,
			p.post_code
		from wms_inve_transa_protocol p, wms_inve_transa_prod tp, wms_inve_pruduct_category c
		where p.wms_inve_transa_prod_id = tp.wms_inve_transa_prod_id 
			and tp.wms_inve_pruduct_category_id = c.wms_inve_pruduct_category_id
			and p.b_id_card = #{b_id_card} 
			and c.wms_inve_pruduct_category_id = #{wms_inve_pruduct_category_id}
			and p.wms_inve_redeem_id = '0'
	</select>
	
	<update id="setTransaProtocolFailure" parameterType="int">
		update wms_inve_transa_protocol set enable_flag = '0'
		where wms_inve_transa_id = #{wms_inve_transa_id} and wms_inve_redeem_id = '0' and enable_flag = '1'
	</update>
	
	<update id="updateProtocolRedeem" parameterType="int">
	    update 
	    	wms_inve_transa_protocol 
	    set 
	    	wms_inve_redeem_id = 1 
	    where 
		    wms_inve_transa_prod_id = #{prod_id} 
		and 
			wms_inve_redeem_id = 0
	</update>
	<select id="getProtocolByCondition" parameterType="WmsInveTransaProtocol"
		resultType="WmsInveTransaProtocol">
		select
		wms_inve_transa_protocol_id,
		wms_inve_transa_id,
		wms_inve_transa_prod_id,
		prot_code,
		a_name,
		a_id_card,
		product_account,
		date_format(date_of_payment,'%Y-%m-%d') as date_of_payment_str,
		date_of_payment,
		a_bank,
		a_number,
		b_name,
		b_id_card,
		category_name,
		product_deadline,
		sign_place,
		b_data,
		date_format(end_of_date,'%Y-%m-%d') as end_of_date_str,
		end_of_date,
		create_user_id,
		create_user_name,
		date_format(create_timestamp,'%Y-%m-%d %H:%i:%s') as create_timestamp_str,
		create_timestamp,
		last_update_user_id,
		date_format(last_update_timestamp,'%Y-%m-%d %H:%i:%s') as last_update_timestamp_str,
		last_update_timestamp,
		enable_flag,
		contact_address,
		post_code,
		wms_inve_redeem_id
		from
		wms_inve_transa_protocol
		<where>
			<if test="wms_inve_transa_protocol_id != null">
				and wms_inve_transa_protocol_id = #{wms_inve_transa_protocol_id}
			</if>
			<if test="wms_inve_transa_id != null">
				and wms_inve_transa_id = #{wms_inve_transa_id}
			</if>
			<if test="wms_inve_transa_prod_id != null">
				and wms_inve_transa_prod_id = #{wms_inve_transa_prod_id}
			</if>
			<if test="prot_code != null">
				and prot_code = #{prot_code}
			</if>
			<if test="a_name != null">
				and a_name = #{a_name}
			</if>
			<if test="a_id_card != null">
				and a_id_card = #{a_id_card}
			</if>
			<if test="product_account != null">
				and product_account = #{product_account}
			</if>
			<if test="date_of_payment != null">
				and date_of_payment = #{date_of_payment}
			</if>
			<if test="a_bank != null">
				and a_bank = #{a_bank}
			</if>
			<if test="a_number != null">
				and a_number = #{a_number}
			</if>
			<if test="b_name != null">
				and b_name = #{b_name}
			</if>
			<if test="b_id_card != null">
				and b_id_card = #{b_id_card}
			</if>
			<if test="category_name != null">
				and category_name = #{category_name}
			</if>
			<if test="product_deadline != null">
				and product_deadline = #{product_deadline}
			</if>
			<if test="sign_place != null">
				and sign_place = #{sign_place}
			</if>
			<if test="b_data != null">
				and b_data = #{b_data}
			</if>
			<if test="end_of_date != null">
				and end_of_date = #{end_of_date}
			</if>
			<if test="create_user_id != null">
				and create_user_id = #{create_user_id}
			</if>
			<if test="create_user_name != null">
				and create_user_name = #{create_user_name}
			</if>
			<if test="create_timestamp != null">
				and create_timestamp = #{create_timestamp}
			</if>
			<if test="last_update_user_id != null">
				and last_update_user_id = #{last_update_user_id}
			</if>
			<if test="last_update_timestamp != null">
				and last_update_timestamp = #{last_update_timestamp}
			</if>
			<if test="enable_flag != null">
				and enable_flag = #{enable_flag}
			</if>
			<if test="contact_address != null">
				and contact_address = #{contact_address}
			</if>
			<if test="post_code != null">
				and post_code = #{post_code}
			</if>
			<if test="wms_inve_redeem_id != null">
				and wms_inve_redeem_id = #{wms_inve_redeem_id}
			</if>
		</where>
	</select>
	<select id="getCostomerAmount" resultType="java.util.HashMap" parameterType="map">
		SELECT
			tt.costomer_id AS customer_id,
			IFNULL(ttp.stock_amount,0) as stock_amount
		FROM
			(
				SELECT
					t.costomer_id
				FROM
					wms_inve_transa t
				WHERE
					t.data_status IN (4, 6)
				<if test="cusIdList != null">
					AND t.costomer_id in
					<foreach collection="cusIdList" item="cus_id"
						index="index" open="(" separator="," close=")">
						#{cus_id}
					</foreach>
				</if>
				AND t.enable_flag = 1
				GROUP BY
					t.costomer_id
			) tt
		LEFT JOIN (
			SELECT
				t.costomer_id,
				sum(
					IFNULL(tp.product_account, 0)
				) AS stock_amount
			FROM
				wms_inve_transa t,
				wms_inve_transa_prod tp
			WHERE
				t.wms_inve_transa_id = tp.wms_inve_transa_id
			<if test="cusIdList != null">
				AND t.costomer_id in
				<foreach collection="cusIdList" item="cus_id"
					index="index" open="(" separator="," close=")">
					#{cus_id}
				</foreach>
			</if>
			AND t.data_status = 4
			AND t.enable_flag = 1
			AND tp.enable_flag = 1
			GROUP BY
				t.costomer_id
		) ttp ON tt.costomer_id = ttp.costomer_id
	</select>
	
</mapper> 
