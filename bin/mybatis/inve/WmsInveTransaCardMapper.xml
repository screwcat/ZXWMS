<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.zx.emanage.inve.persist.WmsInveTransaCardDao">
	<!-- get entity by pk -->
	<select id="get" parameterType="int" resultType="WmsInveTransaCard">
		select
		wms_inve_transa_card_id,
		wms_inve_transa_id,
		card_owner_name,
		card_no,
		bank_of_deposit_pro,
		bank_of_deposit_city,
		bank_of_deposit_name,
		bank_branch,
		wms_inve_pos_id,
		pay_account,
		is_finish,
		act_account,
		create_user_id,
		create_user_name,
		date_format(create_timestamp,'%Y-%m-%d %H:%i:%s') as create_timestamp_str,
		create_timestamp,
		last_update_user_id,
		date_format(last_update_timestamp,'%Y-%m-%d %H:%i:%s') as last_update_timestamp_str,
		last_update_timestamp,
		enable_flag,
		pay_type,
		should_pay_account
		from
		wms_inve_transa_card
		where
		wms_inve_transa_card_id = #{wms_inve_transa_card_id}
	</select>

	<!-- count num -->
	<select id="findCount" parameterType="map" resultType="int">
		select count(wms_inve_transa_card_id) as count
		from
		wms_inve_transa_card
		<where>
			<if test="paramname != null">
				<!-- and columnName = #{columnName} -->
			</if>
		</where>
	</select>

	<!-- list -->
	<select id="search" parameterType="map" resultType="java.util.HashMap">
		select
		wms_inve_transa_card_id,
		wms_inve_transa_id,
		card_owner_name,
		card_no,
		bank_of_deposit_pro,
		bank_of_deposit_city,
		bank_of_deposit_name,
		bank_branch,
		wms_inve_pos_id,
		pay_account,
		is_finish,
		act_account,
		create_user_id,
		create_user_name,
		date_format(create_timestamp,'%Y-%m-%d %H:%i:%s') as create_timestamp_str,
		create_timestamp,
		last_update_user_id,
		date_format(last_update_timestamp,'%Y-%m-%d %H:%i:%s') as last_update_timestamp_str,
		last_update_timestamp,
		enable_flag,
		pay_type,
		should_pay_account
		from wms_inve_transa_card
		<where>
			<if test="paramname != null">
				<!-- and columnName = #{columnName} -->
			</if>
			<if test="wms_inve_transa_id != null">
                and wms_inve_transa_id = #{wms_inve_transa_id}
            </if>
            <if test="pay_type != null">
                and pay_type = #{pay_type}
            </if>
		</where>
		<if test="sortname != '' and sortorder !=''">
			ORDER BY ${sortname} ${sortorder}
		</if>
		<if test="offset != null and pagesize !=null">
			LIMIT ${offset} , ${pagesize}
		</if>
	</select>

	<select id="searchByWms_inve_transa_id" parameterType="map"
		resultType="java.util.HashMap">
		SELECT
		    t1.wms_inve_transa_card_id,
	        t1.wms_inve_transa_id,
	        t1.card_owner_name,
	        t1.card_no,
	        t1.bank_of_deposit_pro,
	        t1.bank_of_deposit_city,
	        t1.bank_of_deposit_name,
	        t1.bank_branch,
	        t1.wms_inve_pos_id,
	        t1.pay_account,
	        t1.is_finish,
	        t1.act_account,
	        t1.create_user_id,
	        t1.create_user_name,
	        date_format(t1.create_timestamp,'%Y-%m-%d %H:%i:%s') as create_timestamp,
	        t1.last_update_user_id,
	        date_format(t1.last_update_timestamp,'%Y-%m-%d %H:%i:%s') as last_update_timestamp,
	        t1.enable_flag,
	        t1.pay_type,
	        t1.should_pay_account,
	        t5.bill_code
		FROM 
			wms_inve_transa_card t1 
		LEFT JOIN 
			wms_inve_transa t2 
		ON 
			t1.wms_inve_transa_id=t2.wms_inve_transa_id
		LEFT JOIN 
			wms_inve_redeem_principal_detail t3 
		ON 
			t1.wms_inve_redeem_principal_detail_id=t3.wms_inve_redeem_principal_detail_id
		LEFT JOIN 
			wms_inve_redeem_detail t4 
		ON 
			t3.wms_inve_redeem_detail_id = t4.wms_inve_redeem_detail_id 
		LEFT JOIN 
			wms_inve_redeem t5 
		ON 
			t4.wms_inve_redeem_id=t5.wms_inve_redeem_id
		<where>
			t1.enable_flag=1
			<if test="wms_inve_transa_id != null">
				and t1.wms_inve_transa_id=#{wms_inve_transa_id}
			</if>
			<if test="pay_type !=null">
			    and t2.pay_type=#{pay_type}
			</if>
		</where>
		<if test="sortname != '' and sortorder !=''">
			ORDER BY ${sortname} ${sortorder}
		</if>
		<if test="offset != null and pagesize !=null">
			LIMIT ${offset} , ${pagesize}
		</if>
	</select>

	<!-- save -->
	<insert id="save" parameterType="WmsInveTransaCard"
		useGeneratedKeys="true" keyProperty="wms_inve_transa_card_id">
		INSERT INTO wms_inve_transa_card
		(
		wms_inve_transa_card_id,

		wms_inve_transa_id,

		card_owner_name,

		card_no,

		bank_of_deposit_pro,

		bank_of_deposit_city,

		bank_of_deposit_name,

		bank_branch,

		wms_inve_pos_id,

		pay_account,

		is_finish,

		act_account,

		create_user_id,

		create_user_name,

		create_timestamp,

		last_update_user_id,

		last_update_timestamp,

		enable_flag,

		pay_type,
		
		should_pay_account,
		
		wms_inve_redeem_principal_detail_id,
		is_valid
		)
		VALUES
		(
		#{wms_inve_transa_card_id},
		#{wms_inve_transa_id},
		#{card_owner_name},
		#{card_no},
		#{bank_of_deposit_pro},
		#{bank_of_deposit_city},
		#{bank_of_deposit_name},
		#{bank_branch},
		#{wms_inve_pos_id},
		#{pay_account},
		#{is_finish},
		#{act_account},
		#{create_user_id},
		#{create_user_name},
		#{create_timestamp},
		#{last_update_user_id},
		#{last_update_timestamp},
		#{enable_flag},
		#{pay_type},
		#{should_pay_account},
		#{wms_inve_redeem_principal_detail_id},
		#{is_valid}
		);
	</insert>

	<!-- 更新用户 -->
	<update id="update" parameterType="WmsInveTransaCard">
		update wms_inve_transa_card
		<set>
			<if test="wms_inve_transa_card_id != null">
				wms_inve_transa_card_id = #{wms_inve_transa_card_id},
			</if>
			<if test="wms_inve_transa_id != null">
				wms_inve_transa_id = #{wms_inve_transa_id},
			</if>
			<if test="card_owner_name != null">
				card_owner_name = #{card_owner_name},
			</if>
			<if test="card_no != null">
				card_no = #{card_no},
			</if>
			<if test="bank_of_deposit_pro != null">
				bank_of_deposit_pro = #{bank_of_deposit_pro},
			</if>
			<if test="bank_of_deposit_city != null">
				bank_of_deposit_city = #{bank_of_deposit_city},
			</if>
			<if test="bank_of_deposit_name != null">
				bank_of_deposit_name = #{bank_of_deposit_name},
			</if>
			<if test="bank_branch != null">
				bank_branch = #{bank_branch},
			</if>
			<if test="wms_inve_pos_id != null">
				wms_inve_pos_id = #{wms_inve_pos_id},
			</if>
			<if test="pay_account != null">
				pay_account = #{pay_account},
			</if>
			<if test="is_finish != null">
				is_finish = #{is_finish},
			</if>
			<if test="act_account != null">
				act_account = #{act_account},
			</if>
			<if test="create_user_id != null">
				create_user_id = #{create_user_id},
			</if>
			<if test="create_user_name != null">
				create_user_name = #{create_user_name},
			</if>
			<if test="create_timestamp != null">
				create_timestamp = #{create_timestamp},
			</if>
			<if test="last_update_user_id != null">
				last_update_user_id = #{last_update_user_id},
			</if>
			<if test="last_update_timestamp != null">
				last_update_timestamp = #{last_update_timestamp},
			</if>
			<if test="enable_flag != null">
				enable_flag = #{enable_flag},
			</if>
			<if test="should_pay_account != null">
				should_pay_account = #{should_pay_account},
			</if>
			<if test="wms_inve_redeem_principal_detail_id!=null">
				wms_inve_redeem_principal_detail_id = #{wms_inve_redeem_principal_detail_id}
			</if>
			<if test="is_valid != null">
				is_valid = #{is_valid}
			</if>
		</set>
		where
		wms_inve_transa_card_id = #{wms_inve_transa_card_id}
	</update>

	<update id="updateForJEDZ" parameterType="WmsInveTransaCard">
		update wms_inve_transa_card
		<set>
			<if test="is_finish != null">
				is_finish = #{is_finish},
			</if>
			<if test="act_account != null">
				act_account = #{act_account},
			</if>
			<if test="last_update_user_id != null">
				last_update_user_id = #{last_update_user_id},
			</if>
			<if test="last_update_timestamp != null">
				last_update_timestamp = #{last_update_timestamp},
			</if>
		</set>
		where
		wms_inve_transa_card_id = #{wms_inve_transa_card_id}
	</update>
	<select id="getListByEntity" parameterType="WmsInveTransaCard"
		resultType="WmsInveTransaCard">
		select
		wms_inve_transa_card_id,
		wms_inve_transa_id,
		card_owner_name,
		card_no,
		bank_of_deposit_pro,
		bank_of_deposit_city,
		bank_of_deposit_name,
		bank_branch,
		wms_inve_pos_id,
		pay_account,
		is_finish,
		act_account,
		create_user_id,
		create_user_name,
		date_format(create_timestamp,'%Y-%m-%d %H:%i:%s') as create_timestamp_str,
		create_timestamp,
		last_update_user_id,
		date_format(last_update_timestamp,'%Y-%m-%d %H:%i:%s') as last_update_timestamp_str,
		last_update_timestamp,
		enable_flag,
		should_pay_account
		from
		wms_inve_transa_card
		<where>
			<if test="wms_inve_transa_card_id != null">
				and wms_inve_transa_card_id = #{wms_inve_transa_card_id}
			</if>
			<if test="wms_inve_transa_id != null">
				and wms_inve_transa_id = #{wms_inve_transa_id}
			</if>
			<if test="card_owner_name != null">
				and card_owner_name = #{card_owner_name}
			</if>
			<if test="card_no != null">
				and card_no = #{card_no}
			</if>
			<if test="bank_of_deposit_pro != null">
				and bank_of_deposit_pro = #{bank_of_deposit_pro}
			</if>
			<if test="bank_of_deposit_city != null">
				and bank_of_deposit_city = #{bank_of_deposit_city}
			</if>
			<if test="bank_of_deposit_name != null">
				and bank_of_deposit_name = #{bank_of_deposit_name}
			</if>
			<if test="bank_branch != null">
				and bank_branch = #{bank_branch}
			</if>
			<if test="wms_inve_pos_id != null">
				and wms_inve_pos_id = #{wms_inve_pos_id}
			</if>
			<if test="pay_account != null">
				and pay_account = #{pay_account}
			</if>
			<if test="is_finish != null">
				and is_finish = #{is_finish}
			</if>
			<if test="act_account != null">
				and act_account = #{act_account}
			</if>
			<if test="create_user_id != null">
				and create_user_id = #{create_user_id}
			</if>
			<if test="create_user_name != null">
				and create_user_name = #{create_user_name}
			</if>
			<if test="create_timestamp != null">
				and create_timestamp = #{create_timestamp}
			</if>
			<if test="last_update_user_id != null">
				and last_update_user_id = #{last_update_user_id}
			</if>
			<if test="last_update_timestamp != null">
				and last_update_timestamp = #{last_update_timestamp}
			</if>
			<if test="enable_flag != null">
				and enable_flag = #{enable_flag}
			</if>
			<if test="should_pay_account != null">
				and should_pay_account != #{should_pay_account}
			</if>
			<if test="isExcludePKFlag != null and isExcludePKFlag == true">
				and wms_inve_transa_card_id != #{wms_inve_transa_card_id}
			</if>
			<if test="pay_type != null">
				and pay_type = #{pay_type}
			</if>
		</where>
	</select>
	<!-- 【财务管理】【理财上单】【对账报表】 账单详情 -->
	<select id="getWmsInveTransaCard" parameterType="int"
		resultType="java.util.HashMap">
		select
		t1.wms_inve_transa_card_id,
		t1.wms_inve_transa_id,
		t1.card_owner_name,
		t1.card_no,
		t1.bank_of_deposit_pro,
		t1.bank_of_deposit_city,
		t1.bank_of_deposit_name,
		t1.bank_branch,
		t1.wms_inve_pos_id,
		t1.pay_account,
		t1.is_finish,
		t1.act_account,
		t1.create_user_id,
		t1.create_user_name,
		date_format(t1.create_timestamp,'%Y-%m-%d %H:%i:%s') as create_timestamp_str,
		t1.create_timestamp,
		t1.last_update_user_id,
		date_format(t1.last_update_timestamp,'%Y-%m-%d %H:%i:%s') as last_update_timestamp_str,
		t1.last_update_timestamp,
		t1.enable_flag,
		t1.pay_type,
		t2.wms_inve_pos_id,
		t2.pos_name,
		t2.pos_code,
		t2.create_user_id,
		t2.create_user_name,
		t2.create_timestamp,
		t2.last_update_user_id,
		t2.last_update_timestamp,
		t2.enable_flag,
		t2.pos_bank,
		t2.pos_bank_card,
		t2.remark,
		t1.wms_inve_redeem_principal_detail_id
		from
		wms_inve_transa_card t1,wms_inve_pos t2
		where
		t1.wms_inve_transa_id = #{wms_inve_transa_id}
		and t1.wms_inve_pos_id = t2.wms_inve_pos_id
	</select>
	<!-- 根据上单信息表主键删除，该单据所对应的支付卡信息 -->
	<delete id="deleteForInfo" parameterType="int">
	   delete from wms_inve_transa_card where wms_inve_transa_id = #{wms_inve_transa_id}
	</delete>
	<!-- 【财务管理】【理财上单】【对账表报表】 列表数据查询  结果为上单信息表account_status状态为已支付,已到账,部分到账结果集 -->
    <select id="getAmountCheckingReport" parameterType="map"
        resultType="java.util.HashMap">
       SELECT
		    t1.bill_code,
		    
		    t1.wms_inve_transa_id,
		    
		    t1.wms_inve_customer_id,
		    
		    t2.wms_inve_transa_prod_id,
		    
		    t1.cus_name,
		    
		    t2.wms_inve_pruduct_category_id,
		    
		    t2.category_name,
		    
		    t2.org_product_account,
		    
		    t1.date_of_payment,
		    
		    t1.date_of_act,
		    
		    t1.pay_type,
		    
		    (select bin(t1.pay_type)) as pay_type_binary,
		    
		   <!--  (case (select bin(t1.pay_type)) when '1' then '续单本金' when '100' then '现金' when '110' then '现金+银行卡'  when '111' then '现金+ 银行卡 + 续单本金'  when '101' then '现金+续单本金'  when '11' then '银行卡+续单本金' when '10' then '银行卡' when '0' then '单据续期' END) as pay_type_name, -->
		    
		    t1.pay_account,
		    
		    t1.account_status,
		    
		    (case t1.account_status when '1' then '待支付' when '2' then '已支付' when '3' then '已到账' when '4' then '部分到账'END ) as account_status_name,

		    (select bank_of_deposit_name from wms_inve_transa_card where wms_inve_transa_id=t1.wms_inve_transa_id and pay_type=2 LIMIT 1) as bank_of_deposit_name,

		    (select card_no from wms_inve_transa_card where wms_inve_transa_id=t1.wms_inve_transa_id and pay_type=2 LIMIT 1) as card_no,

		    (select pos_code from wms_inve_pos where wms_inve_pos_id=(select wms_inve_pos_id from wms_inve_transa_card where wms_inve_transa_id=t1.wms_inve_transa_id and pay_type=2  LIMIT 1)) as pos_code,

		    (select pos_bank_card from wms_inve_pos where wms_inve_pos_id=(select wms_inve_pos_id from wms_inve_transa_card where wms_inve_transa_id=t1.wms_inve_transa_id and pay_type=2  LIMIT 1)) as pos_bank_card,
		    
		    (select pos_bank from wms_inve_pos where wms_inve_pos_id=(select wms_inve_pos_id from wms_inve_transa_card where wms_inve_transa_id=t1.wms_inve_transa_id and pay_type=2  LIMIT 1)) as pos_bank,
		    
		    t1.data_status,
		    
		    (select value_meaning from wms_sys_dict_data where value_code = data_status and wms_sys_dict_id = 55)as data_status_name,
		    
		    (select SUM(act_account) from wms_inve_transa_card where wms_inve_transa_id=t1.wms_inve_transa_id) as act_account,
		    
		    t1.bill_source,
			(select value_meaning from wms_sys_dict_data where value_code = bill_source
			and wms_sys_dict_id = 97) as bill_source_name
		    
		    FROM wms_inve_transa t1,wms_inve_transa_prod t2 
           <where>
             t1.wms_inve_transa_id = t2.wms_inve_transa_id and t1.account_status in (2,3,4) and t1.data_status !='7' and t1.wms_inve_transa_id  in ((select wms_inve_transa_id from wms_inve_transa_card))

            <if test="bill_code != null">
                and t1.bill_code like #{bill_code}
            </if>

            <if test="cus_name != null">
                and t1.cus_name like #{cus_name}
            </if>
            
            <if test="account_status!= null">
                and t1.account_status=#{account_status}
            </if>
            <if test="bill_source != null">
				and t1.bill_source=#{bill_source}
			</if>
            <if test="date_of_payment_begin != null">
                and date_format(t1.date_of_payment,'%Y-%m-%d') &gt;=#{date_of_payment_begin}
                
            </if>
            <if test="date_of_payment_end !=null">
                and date_format(t1.date_of_payment,'%Y-%m-%d') &lt;=#{date_of_payment_end}
            </if>
        </where>
        <if test="sortname != '' and sortorder !=''">
            ORDER BY ${sortname} ${sortorder}
        </if>
        <if test="offset != null and pagesize !=null">
            LIMIT ${offset} , ${pagesize}
        </if>
    </select>
    <!-- 【财务管理】【理财上单】【对账报表】 列表数据数 结果为上单信息表account_status状态为已支付,已到账,部分到账结果集-->
    <select id="findCountAmountCheckingReport" parameterType="map" resultType="int">
        select count(t1.wms_inve_transa_id) as count
        FROM wms_inve_transa t1,wms_inve_transa_prod t2 
        <where>
            t1.wms_inve_transa_id = t2.wms_inve_transa_id and t1.account_status in (2,3,4) and t1.data_status !='7' and t1.wms_inve_transa_id  in ((select wms_inve_transa_id from wms_inve_transa_card))
             <if test="bill_code != null">
                and t1.bill_code like #{bill_code}
            </if>

            <if test="cus_name != null">
                and t1.cus_name like #{cus_name}
            </if>
            
            <if test="account_status!= null">
                and t1.account_status=#{account_status}
            </if>

            <if test="date_of_payment_begin != null">
                and date_format(t1.date_of_payment,'%Y-%m-%d') &gt;=#{date_of_payment_begin}
                
            </if>
            
            <if test="date_of_payment_end !=null">
                and date_format(t1.date_of_payment,'%Y-%m-%d') &lt;=#{date_of_payment_end}
            </if>
        </where>
    </select>
    <!--【财务管理】【理财上单】【金额到账】 列表数据显示-->
    <select id="searchForJEDZ" parameterType="map" resultType="java.util.HashMap">
      SELECT
            t1.bill_code,
            
            t1.wms_inve_transa_id,
            
            t1.wms_inve_customer_id,
            
            t2.wms_inve_transa_prod_id,
            
            t1.cus_name,
            
            t2.wms_inve_pruduct_category_id,
            
            t2.category_name,
            
            t2.org_product_account,
            
            t1.date_of_payment,
            
            t1.date_of_act,
            
            t1.pay_type,
            
            (select bin(t1.pay_type)) as pay_type_binary,
            
            <!-- (case (select bin(t1.pay_type)) when '1' then '续单本金' when '100' then '现金' when '110' then '现金+银行卡'  when '111' then '现金+ 银行卡 + 续单本金'  when '101' then '现金+续单本金'  when '11' then '银行卡+续单本金' when '10' then '银行卡' when '0' then '单据续期' END) as pay_type_name,
             -->
            t1.pay_account,
            
            t1.account_status,
            
            (case t1.account_status when '1' then '待支付' when '2' then '已支付' when '3' then '已到账' when '4' then '部分到账'END ) as account_status_name,

            t1.data_status,
            
            (select value_meaning from wms_sys_dict_data where value_code = data_status and wms_sys_dict_id = 55)as data_status_name,
            
            t1.create_timestamp,
            
            date_format(t1.create_timestamp,'%Y-%m-%d %H:%i:%s') as create_timestamp_str,
            
            t1.id_card,
            
            t2.product_deadline,
            
            t2.product_deadline_name

            FROM wms_inve_transa t1,wms_inve_transa_prod t2 
           <where>
             t1.wms_inve_transa_id = t2.wms_inve_transa_id and t1.account_status in (2,3,4) and t1.data_status !='7' and t1.wms_inve_transa_id  in ((select wms_inve_transa_id from wms_inve_transa_card))

            <if test="cus_name != null">
                and t1.cus_name like #{cus_name}
            </if>
            
            <if test="id_card != null">
                and t1.id_card  like #{id_card}
            </if>
            
            <if test="category_name !=null">
                and t2.wms_inve_pruduct_category_id =#{category_name}
            </if>
            
            <if test="account_status!= null">
                and t1.account_status=#{account_status}
            </if>

            <if test="create_timestamp_begin != null">
                and date_format(t1.create_timestamp,'%Y-%m-%d') &gt;=#{create_timestamp_begin}
                
            </if>
            
            <if test="create_timestamp_end !=null">
                and date_format(t1.create_timestamp,'%Y-%m-%d') &lt;=#{create_timestamp_end}
            </if>
             <if test="listshowstatus != null">
                and account_status!= 3
            </if>
        </where>
        <if test="sortname != '' and sortorder !=''">
            ORDER BY ${sortname} ${sortorder}
        </if>
        <if test="offset != null and pagesize !=null">
            LIMIT ${offset} , ${pagesize}
        </if>
    </select>
    <!--【财务管理】【理财上单】【金额到账】 列表数据数-->
    <select id="findCountForJEDZ" parameterType="map" resultType="int">
         select count(t1.wms_inve_transa_id) as count
         FROM wms_inve_transa t1,wms_inve_transa_prod t2 
        <where>
               t1.wms_inve_transa_id = t2.wms_inve_transa_id and t1.account_status in (2,3,4) and t1.data_status !='7' and t1.wms_inve_transa_id  in ((select wms_inve_transa_id from wms_inve_transa_card))
         <if test="cus_name != null">
                and t1.cus_name like #{cus_name}
            </if>
            
            <if test="id_card != null">
                and t1.id_card like #{id_card}
            </if>
            
            <if test="category_name !=null">
                and t2.wms_inve_pruduct_category_id =#{category_name}
            </if>
            
            <if test="account_status!= null">
                and t1.account_status=#{account_status}
            </if>

            <if test="create_timestamp_begin != null">
                and date_format(t1.create_timestamp,'%Y-%m-%d') &gt;=#{create_timestamp_begin}
                
            </if>
            
            <if test="create_timestamp_end !=null">
                and date_format(t1.create_timestamp,'%Y-%m-%d') &lt;=#{create_timestamp_end}
            </if>
             <if test="listshowstatus != null">
                 and account_status!= 3
            </if>
         </where>
    </select>
    
    <select id="getWmsInveTransaCardByWmsInveTransaId" parameterType="int" resultType="map">
		SELECT 
			w1.wms_inve_transa_id,
		    w1.wms_inve_customer_id,
			w5.wms_inve_redeem_id,
			w2.wms_inve_redeem_principal_detail_id,
			w3.wms_inve_redeem_detail_id,
		    w1.cus_name,
			(w2.pay_account / 10000) as pay_account,
			w2.pay_type,
			w2.card_owner_name,
		    w2.card_no,
			w2.bank_of_deposit_pro,
			w2.bank_of_deposit_city,
			w2.bank_of_deposit_name,
			w2.wms_inve_pos_id,
		    (w3.principal_amount - w3.used_income_amount) as redeem_amount,
			w5.bill_code,
			w2.is_finish,
      		w2.act_account
		FROM 
			wms_inve_transa w1 LEFT JOIN wms_inve_transa_card w2
		ON
			w1.wms_inve_transa_id = w2.wms_inve_transa_id
		LEFT JOIN
			wms_inve_redeem_principal_detail w3
		ON
			w2.wms_inve_redeem_principal_detail_id=w3.wms_inve_redeem_principal_detail_id
		LEFT JOIN
			wms_inve_redeem_detail w4
		ON
			w3.wms_inve_redeem_detail_id=w4.wms_inve_redeem_detail_id
		LEFT JOIN
			wms_inve_redeem w5
		ON
			w4.wms_inve_redeem_id=w5.wms_inve_redeem_id
		WHERE
			w1.wms_inve_transa_id=#{wms_inve_transa_id}
		AND
			w2.enable_flag = 1
    </select>
    
    <select id="getWmsInveTransaCardInfoByWmsInveTransaId" parameterType="int" resultType="map">
    	SELECT
			t1.wms_inve_transa_card_id,
			t1.wms_inve_transa_id,
			t1.card_owner_name,
			t1.card_no,
			t1.bank_of_deposit_pro,
			t1.bank_of_deposit_city,
			t1.bank_of_deposit_name,
			t1.bank_branch,
			t1.wms_inve_pos_id,
			t1.pay_account,
			t1.is_finish,
			t1.act_account,
			t1.create_user_id,
			t1.create_user_name,
			date_format(t1.create_timestamp,'%Y-%m-%d %H:%i:%s') as create_timestamp_str,
			t1.create_timestamp,
			t1.last_update_user_id,
			date_format(t1.last_update_timestamp,'%Y-%m-%d %H:%i:%s') as last_update_timestamp_str,
			t1.last_update_timestamp,
			t1.enable_flag,
			t1.pay_type,
			t1.wms_inve_redeem_principal_detail_id,
			t1.is_valid
		FROM
			wms_inve_transa_card t1
		WHERE
			t1.wms_inve_transa_id = #{wms_inve_transa_id}
		AND
			t1.enable_flag=1
    </select>
</mapper> 
