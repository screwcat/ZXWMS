<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.zx.emanage.inve.persist.WmsInveClerkDataDao">
	<!-- get entity by pk -->
	<select id="get" parameterType="int" resultType="WmsInveClerkData">
		select
        				wms_inve_clerk_data_id,
        				data_type,
        				wms_inve_transa_id,
        				wms_inve_redeem_id,
        				wms_inve_pruduct_category_id,
        				category_name,
        				category_deadline,
        				product_account,
        				is_order_extend,
						date_format(oper_timestamp,'%Y-%m-%d %H:%i:%s') as oper_timestamp_str,
        				oper_timestamp,
						date_format(sort_timestamp,'%Y-%m-%d %H:%i:%s') as sort_timestamp_str,
        				sort_timestamp,
        				is_finished,
        				personnel_regionnumber,
        				personnel_id,
        				is_locked,
						date_format(locked_timestamp,'%Y-%m-%d %H:%i:%s') as locked_timestamp_str,
        				locked_timestamp,
        				locked_personnel_id,
        				create_user_id,
        				create_user_name,
        				create_user_dept_id,
						date_format(create_timestamp,'%Y-%m-%d %H:%i:%s') as create_timestamp_str,
        				create_timestamp,
        				last_update_user_id,
						date_format(last_update_timestamp,'%Y-%m-%d %H:%i:%s') as last_update_timestamp_str,
        				last_update_timestamp,
        				enable_flag
        	from
        		wms_inve_clerk_data
        	where
        				wms_inve_clerk_data_id = #{wms_inve_clerk_data_id}
	</select>

	<!-- count num -->
	<select id="findCount" parameterType="map" resultType="int">
		select count(wms_inve_clerk_data_id) as count
		from wms_inve_clerk_data
		<where>
			<if test="paramname != null">
				<!-- and columnName = #{columnName} -->
			</if>
		</where>
	</select>

	<!-- list -->
	<select id="search" parameterType="map" resultType="java.util.HashMap">
		select 
				wms_inve_clerk_data_id,
				data_type,
				wms_inve_transa_id,
				wms_inve_redeem_id,
				wms_inve_pruduct_category_id,
				category_name,
				category_deadline,
				product_account,
				is_order_extend,
				date_format(oper_timestamp,'%Y-%m-%d %H:%i:%s') as oper_timestamp_str,
				oper_timestamp,
				date_format(sort_timestamp,'%Y-%m-%d %H:%i:%s') as sort_timestamp_str,
				sort_timestamp,
				is_finished,
				personnel_regionnumber,
				personnel_id,
				is_locked,
				date_format(locked_timestamp,'%Y-%m-%d %H:%i:%s') as locked_timestamp_str,
				locked_timestamp,
				locked_personnel_id,
				create_user_id,
				create_user_name,
				create_user_dept_id,
				date_format(create_timestamp,'%Y-%m-%d %H:%i:%s') as create_timestamp_str,
				create_timestamp,
				last_update_user_id,
				date_format(last_update_timestamp,'%Y-%m-%d %H:%i:%s') as last_update_timestamp_str,
				last_update_timestamp,
				enable_flag
		from wms_inve_clerk_data
		<where>
			<if test="paramname != null">
				<!-- and columnName = #{columnName} -->
			</if>
		</where>
		<if test="sortname != '' and sortorder !=''">
			ORDER BY ${sortname} ${sortorder}
		</if>
		<if test="offset != null and pagesize !=null">
			LIMIT ${offset} , ${pagesize}
		</if>
	</select>

	<!-- save -->
	<insert id="save" parameterType="WmsInveClerkData" useGeneratedKeys="true" keyProperty="wms_inve_clerk_data_id">
		INSERT INTO wms_inve_clerk_data
		(
				wms_inve_clerk_data_id,

				data_type,

				wms_inve_transa_id,

				wms_inve_redeem_id,

				wms_inve_pruduct_category_id,

				category_name,

				category_deadline,

				product_account,

				is_order_extend,

				oper_timestamp,

				sort_timestamp,

				is_finished,

				personnel_regionnumber,

				personnel_id,

				is_locked,

				locked_timestamp,

				locked_personnel_id,

				create_user_id,

				create_user_name,

				create_user_dept_id,

				create_timestamp,

				last_update_user_id,

				last_update_timestamp,

				enable_flag
		)
		VALUES
		(
				#{wms_inve_clerk_data_id},
				#{data_type},
				#{wms_inve_transa_id},
				#{wms_inve_redeem_id},
				#{wms_inve_pruduct_category_id},
				#{category_name},
				#{category_deadline},
				#{product_account},
				#{is_order_extend},
				#{oper_timestamp},
				#{sort_timestamp},
				#{is_finished},
				#{personnel_regionnumber},
				#{personnel_id},
				#{is_locked},
				#{locked_timestamp},
				#{locked_personnel_id},
				#{create_user_id},
				#{create_user_name},
				#{create_user_dept_id},
				#{create_timestamp},
				#{last_update_user_id},
				#{last_update_timestamp},
				#{enable_flag}
		);
	</insert>
	
	<update id="updateByTransaId" parameterType="WmsInveClerkData">
		update wms_inve_clerk_data
		<set>
					<if test="wms_inve_clerk_data_id != null">
						 wms_inve_clerk_data_id = #{wms_inve_clerk_data_id},
					</if>
					<if test="data_type != null">
						 data_type = #{data_type},
					</if>
					<if test="wms_inve_redeem_id != null">
						 wms_inve_redeem_id = #{wms_inve_redeem_id},
					</if>
					<if test="wms_inve_pruduct_category_id != null">
						 wms_inve_pruduct_category_id = #{wms_inve_pruduct_category_id},
					</if>
					<if test="category_name != null">
						 category_name = #{category_name},
					</if>
					<if test="category_deadline != null">
						 category_deadline = #{category_deadline},
					</if>
					<if test="product_account != null">
						 product_account = #{product_account},
					</if>
					<if test="is_order_extend != null">
						 is_order_extend = #{is_order_extend},
					</if>
					<if test="oper_timestamp != null">
						 oper_timestamp = #{oper_timestamp},
					</if>
					<if test="sort_timestamp != null">
						 sort_timestamp = #{sort_timestamp},
					</if>
					<if test="is_finished != null">
						 is_finished = #{is_finished},
					</if>
					<if test="personnel_regionnumber != null">
						 personnel_regionnumber = #{personnel_regionnumber},
					</if>
					<if test="personnel_id != null">
						 personnel_id = #{personnel_id},
					</if>
					<if test="is_locked != null">
						 is_locked = #{is_locked},
					</if>
					<if test="locked_timestamp != null">
						 locked_timestamp = #{locked_timestamp},
					</if>
					<if test="locked_personnel_id != null">
						 locked_personnel_id = #{locked_personnel_id},
					</if>
					<if test="create_user_id != null">
						 create_user_id = #{create_user_id},
					</if>
					<if test="create_user_name != null">
						 create_user_name = #{create_user_name},
					</if>
					<if test="create_user_dept_id != null">
						 create_user_dept_id = #{create_user_dept_id},
					</if>
					<if test="create_timestamp != null">
						 create_timestamp = #{create_timestamp},
					</if>
					<if test="last_update_user_id != null">
						 last_update_user_id = #{last_update_user_id},
					</if>
					<if test="last_update_timestamp != null">
						 last_update_timestamp = #{last_update_timestamp},
					</if>
					<if test="enable_flag != null">
						 enable_flag = #{enable_flag},
					</if>
	   </set>
	   where
				wms_inve_transa_id = #{wms_inve_transa_id}
	</update>
	
	<update id="updateTransaProcCode" parameterType="WmsInveClerkData">
		update wms_inve_clerk_data
		<set>
			<if test="personnel_regionnumber != null">
				<choose>
					<when test="data_type == 1">
						proc_code = CONCAT( 'A', LPAD( seqrepeat ( CONCAT( #{personnel_regionnumber }, '_TRANSA_CLERK_PROC_CODE'), 0 ), 3, '0' )),
					</when>
					<when test="data_type == 2">
						proc_code = CONCAT( 'B', LPAD( seqrepeat ( CONCAT( #{personnel_regionnumber }, '_EXTEND_CLERK_PROC_CODE'), 0 ), 3, '0' )),
					</when>
					<when test="data_type == 3">
						proc_code = CONCAT( 'C', LPAD( seqrepeat ( CONCAT( #{personnel_regionnumber }, '_REDEEM_CLERK_PROC_CODE'), 0 ), 3, '0' )),
					</when>
				</choose>
			</if>
		</set>
		where wms_inve_clerk_data_id = #{wms_inve_clerk_data_id}
	</update>
	
	<select id="getReOrderClerkData" parameterType="map" resultType="WmsInveClerkData">
		SELECT
			*
		FROM
			wms_inve_clerk_data d, wms_inve_transa t
		WHERE
			d.wms_inve_transa_id = t.wms_inve_transa_id
			AND d.data_type = '1'
			AND d.is_finished = '0'
			AND t.is_extend_amount = '0'
			AND t.data_status != '7'
			AND d.personnel_regionNumber = #{regionNumber }
			AND DATE_FORMAT(d.sort_timestamp, '%Y-%m-%d') = DATE_FORMAT(#{time }, '%Y-%m-%d')
			AND d.sort_timestamp &lt; DATE_FORMAT(#{time }, '%Y-%m-%d %H:%i:%s')
		order by d.sort_timestamp asc, d.proc_code asc
	</select>

	<!-- 更新用户 -->
	<update id="update" parameterType="WmsInveClerkData">
		update wms_inve_clerk_data
		<set>
					<if test="wms_inve_clerk_data_id != null">
						 wms_inve_clerk_data_id = #{wms_inve_clerk_data_id},
					</if>
					<if test="data_type != null">
						 data_type = #{data_type},
					</if>
					<if test="wms_inve_transa_id != null">
						 wms_inve_transa_id = #{wms_inve_transa_id},
					</if>
					<if test="wms_inve_redeem_id != null">
						 wms_inve_redeem_id = #{wms_inve_redeem_id},
					</if>
					<if test="wms_inve_pruduct_category_id != null">
						 wms_inve_pruduct_category_id = #{wms_inve_pruduct_category_id},
					</if>
					<if test="category_name != null">
						 category_name = #{category_name},
					</if>
					<if test="category_deadline != null">
						 category_deadline = #{category_deadline},
					</if>
					<if test="product_account != null">
						 product_account = #{product_account},
					</if>
					<if test="is_order_extend != null">
						 is_order_extend = #{is_order_extend},
					</if>
					<if test="oper_timestamp != null">
						 oper_timestamp = #{oper_timestamp},
					</if>
					<if test="sort_timestamp != null">
						 sort_timestamp = #{sort_timestamp},
					</if>
					<if test="is_finished != null">
						 is_finished = #{is_finished},
					</if>
					<if test="personnel_regionnumber != null">
						 personnel_regionnumber = #{personnel_regionnumber},
					</if>
					<if test="personnel_id != null">
						 personnel_id = #{personnel_id},
					</if>
					<if test="is_locked != null">
						 is_locked = #{is_locked},
					</if>
					<if test="locked_timestamp != null">
						 locked_timestamp = #{locked_timestamp},
					</if>
					<if test="locked_personnel_id != null">
						 locked_personnel_id = #{locked_personnel_id},
					</if>
					<if test="create_user_id != null">
						 create_user_id = #{create_user_id},
					</if>
					<if test="create_user_name != null">
						 create_user_name = #{create_user_name},
					</if>
					<if test="create_user_dept_id != null">
						 create_user_dept_id = #{create_user_dept_id},
					</if>
					<if test="create_timestamp != null">
						 create_timestamp = #{create_timestamp},
					</if>
					<if test="last_update_user_id != null">
						 last_update_user_id = #{last_update_user_id},
					</if>
					<if test="last_update_timestamp != null">
						 last_update_timestamp = #{last_update_timestamp},
					</if>
					<if test="enable_flag != null">
						 enable_flag = #{enable_flag},
					</if>
	   </set>
	   where
				wms_inve_clerk_data_id = #{wms_inve_clerk_data_id}
	</update>
	
	<update id="updateClerkDataFinished" parameterType="map">
		update wms_inve_clerk_data
		<set>
			<if test="is_finished != null">
				 is_finished = #{is_finished},
			</if>
			<if test="userId != null">
				last_update_user_id = #{userId },
			</if>
			<if test="lastUpdateTime != null">
				last_update_timestamp = #{lastUpdateTime},
			</if>
		</set>
		<where>
			wms_inve_transa_id = #{transaId }
			<if test="redeemId != null">
				 and wms_inve_redeem_id = #{redeemId}
			</if>
			<if test="enable_flag != null">
				and enable_flag = #{enable_flag }
			</if>
		</where>
	</update>
	
	<select id="getListByEntity" parameterType="WmsInveClerkData" resultType="WmsInveClerkData">
		select 
				wms_inve_clerk_data_id,
				data_type,
				wms_inve_transa_id,
				wms_inve_redeem_id,
				wms_inve_pruduct_category_id,
				category_name,
				category_deadline,
				product_account,
				is_order_extend,
				date_format(oper_timestamp,'%Y-%m-%d %H:%i:%s') as oper_timestamp_str,
				oper_timestamp,
				date_format(sort_timestamp,'%Y-%m-%d %H:%i:%s') as sort_timestamp_str,
				sort_timestamp,
				is_finished,
				personnel_regionnumber,
				personnel_id,
				is_locked,
				date_format(locked_timestamp,'%Y-%m-%d %H:%i:%s') as locked_timestamp_str,
				locked_timestamp,
				locked_personnel_id,
				create_user_id,
				create_user_name,
				create_user_dept_id,
				date_format(create_timestamp,'%Y-%m-%d %H:%i:%s') as create_timestamp_str,
				create_timestamp,
				last_update_user_id,
				date_format(last_update_timestamp,'%Y-%m-%d %H:%i:%s') as last_update_timestamp_str,
				last_update_timestamp,
				enable_flag
		from
		wms_inve_clerk_data
		<where>
					<if test="wms_inve_clerk_data_id != null">
						and wms_inve_clerk_data_id = #{wms_inve_clerk_data_id}
					</if>
					<if test="data_type != null">
						and data_type = #{data_type}
					</if>
					<if test="wms_inve_transa_id != null">
						and wms_inve_transa_id = #{wms_inve_transa_id}
					</if>
					<if test="wms_inve_redeem_id != null">
						and wms_inve_redeem_id = #{wms_inve_redeem_id}
					</if>
					<if test="wms_inve_pruduct_category_id != null">
						and wms_inve_pruduct_category_id = #{wms_inve_pruduct_category_id}
					</if>
					<if test="category_name != null">
						and category_name = #{category_name}
					</if>
					<if test="category_deadline != null">
						and category_deadline = #{category_deadline}
					</if>
					<if test="product_account != null">
						and product_account = #{product_account}
					</if>
					<if test="is_order_extend != null">
						and is_order_extend = #{is_order_extend}
					</if>
					<if test="oper_timestamp != null">
						and oper_timestamp = #{oper_timestamp}
					</if>
					<if test="sort_timestamp != null">
						and sort_timestamp = #{sort_timestamp}
					</if>
					<if test="is_finished != null">
						and is_finished = #{is_finished}
					</if>
					<if test="personnel_regionnumber != null">
						and personnel_regionnumber = #{personnel_regionnumber}
					</if>
					<if test="personnel_id != null">
						and personnel_id = #{personnel_id}
					</if>
					<if test="is_locked != null">
						and is_locked = #{is_locked}
					</if>
					<if test="locked_timestamp != null">
						and locked_timestamp = #{locked_timestamp}
					</if>
					<if test="locked_personnel_id != null">
						and locked_personnel_id = #{locked_personnel_id}
					</if>
					<if test="create_user_id != null">
						and create_user_id = #{create_user_id}
					</if>
					<if test="create_user_name != null">
						and create_user_name = #{create_user_name}
					</if>
					<if test="create_user_dept_id != null">
						and create_user_dept_id = #{create_user_dept_id}
					</if>
					<if test="create_timestamp != null">
						and create_timestamp = #{create_timestamp}
					</if>
					<if test="last_update_user_id != null">
						and last_update_user_id = #{last_update_user_id}
					</if>
					<if test="last_update_timestamp != null">
						and last_update_timestamp = #{last_update_timestamp}
					</if>
					<if test="enable_flag != null">
						and enable_flag = #{enable_flag}
					</if>
				 	<if test="isExcludePKFlag != null and isExcludePKFlag == true">
		        				and wms_inve_clerk_data_id != #{wms_inve_clerk_data_id}
					</if>
		</where>
		order by wms_inve_clerk_data_id desc
	</select>
	
	<select id="searchClerkDataBySaleman" parameterType="map" resultType="map">
		SELECT
			CONCAT(t2.cus_name, IF(t1.data_type='1',isSipSalesman(t2.bel_salesman_id_id, t2.wms_inve_customer_id),'')) as cus_name,
			(
				SELECT
					t.value_meaning
				FROM
					wms_sys_dict_data t
				WHERE
					t.wms_sys_dict_id = 1004
				AND t.value_code = t1.data_type
			) AS data_type,
			t1.sort_timestamp,
			(
				SELECT
					count(1)
				FROM
					wms_inve_clerk_data d,
					wms_inve_transa d1
				WHERE
					d.wms_inve_transa_id = d1.wms_inve_transa_id
				AND d.personnel_regionNumber = t1.personnel_regionNumber
				AND d.enable_flag = '1'
				AND d.is_finished = '0'
				AND (
					(d.data_type IN ('2', '3') and d.sort_timestamp  &lt;= t1.sort_timestamp)
					OR (
						d.data_type = 1
						AND d1.data_status IN ('2', '13')
						and d.proc_code &lt;=t1.proc_code
					)
				)
			)-1 AS wait_num
		FROM
			wms_inve_clerk_data t1,
			wms_inve_transa t2
		WHERE
			t1.wms_inve_transa_id = t2.wms_inve_transa_id
		AND t1.enable_flag = '1'
		AND t1.is_finished = '0'
		<if test="bel_salesman_id_id != null">
			AND t2.bel_salesman_id_id=#{bel_salesman_id_id}
		</if>
		<if test="personnel_regionNumber != null">
			and t1.personnel_regionNumber = #{personnel_regionNumber }
		</if>
		AND (
			t1.data_type IN ('2', '3')
			OR (
				t1.data_type = 1
				AND t2.data_status IN ('2', '13')
			)
		)
	</select>
	
	<select id="findClerkDataBySalemanCount" parameterType="map" resultType="int">
		SELECT
			count(1)
		FROM
			wms_inve_clerk_data t1,
			wms_inve_transa t2
		WHERE
			t1.wms_inve_transa_id = t2.wms_inve_transa_id
		AND t1.enable_flag = '1'
		AND t1.is_finished = '0'
		<if test="bel_salesman_id_id != null">
			AND t2.bel_salesman_id_id=#{bel_salesman_id_id}
		</if>
		<if test="personnel_regionNumber != null">
			and t1.personnel_regionNumber = #{personnel_regionNumber }
		</if>
		<if test="wms_inve_clerk_data_id != null">
			and t1.wms_inve_clerk_data_id &lt; #{wms_inve_clerk_data_id }
		</if>
		AND (
			t1.data_type IN ('2', '3')
			OR (
				t1.data_type = 1
				AND t2.data_status IN ('2', '13')
			)
		)
	</select>
	
	<select id="findClerkDataCount" parameterType="map" resultType="int">
		select 
			count(1)
		from
			wms_inve_clerk_data d, wms_inve_transa t, wms_inve_transa_prod tp, pm_personnel p
		<where>
			d.wms_inve_transa_id = t.wms_inve_transa_id
			and d.wms_inve_transa_id = tp.wms_inve_transa_id
			and d.personnel_id = p.personnel_id
			and d.enable_flag = '1'
			and d.is_finished = '0'
			AND (d.data_type in ('2','3') or (d.data_type=1 and t.data_status in ('2','13')))
			and d.personnel_regionNumber = #{personnel_regionNumber }
			<if test="cus_name != null">
				and t.cus_name like CONCAT('%',#{cus_name },'%')
			</if>
			<if test="bill_code != null">
				and t.bill_code like CONCAT('%',#{bill_code },'%')
			</if>
			<if test="category_id != null">
				and d.wms_inve_pruduct_category_id = #{category_id }
			</if>
			<if test="personnel_name != null">
				and (
					p.personnel_name like CONCAT('%',#{personnel_name },'%')
					or
					p.personnel_shortCode like CONCAT('%',#{personnel_name },'%')
				)
			</if>
			<if test="data_type != null">
				and d.data_type = #{data_type }
			</if>
			<if test="data_status != null">
				and t.data_status = #{data_status }
			</if>
			<if test="is_new == 1">
				and d.data_type = '1'
				and t.is_extend_amount = '0'
			</if>
			<if test="is_extend == 1">
				and d.data_type = '1'
				and t.is_extend_amount = '1'
			</if>
		</where>
	</select>
	
	<select id="searchClerkData" parameterType="map" resultType="map">
		select 
			d.wms_inve_clerk_data_id,
			d.proc_code,
			t.wms_inve_transa_id,
			d.wms_inve_pruduct_category_id,
			tp.wms_inve_transa_prod_id,
			t.bill_code,
			CONCAT(t.cus_name, IF(d.data_type='1',isSipSalesman(t.bel_salesman_id_id, t.wms_inve_customer_id),'')) as cus_name,
			t.id_card,
			t.mobile_phone,
			t.date_of_act,
			t.data_status,
			t.is_extend_amount,
			d.category_name,
			d.category_deadline,
			t.contract_signing_type,
			round(d.product_account/10000) as product_account,
			CONCAT(p.personnel_name, '/', p.personnel_shortCode) as personnel_name,
			DATE_FORMAT(d.create_timestamp,'%Y-%m-%d %H:%i:%S') as create_timestamp,
			d.is_locked,
			d.locked_personnel_id,
			(select CONCAT(personnel_name, '/', personnel_shortCode) from pm_personnel where personnel_id = t.bel_salesman_id_id) as salesman_name,
			d.data_type,
			t.data_status,
			#{userid } as userId
		from
			wms_inve_clerk_data d, wms_inve_transa t, wms_inve_transa_prod tp, pm_personnel p
		<where>
			d.wms_inve_transa_id = t.wms_inve_transa_id
			and d.wms_inve_transa_id = tp.wms_inve_transa_id
			and d.personnel_id = p.personnel_id
			and d.enable_flag = '1'
			and d.is_finished = '0'
			AND (d.data_type in ('2','3') or (d.data_type=1 and t.data_status in ('2','13')))
			and d.personnel_regionNumber = #{personnel_regionNumber }
			<if test="cus_name != null">
				and t.cus_name like CONCAT('%',#{cus_name },'%')
			</if>
			<if test="bill_code != null">
				and t.bill_code like CONCAT('%',#{bill_code },'%')
			</if>
			<if test="category_id != null">
				and d.wms_inve_pruduct_category_id = #{category_id }
			</if>
			<if test="personnel_name != null">
				and (
					p.personnel_name like CONCAT('%',#{personnel_name },'%')
					or
					p.personnel_shortCode like CONCAT('%',#{personnel_name },'%')
				)
			</if>
			<if test="data_type != null">
				and d.data_type = #{data_type }
			</if>
			<if test="data_status != null">
				and t.data_status = #{data_status }
			</if>
			<choose>
				<when test="is_new == 1 and is_extend == 1">
					and d.data_type = '1'
					and (t.is_extend_amount = '0' or t.is_extend_amount = '1')
				</when>
				<when test="is_new == 1">
					and d.data_type = '1'
					and t.is_extend_amount = '0'
				</when>
				<when test="is_extend">
					and d.data_type = '1'
					and t.is_extend_amount = '1'
				</when>
			</choose>
		</where>
		<if test="sortname != '' and sortorder !=''">
			ORDER BY ${sortname} ${sortorder}
		</if>
		<if test="offset != null and pagesize !=null">
			LIMIT ${offset} , ${pagesize}
		</if>
	</select>
	
	<select id="findRedeemClerkDataCount" parameterType="map" resultType="int">
		select
			count(1)
		from
			wms_inve_clerk_data d, wms_inve_redeem r, wms_inve_transa t, pm_personnel p
		<where>
			d.wms_inve_transa_id = t.wms_inve_transa_id
			and d.wms_inve_redeem_id = r.wms_inve_redeem_id
			and t.bel_salesman_id_id = p.personnel_id
			and d.enable_flag = '1'
			and d.is_finished = '0'
			AND (d.data_type in ('2','3') or (d.data_type='1' and t.data_status in ('2','13')))
			and d.personnel_regionNumber = #{personnel_regionNumber }
			and d.data_type = #{data_type }
			<if test="cus_name != null">
				and t.cus_name like CONCAT('%',#{cus_name },'%')
			</if>
			<if test="mobile_phone != null">
				and t.mobile_phone like CONCAT('%',#{mobile_phone },'%')
			</if>
			<if test="category_id != null">
				and d.wms_inve_pruduct_category_id = #{category_id }
			</if>
			<if test="salesman_name != null">
				and (
					p.personnel_name like CONCAT('%',#{salesman_name },'%')
					or
					p.personnel_shortCode like CONCAT('%',#{salesman_name },'%')
				) 
			</if>
			<if test="redeem_date_begin != null">
				and DATE_FORMAT(d.oper_timestamp, '%Y-%m-%d') &gt;= DATE_FORMAT(#{redeem_date_begin }, '%Y-%m-%d')
			</if>
			<if test="redeem_date_end != null">
				and DATE_FORMAT(d.oper_timestamp, '%Y-%m-%d') &lt;= DATE_FORMAT(#{redeem_date_end }, '%Y-%m-%d')
			</if>
		</where>
	</select>
	
	<!-- 查询合同改签列表数据 -->
	<select id="searchRedeemClerkData" parameterType="map" resultType="map">
		select 
			d.wms_inve_clerk_data_id,
			cp.wms_inve_clerk_protocol_id,
			tp.wms_inve_transa_prod_id,
			t.wms_inve_transa_id,
			t.bill_code,
			r.bill_code as redeem_bill_code,
			t.cus_name,
			t.id_card,
			t.mobile_phone,
			d.category_name,
			d.category_deadline,
			round(d.product_account/10000) as product_account,
			r.redeem_date,
			CONCAT(p.personnel_name,'/',p.personnel_shortCode) as salesman_name
		from
			wms_inve_clerk_data d, wms_inve_redeem r, wms_inve_transa t, wms_inve_transa_prod tp, wms_inve_clerk_protocol cp, pm_personnel p
		<where>
			d.wms_inve_transa_id = t.wms_inve_transa_id
			and cp.wms_inve_transa_id = t.wms_inve_transa_id
			and cp.wms_inve_redeem_id = r.wms_inve_redeem_id
			and d.wms_inve_transa_id = tp.wms_inve_transa_id
			and d.wms_inve_redeem_id = r.wms_inve_redeem_id
			and t.bel_salesman_id_id = p.personnel_id
			and d.enable_flag = '1'
			and cp.enable_flag = '1'
			and d.is_finished = '0'
			AND (d.data_type in ('2','3') or (d.data_type='1' and t.data_status in ('2','13')))
			and d.personnel_regionNumber = #{personnel_regionNumber }
			and d.data_type = #{data_type }
			<if test="cus_name != null">
				and t.cus_name like CONCAT('%',#{cus_name },'%')
			</if>
			<if test="mobile_phone != null">
				and t.mobile_phone like CONCAT('%',#{mobile_phone },'%')
			</if>
			<if test="category_id != null">
				and d.wms_inve_pruduct_category_id = #{category_id }
			</if>
			<if test="salesman_name != null">
				and (
					p.personnel_name like CONCAT('%',#{salesman_name },'%')
					or
					p.personnel_shortCode like CONCAT('%',#{salesman_name },'%')
				) 
			</if>
			<if test="redeem_date_begin != null">
				and DATE_FORMAT(d.oper_timestamp, '%Y-%m-%d') &gt;= DATE_FORMAT(#{redeem_date_begin }, '%Y-%m-%d')
			</if>
			<if test="redeem_date_end != null">
				and DATE_FORMAT(d.oper_timestamp, '%Y-%m-%d') &lt;= DATE_FORMAT(#{redeem_date_end }, '%Y-%m-%d')
			</if>
		</where>
		<if test="sortname != '' and sortorder !=''">
			ORDER BY ${sortname} ${sortorder}
		</if>
		<if test="offset != null and pagesize !=null">
			LIMIT ${offset} , ${pagesize}
		</if>
	</select>
	
	<select id="findExtendClerkDataCount" parameterType="map" resultType="int">
		select
			count(1)
		from
			wms_inve_clerk_data d, wms_inve_transa t, pm_personnel p
		<where>
			d.wms_inve_transa_id = t.wms_inve_transa_id
			and t.bel_salesman_id_id = p.personnel_id
			and d.enable_flag = '1'
			and d.is_finished = '0'
			AND (d.data_type in ('2','3') or (d.data_type='1' and t.data_status in ('2','13')))
			and d.personnel_regionNumber = #{personnel_regionNumber }
			and d.data_type = #{data_type }
			<if test="cus_name != null">
				and t.cus_name like CONCAT('%',#{cus_name },'%')
			</if>
			<if test="mobile_phone != null">
				and t.mobile_phone like CONCAT('%',#{mobile_phone },'%')
			</if>
			<if test="category_id != null">
				and d.wms_inve_pruduct_category_id = #{category_id }
			</if>
			<if test="salesman_name != null">
				and (
					p.personnel_name like CONCAT('%',#{salesman_name },'%')
					OR
					p.personnel_shortCode like CONCAT('%',#{salesman_name },'%')
				)
			</if>
			<if test="extend_date_begin != null">
				and DATE_FORMAT(d.oper_timestamp, '%Y-%m-%d') &gt;= DATE_FORMAT(#{extend_date_begin }, '%Y-%m-%d')
			</if>
			<if test="extend_date_end != null">
				and DATE_FORMAT(d.oper_timestamp, '%Y-%m-%d') &lt;= DATE_FORMAT(#{extend_date_end }, '%Y-%m-%d')
			</if>
		</where>
	</select>
	
	<select id="searchExtendClerkData" parameterType="map" resultType="map">
		select
			d.wms_inve_clerk_data_id,
			tp.wms_inve_transa_prod_id,
			t.wms_inve_transa_id,
			t.cus_name,
			t.bill_code,
			t.id_card,
			t.mobile_phone,
			d.category_name,
			d.category_deadline,
			round(d.product_account/10000) as product_account,
			DATE_FORMAT(d.create_timestamp,'%Y-%m-%d') as create_timestamp,
			CONCAT(p.personnel_name,'/',p.personnel_shortCode) as salesman_name
		from
			wms_inve_clerk_data d, wms_inve_transa t, wms_inve_transa_prod tp, pm_personnel p
		<where>
			d.wms_inve_transa_id = t.wms_inve_transa_id
			and t.bel_salesman_id_id = p.personnel_id
			and d.wms_inve_transa_id = tp.wms_inve_transa_id
			and d.enable_flag = '1'
			and d.is_finished = '0'
			AND (d.data_type in ('2','3') or (d.data_type='1' and t.data_status in ('2','13')))
			and d.personnel_regionNumber = #{personnel_regionNumber }
			and d.data_type = #{data_type }
			<if test="cus_name != null">
				and t.cus_name like CONCAT('%',#{cus_name },'%')
			</if>
			<if test="mobile_phone != null">
				and t.mobile_phone like CONCAT('%',#{mobile_phone },'%')
			</if>
			<if test="category_id != null">
				and d.wms_inve_pruduct_category_id = #{category_id }
			</if>
			<if test="salesman_name != null">
				and (
					p.personnel_name like CONCAT('%',#{salesman_name },'%')
					OR
					p.personnel_shortCode like CONCAT('%',#{salesman_name },'%')
				)
			</if>
			<if test="extend_date_begin != null">
				and DATE_FORMAT(d.oper_timestamp, '%Y-%m-%d') &gt;= DATE_FORMAT(#{extend_date_begin }, '%Y-%m-%d')
			</if>
			<if test="extend_date_end != null">
				and DATE_FORMAT(d.oper_timestamp, '%Y-%m-%d') &lt;= DATE_FORMAT(#{extend_date_end }, '%Y-%m-%d')
			</if>
		</where>
		<if test="sortname != '' and sortorder !=''">
			ORDER BY ${sortname} ${sortorder}
		</if>
		<if test="offset != null and pagesize !=null">
			LIMIT ${offset} , ${pagesize}
		</if>
	</select>
	
	<!-- 根据上单表主键获取签单信息 -->
	<select id="getWmsInveClerkDataByWmsInveTransaId" parameterType="int" resultType="WmsInveClerkData">
		SELECT
			t1.wms_inve_transa_id,
			t2.wms_inve_pruduct_category_id,
			t2.category_name,
			t2.product_deadline AS category_deadline,
			t2.product_account,
			t3.personnel_regionNumber AS personnel_regionnumber,
			t3.personnel_id
		FROM
			wms_inve_transa t1,
			wms_inve_transa_prod t2,
			pm_personnel t3
		WHERE
			t1.wms_inve_transa_id = t2.wms_inve_transa_id
		AND
			t1.create_user_id = t3.personnel_id
		AND
			t1.wms_inve_transa_id = #{wms_inve_transa_id}
	</select>
	
	<!-- 根据原始上单id和签单类型获取柜员业务信息 -->
	<select id="getWmsInveClerkDataByWmsInveTransaIdAndDataType" parameterType="map" resultType="WmsInveClerkData">
		SELECT
			wms_inve_clerk_data_id,
			data_type,
			wms_inve_transa_id,
			wms_inve_redeem_id,
			wms_inve_pruduct_category_id,
			category_name,
			category_deadline,
			product_account,
			is_order_extend,
			oper_timestamp,
			sort_timestamp,
			is_finished,
			personnel_regionNumber,
			personnel_id,
			is_locked,
			locked_timestamp,
			locked_personnel_id,
			create_user_id,
			create_user_name,
			create_user_dept_id,
			create_timestamp,
			last_update_user_id,
			last_update_timestamp,
			enable_flag
		FROM
			wms_inve_clerk_data
		WHERE
			wms_inve_transa_id = #{wms_inve_transa_id}
		AND
			is_order_extend = #{is_order_extend}
		AND
			enable_flag = 1
	</select>
	
	
		<!-- 更新用户 -->
	<update id="disableWmsInveClerkData" parameterType="WmsInveClerkData">
		update wms_inve_clerk_data
		<set>				
			<if test="enable_flag != null">
				 enable_flag = #{enable_flag},
			</if>
	   </set>
		<where>
			enable_flag = '1'
			<if test="wms_inve_transa_id != null">
				and wms_inve_transa_id = #{wms_inve_transa_id}
			</if>
			<if test="wms_inve_redeem_id != null">
				and wms_inve_redeem_id = #{wms_inve_redeem_id}
			</if>
		</where>
	</update>
	
	<!-- 查询当天预约赎回到期的单据  进行债权匹配-->
	<select id="getOrderRedeemClerkProtocol" parameterType="string" resultType ="com.zx.emanage.inve.vo.WmsInveClerkProtocolVO">
		
		select 
			 p1.wms_inve_transa_id,
			 p1.wms_inve_clerk_protocol_id,
			 p1.product_account,
			 p2.wms_inve_pruduct_category_id,
			 r.redeem_date,
			 r.get_credit_type,
			 p1.prot_code
		from wms_inve_redeem r,wms_inve_transa t,wms_inve_clerk_protocol p1,wms_inve_transa_prod p2
		where 
			r.wms_inve_redeem_id = p1.wms_inve_redeem_id
			and t.wms_inve_transa_id = p1.wms_inve_transa_id
			and t.wms_inve_transa_id = p2.wms_inve_transa_id
    		and t.is_order_redeem = '1'
    		and p1.enable_flag = '1'
    		and date_format(r.redeem_date,'%Y-%m-%d') =  #{date} 		
	</select>
	
	<update id="deleteClerkDataByWmsInveTransaIdAndDataType" parameterType="WmsInveClerkData">
		update
			wms_inve_clerk_data
		set
			enable_flag = #{enable_flag}
		where
			wms_inve_transa_id = #{wms_inve_transa_id}
		and
			data_type = #{data_type}
	</update>
	
	<select id="getWmsInveClerkDataByTransaId" parameterType="int" resultType="WmsInveClerkData">
		select
			wms_inve_clerk_data_id,
			data_type,
			wms_inve_transa_id,
			wms_inve_redeem_id,
			wms_inve_pruduct_category_id,
			category_name,
			category_deadline,
			product_account,
			is_order_extend,
			oper_timestamp,
			sort_timestamp,
			is_finished,
			personnel_regionnumber,
			personnel_id,
			is_locked,
			locked_timestamp,
			locked_personnel_id,
			create_user_id,
			create_user_name,
			create_user_dept_id,
			create_timestamp,
			last_update_user_id,
			last_update_timestamp,
			enable_flag
		from
			wms_inve_clerk_data
		where
			wms_inve_transa_id = #{wms_inve_transa_id}
		and
			enable_flag = '1'
		and
			data_type = 1
	</select>
	
	<select id="getSummaryClerkTransaData" parameterType="map" resultType="map">
		SELECT
			IFNULL(SUM(tmp.totalTransaCount),0) as totalTransaCount,
			IFNULL(SUM(tmp.totalTransaAccount)/10000,0) as totalTransaAccount,
			IFNULL((SUM(tmp.totalTransaOnlineCountPaid) + SUM(tmp.totalTransaOfflineCountPaid)),0) as totalTransaCountPaid,
			IFNULL(SUM(tmp.totalTransaOnlineCountPaid),0) as totalTransaOnlineCountPaid,
			IFNULL(SUM(tmp.totalTransaOfflineCountPaid),0) as totalTransaOfflineCountPaid,
			IFNULL((SUM(tmp.totalTransaOnlineNewAccountPaid) + SUM(tmp.totalTransaOnlineRedeemExtendAccountPaid) + SUM(tmp.totalTransaOfflineAccountPaid))/10000,0) as totalTransaAccountPaid,
			IFNULL(SUM(tmp.totalTransaOnlineAccountPaid)/10000,0) AS totalTransaOnlineAccountPaid,
			IFNULL(SUM(tmp.totalTransaOnlineNewAccountPaid)/10000,0) as totalTransaOnlineNewAccountPaid,
			IFNULL(SUM(tmp.totalTransaOnlineRedeemExtendAccountPaid)/10000,0) as totalTransaOnlineRedeemExtendAccountPaid,
			IFNULL(SUM(tmp.totalTransaOfflineAccountPaid)/10000,0) as totalTransaOfflineAccountPaid,
			IFNULL((SUM(tmp.totalTransaCount) - SUM(tmp.totalTransaOfflineCountPaid) - SUM(tmp.totalTransaOnlineCountPaid)),0) as totalTransaCountUnPaid,
			IFNULL((SUM(tmp.totalTransaAccount) - SUM(tmp.totalTransaOfflineAccountPaid) - SUM(tmp.totalTransaOnlineNewAccountPaid) - SUM(tmp.totalTransaOnlineRedeemExtendAccountPaid))/10000,0) as totalTransaAccountUnPaid
		FROM
		(
			SELECT
				count(1) as totalTransaCount,
				SUM(IFNULL(tp.org_product_account,0)) as totalTransaAccount,
				0 as totalTransaOfflineCountPaid,
				0 as totalTransaOfflineAccountPaid,
				0 as totalTransaOnlineCountPaid,
				0 AS totalTransaOnlineAccountPaid,
				0 AS totalTransaOnlineNewAccountPaid,
				0 AS totalTransaOnlineRedeemExtendAccountPaid
			FROM
				wms_inve_clerk_data d, wms_inve_transa t, wms_inve_transa_prod tp
			WHERE
				d.wms_inve_transa_id = t.wms_inve_transa_id
			AND t.wms_inve_transa_id = tp.wms_inve_transa_id
			AND
				DATE_FORMAT(
					d.sort_timestamp,
					'%y-%m-%d'
				) = DATE_FORMAT(#{date }, '%y-%m-%d')
			AND d.data_type = '1'
			AND t.data_status NOT IN ('1','7')
			AND ifnull(t.date_of_act,CURDATE()) = CURDATE()
			AND d.enable_flag = '1'
		
			UNION ALL
		
			SELECT
				0 as totalTransaCount,
				0 as totalTransaAccount,
				IFNULL(CASE
					WHEN IFNULL(t.contract_signing_type,1) = 1 THEN count(1) END,0) AS totalTransaOfflineCountPaid,
				IFNULL(CASE
						WHEN IFNULL(t.contract_signing_type,1) = 1 THEN SUM(tp.org_product_account) END,0) as totalTransaOfflineAccountPaid,
				IFNULL(CASE
					WHEN t.contract_signing_type = 2 THEN count(1) END,0) as totalTransaOnlineCountPaid,
				IFNULL(CASE
					WHEN t.contract_signing_type = 2 THEN SUM(tp.org_product_account) END,0) as totalTransaOnlineAccountPaid,
				0 AS totalTransaOnlineNewAccountPaid,
				0 AS totalTransaOnlineRedeemExtendAccountPaid
			FROM
				wms_inve_clerk_data d, wms_inve_transa t, wms_inve_transa_prod tp
			WHERE
				d.wms_inve_transa_id = t.wms_inve_transa_id
			AND t.wms_inve_transa_id = tp.wms_inve_transa_id
			AND
				DATE_FORMAT(
					d.sort_timestamp,
					'%y-%m-%d'
				) = DATE_FORMAT(#{date }, '%y-%m-%d')
			AND d.data_type = '1'
			AND t.data_status IN ('4','5','6','11','12','13','19')
			AND ifnull(t.date_of_act,CURDATE()) = CURDATE()
			AND d.enable_flag = '1'
			GROUP BY t.contract_signing_type
		
			UNION ALL
		
			SELECT
				0 as totalTransaCount,
				0 as totalTransaAccount,
				0 as totalTransaOfflineCountPaid,
				0 as totalTransaOfflineAccountPaid,
				0 as totalTransaOnlineCountPaid,
				0 AS totalTransaOnlineAccountPaid,
				0 AS totalTransaOnlineNewAccountPaid,
				IFNULL(SUM(tc.pay_account),0) AS totalTransaOnlineRedeemExtendAccountPaid
			FROM
				wms_inve_clerk_data d, wms_inve_transa t, wms_inve_transa_prod tp, wms_inve_transa_card tc
			WHERE
				d.wms_inve_transa_id = t.wms_inve_transa_id
			AND t.wms_inve_transa_id = tp.wms_inve_transa_id
			AND t.wms_inve_transa_id = tc.wms_inve_transa_id
			AND
				DATE_FORMAT(
					d.sort_timestamp,
					'%y-%m-%d'
				) = DATE_FORMAT(#{date }, '%y-%m-%d')
			AND d.data_type = '1'
			AND t.data_status IN ('4','5','6','11','12','13','19')
			AND ifnull(t.date_of_act,CURDATE()) = CURDATE()
			AND d.enable_flag = '1'
			AND tc.enable_flag = '1' 
			AND tc.pay_type = '3'
			AND t.contract_signing_type = '2'
		
			UNION ALL
		
			SELECT
				0 as totalTransaCount,
				0 as totalTransaAccount,
				0 as totalTransaOfflineCountPaid,
				0 as totalTransaOfflineAccountPaid,
				0 as totalTransaOnlineCountPaid,
				0 AS totalTransaOnlineAccountPaid,
				IFNULL(SUM(tc.pay_account),0) AS totalTransaOnlineNewAccountPaid,
				0 AS totalTransaOnlineRedeemExtendAccountPaid
			FROM
				wms_inve_clerk_data d, wms_inve_transa t, wms_inve_transa_prod tp, wms_inve_transa_card tc
			WHERE
				d.wms_inve_transa_id = t.wms_inve_transa_id
			AND t.wms_inve_transa_id = tp.wms_inve_transa_id
			AND t.wms_inve_transa_id = tc.wms_inve_transa_id
			AND
				DATE_FORMAT(
					d.sort_timestamp,
					'%y-%m-%d'
				) = DATE_FORMAT(#{date }, '%y-%m-%d')
			AND d.data_type = '1'
			AND t.data_status IN ('4','5','6','11','12','13','19')
			AND ifnull(t.date_of_act,CURDATE()) = CURDATE()
			AND d.enable_flag = '1'
			AND tc.enable_flag = '1' 
			AND tc.pay_type != '3'
			AND t.contract_signing_type = '2'
		) tmp	
	</select>
	
	<select id="getAllGroupSaleAmountInfo" parameterType="map" resultType="map">
		SELECT
			
			IFNULL(SUM(tmp.totalTransaNewAccountPaid)/10000,0) as totalTransaNewAccountPaid,
			IFNULL(SUM(tmp.totalTransaRedeemExtendAccountPaid)/10000,0) as totalTransaRedeemExtendAccountPaid,
			tmp.contract_signing_type
		FROM
		(
			SELECT			
				0 AS totalTransaNewAccountPaid,
				IFNULL(SUM(tc.pay_account),0) AS totalTransaRedeemExtendAccountPaid,
				t.contract_signing_type
			FROM
				wms_inve_clerk_data d, wms_inve_transa t, wms_inve_transa_prod tp, wms_inve_transa_card tc
			WHERE
				d.wms_inve_transa_id = t.wms_inve_transa_id
			AND t.wms_inve_transa_id = tp.wms_inve_transa_id
			AND t.wms_inve_transa_id = tc.wms_inve_transa_id
		 	AND
				DATE_FORMAT(
					d.sort_timestamp,
					'%y-%m-%d'
				) = DATE_FORMAT(#{date }, '%y-%m-%d')
			AND d.data_type = '1'
			AND t.data_status IN ('4','5','6','11','12','13','19')
			AND ifnull(t.date_of_act,CURDATE()) = CURDATE()
			AND d.enable_flag = '1'
			AND tc.enable_flag = '1' 
			AND tc.pay_type = '3'
 			AND t.contract_signing_type is not NULL
			group by t.contract_signing_type

			UNION ALL
		
			SELECT		
				IFNULL(SUM(tc.pay_account),0) AS totalTransaAccountPaid,
				0 AS totalTransaRedeemExtendAccountPaid,
				t.contract_signing_type
			FROM
				wms_inve_clerk_data d, wms_inve_transa t, wms_inve_transa_prod tp, wms_inve_transa_card tc
			WHERE
				d.wms_inve_transa_id = t.wms_inve_transa_id
			AND t.wms_inve_transa_id = tp.wms_inve_transa_id
			AND t.wms_inve_transa_id = tc.wms_inve_transa_id
 			AND
 				DATE_FORMAT(
 					d.sort_timestamp,
 					'%y-%m-%d'
 				) = DATE_FORMAT(#{date}, '%y-%m-%d')
			AND d.data_type = '1'
			AND t.data_status IN ('4','5','6','11','12','13','19')
	  		AND ifnull(t.date_of_act,CURDATE()) = CURDATE()
			AND d.enable_flag = '1'
			AND tc.enable_flag = '1' 
			AND tc.pay_type != '3'
 			AND t.contract_signing_type is not NULL
			group by t.contract_signing_type
		) tmp	
		group by tmp.contract_signing_type
	</select>
</mapper> 
