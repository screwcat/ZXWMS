<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.zx.emanage.inve.persist.WmsInveWagerulesFloatingDao">
	<!-- get entity by pk -->
	<select id="get" parameterType="int" resultType="WmsInveWagerulesFloating">
		select
        				wms_inve_wagerules_floating_id,
        				wms_inve_wagerules_head_id,
        				floating_type,
        				floating_scope,
        				cumulate_begin,
        				cumulate_end,
        				wage_operation,
        				floating_wage_money
        	from
        		wms_inve_wagerules_floating
        	where
        				wms_inve_wagerules_floating_id = #{wms_inve_wagerules_floating_id}
	</select>

	<!-- count 获取浮动工资信息num -->
	<select id="findCount" parameterType="map" resultType="int">
		select count(wms_inve_wagerules_floating_id) as count
		from wms_inve_wagerules_floating
		<where>
			<if test="wms_inve_wagerules_head_id != null">
				and wms_inve_wagerules_head_id = #{wms_inve_wagerules_head_id} 
			</if>
		</where>
	</select>

	<!-- list获取浮动工资信息 -->
	<select id="search" parameterType="map" resultType="java.util.HashMap">
		select 
				wms_inve_wagerules_floating_id,
				wms_inve_wagerules_head_id,
				floating_type,
				floating_scope,
				cumulate_begin,
				cumulate_end,
				wage_operation,
				floating_wage_money
		from wms_inve_wagerules_floating
		<where>
			<if test="wms_inve_wagerules_head_id != null">
				and wms_inve_wagerules_head_id = #{wms_inve_wagerules_head_id} 
			</if>
		</where>
		<if test="sortname != '' and sortorder !=''">
			ORDER BY ${sortname} ${sortorder}
		</if>
		<if test="offset != null and pagesize !=null">
			LIMIT ${offset} , ${pagesize}
		</if>
	</select>

	<!-- save -->
	<insert id="save" parameterType="WmsInveWagerulesFloating" useGeneratedKeys="true" keyProperty="wms_inve_wagerules_floating_id">
		INSERT INTO wms_inve_wagerules_floating
		(
				wms_inve_wagerules_floating_id,

				wms_inve_wagerules_head_id,

				floating_type,

				floating_scope,

				cumulate_begin,

				cumulate_end,

				wage_operation,

				floating_wage_money
		)
		VALUES
		(
				#{wms_inve_wagerules_floating_id},
				#{wms_inve_wagerules_head_id},
				#{floating_type},
				#{floating_scope},
				#{cumulate_begin},
				#{cumulate_end},
				#{wage_operation},
				#{floating_wage_money}
		);
	</insert>

	<!-- 更新用户 -->
	<update id="update" parameterType="WmsInveWagerulesFloating">
		update wms_inve_wagerules_floating
		<set>
					<if test="wms_inve_wagerules_floating_id != null">
						 wms_inve_wagerules_floating_id = #{wms_inve_wagerules_floating_id},
					</if>
					<if test="wms_inve_wagerules_head_id != null">
						 wms_inve_wagerules_head_id = #{wms_inve_wagerules_head_id},
					</if>
					<if test="floating_type != null">
						 floating_type = #{floating_type},
					</if>
					<if test="floating_scope != null">
						 floating_scope = #{floating_scope},
					</if>
					<if test="cumulate_begin != null">
						 cumulate_begin = #{cumulate_begin},
					</if>
					<if test="cumulate_end != null">
						 cumulate_end = #{cumulate_end},
					</if>
					<if test="wage_operation != null">
						 wage_operation = #{wage_operation},
					</if>
					<if test="floating_wage_money != null">
						 floating_wage_money = #{floating_wage_money},
					</if>
	   </set>
		 where 
    				wms_inve_wagerules_floating_id = #{wms_inve_wagerules_floating_id}
	</update>
	<select id="getListByEntity" parameterType="WmsInveWagerulesFloating" resultType="WmsInveWagerulesFloating">
		select 
				wms_inve_wagerules_floating_id,
				wms_inve_wagerules_head_id,
				floating_type,
				floating_scope,
				cumulate_begin,
				cumulate_end,
				wage_operation,
				floating_wage_money
		from
		wms_inve_wagerules_floating
		<where>
					<if test="wms_inve_wagerules_floating_id != null">
						and wms_inve_wagerules_floating_id = #{wms_inve_wagerules_floating_id}
					</if>
					<if test="wms_inve_wagerules_head_id != null">
						and wms_inve_wagerules_head_id = #{wms_inve_wagerules_head_id}
					</if>
					<if test="floating_type != null">
						and floating_type = #{floating_type}
					</if>
					<if test="floating_scope != null">
						and floating_scope = #{floating_scope}
					</if>
					<if test="cumulate_begin != null">
						and cumulate_begin = #{cumulate_begin}
					</if>
					<if test="cumulate_end != null">
						and cumulate_end = #{cumulate_end}
					</if>
					<if test="wage_operation != null">
						and wage_operation = #{wage_operation}
					</if>
					<if test="floating_wage_money != null">
						and floating_wage_money = #{floating_wage_money}
					</if>
				 	<if test="isExcludePKFlag != null and isExcludePKFlag == true">
		        				and wms_inve_wagerules_floating_id != #{wms_inve_wagerules_floating_id}
					</if>
		</where>
	</select>
	<!-- list获取浮动工资信息 -->
	<select id="searchByFK" parameterType="map" resultType="java.util.HashMap">
		select 
				wms_inve_wagerules_floating_id,
				wms_inve_wagerules_head_id,
				floating_type,
				floating_scope,
				cumulate_begin,
				cumulate_end,
				wage_operation,
				floating_wage_money
		from wms_inve_wagerules_floating
		<where>
			wms_inve_wagerules_head_id = #{wms_inve_wagerules_head_id} 
		</where>
		<if test="sortname != '' and sortorder !=''">
			ORDER BY ${sortname} ${sortorder}
		</if>
	</select>
	<!-- 删除应经没用的浮动工资规则信息 -->
	<delete id="deleteByInfo" parameterType="WmsInveWagerulesFloating">
	 delete from wms_inve_wagerules_floating where wms_inve_wagerules_floating_id = #{wms_inve_wagerules_floating_id} 
	</delete>
</mapper> 
