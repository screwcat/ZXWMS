<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.zx.emanage.reportmanage.persist.WmsInveWagePerformanceDao">
	<!-- get entity by pk -->
	<select id="get" parameterType="int" resultType="WmsInveWagePerformance">
		select
        				wms_inve_wage_performance_id,
        				compay_id,
        				dept_id,
        				team_id,
        				salesman_name,
        				salesman_shortcode,
        				salesman_id,
        				job_id,
        				personnel_state,
        				base_wage,
        				floating_wage,
						date_format(create_datetime,'%Y-%m-%d %H:%i:%s') as create_datetime_str,
        				create_datetime,
        				remark,
        				enable_flag,
        				
        	from
        		wms_inve_wage_performance
        	where
        				wms_inve_wage_performance_id = #{wms_inve_wage_performance_id}
	</select>

	<!-- 实现理财功能列表查询数据数count num -->
	<select id="findCount" parameterType="map" resultType="int">
		select count(wms_inve_wage_performance_id) as count
		from wms_inve_wage_performance p
		<where>
		    p.enable_flag=1  
		    <!-- 当月1号~15号显示上月的工资信息 -->
		    <if test="create_datetime_begin ==null and create_datetime_end ==null">
		      and (day(NOW()) &gt;=1  and DAY(NOW()) &lt;=15) and MONTH(p.create_datetime)=month(subdate(curdate(), INTERVAL 1 month)) and ((YEAR(p.create_datetime)=YEAR(NOW())) or (YEAR(p.create_datetime)=YEAR(subdate(curdate(), INTERVAL 1 year))))
		    </if>
			<if test="compay_id != null">
				 and p.compay_id = #{compay_id} 
			</if>
			<if test="dept_id != null">
				 and p.dept_id = #{dept_id} 
			</if>
			<if test="team_id != null">
				 and p.team_id = #{team_id} 
			</if>
			<if test="salesman_name !=null">
				and (p.salesman_name  like #{salesman_name} or p.salesman_shortcode like #{salesman_name})
			</if>
			<if test="create_datetime_begin !=null">
				and date_format(p.create_datetime,'%Y-%m') &gt;=#{create_datetime_begin}
			</if>
			<if test="create_datetime_end !=null">
				and date_format(p.create_datetime,'%Y-%m') &lt;=#{create_datetime_end}
			</if>
		</where>
	</select>

	<!-- 实现理财功能列表查询list -->
	<select id="search" parameterType="map" resultType="java.util.HashMap">
		select 
				p.wms_inve_wage_performance_id,
				p.compay_id,
				p.dept_id,
				p.team_id,
				p.salesman_name,
				p.salesman_shortcode,
				p.salesman_id,
				p.job_id,
				p.personnel_state,
				p.base_wage,
				p.floating_wage,
				date_format(p.create_datetime,'%Y-%m-%d %H:%i:%s') as create_datetime_str,
				p.create_datetime,
				p.remark,
				p.enable_flag,
				CONCAT(p.salesman_name,'/',p.salesman_shortcode) as salesman_names,
				(select dept_name from sys_dept where dept_id=p.compay_id) as compay_name,
				(select dept_name from sys_dept where dept_id=p.dept_id) as dept_name,
				(select dept_name from sys_dept where dept_id=p.team_id) as team_name,
				(select job_name from wms_inve_job where job_code=p.job_id) as job_name,
				(case p.personnel_state when 0 then '试用' when 1 then '在职' when 2 then '实习' when 3 then '离职' when 4 then '离退休' when 5 then '异动' when 7 then '兼职' END) as personnel_state_name, 
				(p.base_wage + p.floating_wage) as total_wage
		from wms_inve_wage_performance p
		<where>
			 p.enable_flag=1 
		    <!-- 当月1号~15号显示上月的工资信息 -->
		    <if test="create_datetime_begin ==null and create_datetime_end ==null">
		         and (day(NOW()) &gt;=1  and DAY(NOW()) &lt;=15) and MONTH(p.create_datetime)=month(subdate(curdate(), INTERVAL 1 month)) and ((YEAR(p.create_datetime)=YEAR(NOW())) or (YEAR(p.create_datetime)=YEAR(subdate(curdate(), INTERVAL 1 year))))
		    </if>
			<if test="compay_id != null">
				 and p.compay_id = #{compay_id} 
			</if>
			<if test="dept_id != null">
				 and p.dept_id = #{dept_id} 
			</if>
			<if test="team_id != null">
				 and p.team_id = #{team_id} 
			</if>
			<if test="salesman_name !=null">
				and (p.salesman_name  like #{salesman_name} or p.salesman_shortcode like #{salesman_name})
			</if>
			<if test="create_datetime_begin !=null">
				and date_format(p.create_datetime,'%Y-%m') &gt;=#{create_datetime_begin}
			</if>
			<if test="create_datetime_end !=null">
				and date_format(p.create_datetime,'%Y-%m') &lt;=#{create_datetime_end}
			</if>
		</where>
		<if test="sortname != '' and sortorder !=''">
			ORDER BY ${sortname} ${sortorder}
		</if>
		<if test="offset != null and pagesize !=null">
			LIMIT ${offset} , ${pagesize}
		</if>
	</select>

	<!-- save -->
	<insert id="save" parameterType="WmsInveWagePerformance" useGeneratedKeys="true" keyProperty="wms_inve_wage_performance_id">
		INSERT INTO wms_inve_wage_performance
		(
				wms_inve_wage_performance_id,

				compay_id,

				dept_id,

				team_id,

				salesman_name,

				salesman_shortcode,

				salesman_id,

				job_id,

				personnel_state,

				base_wage,

				floating_wage,

				create_datetime,

				remark,

				enable_flag
		)
		VALUES
		(
				#{wms_inve_wage_performance_id},
				#{compay_id},
				#{dept_id},
				#{team_id},
				#{salesman_name},
				#{salesman_shortcode},
				#{salesman_id},
				#{job_id},
				#{personnel_state},
				#{base_wage},
				#{floating_wage},
				#{create_datetime},
				#{remark},
				#{enable_flag}
		);
	</insert>

	<!-- 更新用户 -->
	<update id="update" parameterType="WmsInveWagePerformance">
		update wms_inve_wage_performance
		<set>
					<if test="wms_inve_wage_performance_id != null">
						 wms_inve_wage_performance_id = #{wms_inve_wage_performance_id},
					</if>
					<if test="compay_id != null">
						 compay_id = #{compay_id},
					</if>
					<if test="dept_id != null">
						 dept_id = #{dept_id},
					</if>
					<if test="team_id != null">
						 team_id = #{team_id},
					</if>
					<if test="salesman_name != null">
						 salesman_name = #{salesman_name},
					</if>
					<if test="salesman_shortcode != null">
						 salesman_shortcode = #{salesman_shortcode},
					</if>
					<if test="salesman_id != null">
						 salesman_id = #{salesman_id},
					</if>
					<if test="job_id != null">
						 job_id = #{job_id},
					</if>
					<if test="personnel_state != null">
						 personnel_state = #{personnel_state},
					</if>
					<if test="base_wage != null">
						 base_wage = #{base_wage},
					</if>
					<if test="floating_wage != null">
						 floating_wage = #{floating_wage},
					</if>
					<if test="create_datetime != null">
						 create_datetime = #{create_datetime},
					</if>
					<if test="remark != null">
						 remark = #{remark},
					</if>
					<if test="enable_flag != null">
						 enable_flag = #{enable_flag},
					</if>
	   </set>
		 where 
    				wms_inve_wage_performance_id = #{wms_inve_wage_performance_id}
	</update>
	<select id="getListByEntity" parameterType="WmsInveWagePerformance" resultType="WmsInveWagePerformance">
		select 
				wms_inve_wage_performance_id,
				compay_id,
				dept_id,
				team_id,
				salesman_name,
				salesman_shortcode,
				salesman_id,
				job_id,
				personnel_state,
				base_wage,
				floating_wage,
				date_format(create_datetime,'%Y-%m-%d %H:%i:%s') as create_datetime_str,
				create_datetime,
				remark,
				enable_flag
		from
		wms_inve_wage_performance
		<where>
					<if test="wms_inve_wage_performance_id != null">
						and wms_inve_wage_performance_id = #{wms_inve_wage_performance_id}
					</if>
					<if test="compay_id != null">
						and compay_id = #{compay_id}
					</if>
					<if test="dept_id != null">
						and dept_id = #{dept_id}
					</if>
					<if test="team_id != null">
						and team_id = #{team_id}
					</if>
					<if test="salesman_name != null">
						and salesman_name = #{salesman_name}
					</if>
					<if test="salesman_shortcode != null">
						and salesman_shortcode = #{salesman_shortcode}
					</if>
					<if test="salesman_id != null">
						and salesman_id = #{salesman_id}
					</if>
					<if test="job_id != null">
						and job_id = #{job_id}
					</if>
					<if test="personnel_state != null">
						and personnel_state = #{personnel_state}
					</if>
					<if test="base_wage != null">
						and base_wage = #{base_wage}
					</if>
					<if test="floating_wage != null">
						and floating_wage = #{floating_wage}
					</if>
					<if test="create_datetime != null">
						and create_datetime = #{create_datetime}
					</if>
					<if test="remark != null">
						and remark = #{remark}
					</if>
					<if test="enable_flag != null">
						and enable_flag = #{enable_flag}
					</if>
				 	<if test="isExcludePKFlag != null and isExcludePKFlag == true">
		        				and wms_inve_wage_performance_id != #{wms_inve_wage_performance_id}
					</if>
		</where>
	</select>
</mapper> 
