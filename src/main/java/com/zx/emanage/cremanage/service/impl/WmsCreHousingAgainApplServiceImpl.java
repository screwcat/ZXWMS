package com.zx.emanage.cremanage.service.impl;import java.util.HashMap;import java.util.List;import java.util.Map;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import org.springframework.transaction.annotation.Transactional;import com.zx.emanage.cremanage.persist.WmsCreCreditHeadDao;import com.zx.emanage.cremanage.persist.WmsCreHousingAgainApplDao;import com.zx.emanage.cremanage.service.IWmsCreHousingAgainApplService;import com.zx.emanage.cremanage.service.IWmsLoanWorkFlowService;import com.zx.emanage.cremanage.vo.WmsCreHousingAgainApplSearchBeanVO;import com.zx.emanage.cremanage.vo.WmsHouseCreditWorkFlowVO;import com.zx.emanage.sysmanage.persist.WmsSysDictDataDao;import com.zx.emanage.util.gen.BeanUtils;import com.zx.emanage.util.gen.WmsHelp;import com.zx.emanage.util.gen.entity.WmsCreCreditHead;import com.zx.emanage.util.gen.entity.WmsCreHousingAgainAppl;import com.zx.platform.syscontext.vo.GridDataBean;import com.zx.sframe.util.vo.UserBean;/* * WmsCreHousingAgainApplService */@Service("WmsCreHousingAgainApplService")public class WmsCreHousingAgainApplServiceImpl implements IWmsCreHousingAgainApplService {    private static Logger log = LoggerFactory.getLogger(WmsCreHousingAgainApplServiceImpl.class);    @Autowired    private WmsCreHousingAgainApplDao wmscrehousingagainapplDao;    @Autowired    private IWmsLoanWorkFlowService wmsLoanWorkFlowServiceImpl;//房贷流程    @Autowired    private WmsCreCreditHeadDao wmsCreCreditHeadDao;    @Autowired    private WmsSysDictDataDao wmssysdictdataDao;        /**     * Description : 获取结果集(不带分页)     *      * @param queryInfo     * @return record list     * @author administrator     */    @Override    public Map<String, Object> getListWithoutPaging(WmsCreHousingAgainApplSearchBeanVO queryInfo) {        Map<String, Object> paramMap = new HashMap<String, Object>();        paramMap.put("sortname", queryInfo.getSortname());        paramMap.put("sortorder", queryInfo.getSortorder());        List<Map<String, Object>> list = wmscrehousingagainapplDao.search(paramMap);        Map<String, Object> resMap = new HashMap<String, Object>();        resMap.put("Rows", list);        return resMap;    }    /**     * Description : 获取结果集(带分页)     *      * @param queryInfo     * @return record list     * @author administrator     */    @Override    public Map<String, Object> getListWithPaging(WmsCreHousingAgainApplSearchBeanVO queryInfo) {        Map<String, Object> paramMap = new HashMap<String, Object>();        paramMap.put("sortname", queryInfo.getSortname());        paramMap.put("sortorder", queryInfo.getSortorder());        paramMap.put("pagesize", queryInfo.getPagesize());        paramMap.put("offset", queryInfo.getOffset());        List<Map<String, Object>> list = wmscrehousingagainapplDao.search(paramMap);        GridDataBean<Map<String, Object>> bean =             new GridDataBean<Map<String, Object>>(queryInfo.getPage(), wmscrehousingagainapplDao.findCount(paramMap), list);        return bean.getGridData();    }    /**     * Description : 通过主键获取结果     *      * @param primary key     * @return WmsCreHousingAgainAppl     * @author administrator     */    @Override    public WmsCreHousingAgainAppl getInfoByPK(Integer wms_cre_housing_again_appl_id) {        return wmscrehousingagainapplDao.get(wms_cre_housing_again_appl_id);    }    /**     * Description : 新增记录     *      * @param bean     * @return "success" or "error" or user defined     * @author administrator     */    @Override    @Transactional    public String save(WmsCreHousingAgainAppl bean, UserBean user) {        String resStr = "success";        int ret = 0;        ret = wmscrehousingagainapplDao.save(bean);        if (ret == 0) {            resStr = "error";        }        return resStr;    }    /**     * Description : 更新记录     *      * @param bean contains pk at least     * @return "success" or "error" or user defined     * @author administrator     */    @Override    @Transactional    public String update(WmsCreHousingAgainAppl bean, UserBean user) {        String resStr = "success";        int ret = 0;        ret = wmscrehousingagainapplDao.update(bean); // update a record replace columns,                                                   // nonsupport null val        if (ret == 0) {            resStr = "error";        }        return resStr;    }    /**     * Description : 获取List<WmsCreHousingAgainAppl>结果集     *      * @param queryInfo     * @param isExludePKFlag, true is exclude primary key, false is include     *            primary key     * @return "success" or "repeat"     * @author administrator     */    private List<WmsCreHousingAgainAppl> getListByEntity(WmsCreHousingAgainAppl queryInfo, Boolean isExcludePKFlag) {        Map<String, Object> paramMap = new HashMap<String, Object>();        paramMap.put("isExcludePKFlag", isExcludePKFlag);        String resStr = "success";        List<WmsCreHousingAgainAppl> beanList = wmscrehousingagainapplDao.getListByEntity(queryInfo);        return beanList;    }        /**     * 复议申请详细页面初始化     */    public Map<String, Object> reviewRevisionOfHousingDisp(WmsCreHousingAgainApplSearchBeanVO queryInfo, UserBean user) {    	Map<String, Object> paramMap = new HashMap<String, Object>();    	paramMap.put("wms_cre_credit_head_id", queryInfo.getWms_cre_credit_head_id());        return wmscrehousingagainapplDao.reviewRevisionOfHousingDisp(paramMap);    }        /**     * 复议申请详细页面保存     */    @Override    @Transactional    public String reviewRevisionOfHousingSave(WmsCreHousingAgainApplSearchBeanVO queryInfo, UserBean user) {    	String resStr = "success";        int ret = 0;                long now_time_long = System.currentTimeMillis();        java.sql.Timestamp now_time_timestamp = new java.sql.Timestamp(now_time_long);                WmsCreHousingAgainAppl bean = new WmsCreHousingAgainAppl();        BeanUtils.copyProperties(bean, queryInfo);        bean.setCreate_user_id(user.getUserId());        bean.setCreate_user_name(user.getRealname());        bean.setCreate_timestamp(now_time_timestamp);        bean.setLast_update_user_id(user.getUserId());        bean.setLast_update_timestamp(now_time_timestamp);        bean.setEnable_flag("1");                ret = wmscrehousingagainapplDao.save(bean);                //更新主表wms_cre_credit_head        WmsCreCreditHead wmsCreCreditHead = new WmsCreCreditHead();        wmsCreCreditHead.setWms_cre_credit_head_id(queryInfo.getWms_cre_credit_head_id());        wmsCreCreditHead.setCre_loan_type(Integer.parseInt(queryInfo.getCre_loan_type()));//贷款产品        wmsCreCreditHead.setMax_repayment_time_limit(queryInfo.getMax_repayment_time_limit());//还款期限        wmsCreCreditHead.setCredit_limit(queryInfo.getCredit_limit().doubleValue());//贷款金额        wmsCreCreditHead.setLoan_interest_rate(queryInfo.getLoan_interest_rate());//贷款利率        wmsCreCreditHead.setSalesman_id(queryInfo.getSalesman_id());        wmsCreCreditHead.setSalesman_name(queryInfo.getSalesman_name());        wmsCreCreditHead.setSalesman_code(queryInfo.getSalesman_code());        wmsCreCreditHead.setSalesman_city_code(queryInfo.getSalesman_city_code());        wmsCreCreditHead.setSalesman_dept_id(queryInfo.getSalesman_dept_id());        wmsCreCreditHead.setSalesman_shortcode(queryInfo.getSalesman_shortcode());        wmsCreCreditHeadDao.updateforhouse(wmsCreCreditHead);                //同步数据        Map<String, Object> paramMap = new HashMap<String, Object>();        paramMap.put("wms_cre_credit_head_id", queryInfo.getWms_cre_credit_head_id());        wmscrehousingagainapplDao.reviewRevisionOfHousingDataSynchronization(paramMap);        WmsHouseCreditWorkFlowVO wDebtWorkFlowVO =new WmsHouseCreditWorkFlowVO();        Map<String, Object> parMap=new HashMap<>();    	parMap.put("wms_sys_dict_id", WmsHelp.SYS_DICT_ID_APPL_REASON);//复议原因主键    	parMap.put("value_code", bean.getAgain_appl_reason());        List<com.zx.emanage.util.gen.entity.WmsSysDictData> list = wmssysdictdataDao.getDictDataByCode(parMap);        wDebtWorkFlowVO.setAdvice(list.get(0).getValue_meaning());	        wDebtWorkFlowVO.setUserId(user.getUserId().toString());        wDebtWorkFlowVO.setBusinessId(queryInfo.getWms_cre_credit_head_id().toString());        //流程处理        wmsLoanWorkFlowServiceImpl.againStartFinancialWorkFlow(wDebtWorkFlowVO);        if (ret == 0) {            resStr = "error";        }        return resStr;    }            }