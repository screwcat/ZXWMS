<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.zx.emanage.cusmanage.persist.WmsCusCustomerHeadDao">

	<!-- 插入WmsCusCustomerHead，并在用户实体对象中将主键进行赋值，返回受影响的记录条数，如果不需要返回主键，无需配置useGeneratedKeys、keyProperty项 -->
	<insert id="save" parameterType="WmsCusCustomerHead"
		useGeneratedKeys="true" keyProperty="wms_cus_customer_id">
		INSERT INTO wms_cus_customer_head
		(customer_code ,customer_name
		,customer_ever_name,customer_category,gender,max_degree,birthday,id_card,province,city,
		district,address_more,has_children,children_name,children_address,children_telephone,has_married,has_house,current_address_province,
		current_address_city,current_address_district,current_address_more,post_code,fixed_telephone,mobile_telephone1,service_password1,
		mobile_telephone2,service_password2,personal_year_income,customer_email,credit_card_limit,common_occupants,status,create_user_id,
		create_user_name,create_timestamp,last_update_user_id,last_update_timestamp,enable_flag,work_stat,house_stat,residence_time,cre_card_num,existing_loan,monthly_income,
		resource_of_tel1,resource_of_tel2,is_real_name_tel1,is_real_name_tel2,real_name_tel1,real_name_rela1,real_name_tel2,real_name_rela2)
		VALUES
		(
		#{customer_code},#{customer_name},
		#{customer_ever_name},#{customer_category},#{gender},#{max_degree},#{birthday},
		#{id_card},#{province},#{city},
		#{district},#{address_more},
		#{has_children},#{children_name},#{children_address},#{children_telephone},#{has_married},
		#{has_house},#{current_address_province},#{current_address_city},
		#{current_address_district},#{current_address_more},
		#{post_code},#{fixed_telephone},#{mobile_telephone1},#{service_password1},#{mobile_telephone2},
		#{service_password2},#{personal_year_income},#{customer_email},
		#{credit_card_limit},#{common_occupants},
		#{status},#{create_user_id},#{create_user_name},#{create_timestamp},#{last_update_user_id},
		#{last_update_timestamp},#{enable_flag},#{work_stat},#{house_stat},#{residence_time},#{cre_card_num},#{existing_loan},#{monthly_income},
		#{resource_of_tel1},#{resource_of_tel2},#{is_real_name_tel1},#{is_real_name_tel2},#{real_name_tel1},#{real_name_rela1},#{real_name_tel2},#{real_name_rela2});
	</insert>

	<!-- 更新WmsCusCustomerHead，返回受影响的记录条数 -->
	<update id="update" parameterType="WmsCusCustomerHead">
		update wms_cus_customer_head
		<set>
			<if test="customer_code != null">
				customer_code = #{customer_code},
			</if>
			<if test="customer_name != null">
				customer_name = #{customer_name},
			</if>
			<if test="customer_ever_name != null">
				customer_ever_name = #{customer_ever_name},
			</if>
			<if test="customer_category != null">
				customer_category = #{customer_category},
			</if>
			<if test="gender != null">
				gender = #{gender},
			</if>
			<if test="has_married != null">
				has_married = #{has_married},
			</if>
			<if test="max_degree != null">
				max_degree = #{max_degree},
			</if>
			birthday = #{birthday},
			<if test="id_card != null">
				id_card = #{id_card},
			</if>
			<if test="province != null">
				province = #{province},
			</if>
			<if test="city != null">
				city = #{city},
			</if>
			<if test="district != null">
				district = #{district},
			</if>
			<if test="address_more != null">
				address_more = #{address_more},
			</if>
			<if test="has_children != null">
				has_children = #{has_children},
			</if>
			<if test="children_name != null">
				children_name = #{children_name},
			</if>
			<if test="children_address != null">
				children_address = #{children_address},
			</if>
			<if test="children_telephone != null">
				children_telephone = #{children_telephone},
			</if>
			<if test="has_house != null">
				has_house = #{has_house},
			</if>
			<if test="current_address_province != null">
				current_address_province = #{current_address_province},
			</if>
			<if test="current_address_city != null">
				current_address_city = #{current_address_city},
			</if>
			<if test="current_address_district != null">
				current_address_district = #{current_address_district},
			</if>
			<if test="current_address_more != null">
				current_address_more = #{current_address_more},
			</if>
			<if test="post_code != null">
				post_code = #{post_code},
			</if>
			<if test="fixed_telephone != null">
				fixed_telephone = #{fixed_telephone},
			</if>
			<if test="mobile_telephone1 != null">
				mobile_telephone1 = #{mobile_telephone1},
			</if>
			<if test="service_password1 != null">
				service_password1 = #{service_password1},
			</if>
			<if test="mobile_telephone2 != null">
				mobile_telephone2 = #{mobile_telephone2},
			</if>
			<if test="service_password2 != null">
				service_password2 = #{service_password2},
			</if>
			<if test="personal_year_income != null">
				personal_year_income = #{personal_year_income},
			</if>
			<if test="customer_email != null">
				customer_email = #{customer_email},
			</if>
			<if test="credit_card_limit != null">
				credit_card_limit = #{credit_card_limit},
			</if>
			<if test="common_occupants != null">
				common_occupants = #{common_occupants},
			</if>
			<if test="status != null">
				status = #{status},
			</if>
			<if test="last_update_user_id != null">
				last_update_user_id = #{last_update_user_id},
			</if>
			<if test="last_update_timestamp != null">
				last_update_timestamp = #{last_update_timestamp},
			</if>
			<if test="enable_flag != null">
				enable_flag = #{enable_flag},
			</if>
			<if test="work_stat != null">
				work_stat = #{work_stat},
			</if>
			<if test="house_stat != null">
				house_stat = #{house_stat},
			</if>
			<if test="residence_time != null">
				residence_time = #{residence_time},
			</if>
			<if test="cre_card_num != null">
				cre_card_num = #{cre_card_num},
			</if>
			<if test="existing_loan != null">
				existing_loan = #{existing_loan},
			</if>
			<if test="monthly_income != null">
				monthly_income = #{monthly_income},
			</if>
			<if test="resource_of_tel1 != null">
				resource_of_tel1 = #{resource_of_tel1},
			</if>
			<if test="resource_of_tel2 != null">
				resource_of_tel2 = #{resource_of_tel2},
			</if>
			<if test="is_real_name_tel1 != null">
				is_real_name_tel1 = #{is_real_name_tel1},
			</if>
			<if test="is_real_name_tel2 != null">
				is_real_name_tel2 = #{is_real_name_tel2},
			</if>
			<if test="real_name_tel1 != null">
				real_name_tel1 = #{real_name_tel1},
			</if>
			<if test="real_name_rela1 != null">
				real_name_rela1 = #{real_name_rela1},
			</if>
			<if test="real_name_tel2 != null">
				real_name_tel2 = #{real_name_tel2},
			</if>
			<if test="real_name_rela2 != null">
				real_name_rela2 = #{real_name_rela2},
			</if>
		</set>
		where wms_cus_customer_id = #{wms_cus_customer_id}
	</update>
	<!-- 获取WmsCusCustomerHead -->
	<select id="get" parameterType="Integer" resultType="WmsCusCustomerHead">
		select
		wms_cus_customer_id,
		customer_code,
		customer_name,
		customer_ever_name,
		customer_category,
		gender,
		(case gender when '0' then '女' when '1' then '男' else ' ' end) as
		gender_name,
		max_degree,
		date_format(birthday,'%Y-%m-%d') as birthday,
		id_card,
		province,
		city,
		district,
		address_more,
		has_children,
		children_name,
		children_address,
		children_telephone,
		has_married,
		has_house,
		current_address_province,
		current_address_city,
		current_address_district,
		current_address_more,
		post_code,
		fixed_telephone,
		mobile_telephone1,
		service_password1,
		mobile_telephone2,
		service_password2,
		personal_year_income,
		customer_email,
		credit_card_limit,
		common_occupants,
		status,
		create_user_id,
		create_user_name,
		date_format(create_timestamp,'%Y-%m-%d %H:%i:%s') as create_timestamp,
		last_update_user_id,
		date_format(last_update_timestamp,'%Y-%m-%d %H:%i:%s') as last_update_timestamp,
		(case status
		when '0' then '暂存'
		when '1' then '提交'
		when '2' then '提交'
		end) as status_name,
		enable_flag,
		work_stat,
		house_stat,
		residence_time,
		cre_card_num,
		existing_loan,
		monthly_income,
		resource_of_tel1,
		resource_of_tel2,
		is_real_name_tel1,
		is_real_name_tel2,
		real_name_tel1,
		real_name_rela1,
		real_name_tel2,
		real_name_rela2
		from wms_cus_customer_head
		where
		wms_cus_customer_id =
		#{wms_cus_customer_id}
	</select>
	<!-- 查询客户数据条数，直接返回int类型条数 -->
	<select id="findCount" parameterType="map" resultType="int">
		select count(wms_cus_customer_id) as count
		from wms_cus_customer_head
		<where>
			enable_flag=1
			<if test="status !=null">
				and status = #{status}
			</if>
			<if test="customer_name !=null">
				and customer_name like #{customer_name}
			</if>
			<if test="mobile_telephone !=null">
				and (mobile_telephone1 like #{mobile_telephone} or mobile_telephone2
				like #{mobile_telephone})
			</if>
			<if test="create_timestamp !=null">
				and create_timestamp between #{create_timestamp} and
				#{create_timestamp_end}
			</if>
			<if test="id_card !=null">
				and id_card = #{id_card}
			</if>
			<if test="create_user_id !=null">
				and create_user_id = #{create_user_id}
			</if>
		</where>
	</select>
	<!-- 查询用户 ，返回List<WmsCusCustomerHead>对象，如果返回类型不为WmsCusCustomerHead对象集合，需要在自己的接口中重新进行定义 -->
	<select id="search" parameterType="map" resultType="java.util.HashMap">
		select
		wms_cus_customer_id,
		customer_code,
		customer_name,
		customer_ever_name,
		customer_category,
		gender,
		(case gender when '0' then '女' when '1' then '男' else ' ' end) as
		gender_name,
		max_degree,
		date_format(birthday,'%Y-%m-%d') as birthday,
		id_card,
		province,
		city,
		district,
		address_more,
		has_children,
		children_name,
		children_address,
		children_telephone,
		has_married,
		has_house,
		current_address_province,
		current_address_city,
		current_address_district,
		current_address_more,
		post_code,
		fixed_telephone,
		mobile_telephone1,
		service_password1,
		mobile_telephone2,
		service_password2,
		personal_year_income,
		customer_email,
		credit_card_limit,
		common_occupants,
		status,
		create_user_id,
		create_user_name,
		date_format(create_timestamp,'%Y-%m-%d %H:%i:%s') as create_timestamp,
		last_update_user_id,
		date_format(last_update_timestamp,'%Y-%m-%d %H:%i:%s') as last_update_timestamp,
		(case status
		when '0' then '暂存'
		when '1' then '提交'
		when '2' then '提交'
		end) as status_name,
		enable_flag
		from wms_cus_customer_head
		<where>
			enable_flag=1
			<if test="status !=null">
				and status = #{status}
			</if>
			<if test="customer_name !=null">
				and customer_name like #{customer_name}
			</if>
			<if test="mobile_telephone !=null">
				and (mobile_telephone1 like #{mobile_telephone} or mobile_telephone2
				like #{mobile_telephone})
			</if>
			<if test="create_timestamp !=null">
				and create_timestamp between #{create_timestamp} and
				#{create_timestamp_end}
			</if>
			<if test="id_card !=null">
				and id_card =#{id_card}
			</if>
			<if test="create_user_id !=null">
				and create_user_id = #{create_user_id}
			</if>
		</where>
		<if test="sortname != null and sortorder !=null">
			ORDER BY ${sortname} ${sortorder}
		</if>
		<if test="offset != null and pagesize !=null">
			LIMIT ${offset} , ${pagesize}
		</if>

	</select>

	<select id="getListWithoutPaging" parameterType="map"
		resultType="java.util.HashMap">
		select
		wms_cus_customer_id,
		customer_code,
		customer_name,
		customer_ever_name,
		customer_category,
		gender,
		(case gender when '0' then '女' when '1' then '男' else ' ' end) as
		gender_name,
		max_degree,
		date_format(birthday,'%Y-%m-%d') as birthday,
		id_card,
		province,
		city,
		district,
		address_more,
		has_children,
		children_name,
		children_address,
		children_telephone,
		has_married,
		has_house,
		current_address_province,
		current_address_city,
		current_address_district,
		current_address_more,
		post_code,
		fixed_telephone,
		mobile_telephone1,
		service_password1,
		mobile_telephone2,
		service_password2,
		personal_year_income,
		customer_email,
		credit_card_limit,
		common_occupants,
		status,
		create_user_id,
		create_user_name,
		date_format(create_timestamp,'%Y-%m-%d %H:%i:%s') as create_timestamp,
		last_update_user_id,
		date_format(last_update_timestamp,'%Y-%m-%d %H:%i:%s') as last_update_timestamp,
		(case status
		when '0' then '暂存'
		when '1' then '提交'
		when '2' then '提交'
		end) as status_name,
		enable_flag
		from wms_cus_customer_head
		<where>
			enable_flag=1
			<if test="status !=null">
				and status = #{status}
			</if>
			<if test="customer_name !=null">
				and customer_name like #{customer_name}
			</if>
			<if test="mobile_telephone !=null">
				and (mobile_telephone1 like #{mobile_telephone} or mobile_telephone2
				like #{mobile_telephone})
			</if>
			<if test="create_timestamp !=null">
				and create_timestamp between #{create_timestamp} and
				#{create_timestamp_end}
			</if>
			<if test="id_card !=null">
				and id_card = #{id_card}
			</if>
		</where>
		<if test="sortname != null and sortorder !=null">
			ORDER BY ${sortname} ${sortorder}
		</if>
	</select>

	<!-- 实现客户管理中对暂存数据进行删除操作deleteByPK wms_cus_customer_id -->
	<update id="deleteByPK" parameterType="Integer">
		update wms_cus_customer_head head set head.enable_flag=0 where
		head.wms_cus_customer_id=#{wms_cus_customer_id};
	</update>
</mapper> 
