<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.zx.emanage.inve.persist.WmsInveTransaIncomeDao">
	<!-- get entity by pk -->
	<select id="get" parameterType="int" resultType="WmsInveTransaIncome">
		select
		wms_inve_transa_income_id,
		wms_inve_transa_id,
		wms_inve_transa_prod_id,
		wms_inve_pruduct_category_id,
		id_card,
		cus_name,
		product_deadline_month,
		date_format(return_date,'%Y-%m-%d') as return_date_str,
		return_date,
		product_account,
		product_interest_account,
		date_format(act_return_date,'%Y-%m-%d') as act_return_date_str,
		act_return_date,
		pay_status,
		create_user_id,
		create_user_name,
		date_format(create_timestamp,'%Y-%m-%d %H:%i:%s') as
		create_timestamp_str,
		create_timestamp,
		last_update_user_id,
		date_format(last_update_timestamp,'%Y-%m-%d %H:%i:%s') as
		last_update_timestamp_str,
		last_update_timestamp,
		days_of_calculation,
		bonus_rate,
		payable_reward_income,
		payable_basic_income,
		remarks
		from
		wms_inve_transa_income
		where
		wms_inve_transa_income_id =
		#{wms_inve_transa_income_id}
	</select>

	<!-- count num -->
	<select id="findCount" parameterType="map" resultType="int">
		select count(wms_inve_transa_income_id) as count
		from
		wms_inve_transa_income
		<where>
			<if test="paramname != null">
				<!-- and columnName = #{columnName} -->
			</if>
		</where>
	</select>

	<!-- list -->
	<select id="search" parameterType="map" resultType="java.util.HashMap">
		select
		wms_inve_transa_income_id,
		wms_inve_transa_id,
		wms_inve_transa_prod_id,
		wms_inve_pruduct_category_id,
		id_card,
		cus_name,
		product_deadline_month,
		date_format(return_date,'%Y-%m-%d') as
		return_date_str,
		return_date,
		product_account,
		product_interest_account,
		date_format(act_return_date,'%Y-%m-%d') as act_return_date_str,
		act_return_date,
		pay_status,
		create_user_id,
		create_user_name,
		date_format(create_timestamp,'%Y-%m-%d %H:%i:%s') as
		create_timestamp_str,
		create_timestamp,
		last_update_user_id,
		date_format(last_update_timestamp,'%Y-%m-%d %H:%i:%s') as
		last_update_timestamp_str,
		last_update_timestamp,
		days_of_calculation,
		bonus_rate,
		payable_reward_income,
		payable_basic_income,
		remarks,
		pay_type
		from
		wms_inve_transa_income
		<where>
			1=1
			<if test="wms_inve_transa_id != null">
				and wms_inve_transa_id = #{wms_inve_transa_id}
			</if>
			<if test="return_date != null">
				and DATE_FORMAT(return_date, '%Y-%m') = #{return_date}
			</if>
		</where>
		<if test="sortname != null and sortorder !=null">
			ORDER BY ${sortname} ${sortorder}
		</if>
		<if test="offset != null and pagesize !=null">
			LIMIT ${offset} , ${pagesize}
		</if>
	</select>

	<!-- save -->
	<insert id="save" parameterType="WmsInveTransaIncome"
		useGeneratedKeys="true" keyProperty="wms_inve_transa_income_id">
		INSERT INTO wms_inve_transa_income
		(
		wms_inve_transa_income_id,

		wms_inve_transa_id,

		wms_inve_transa_prod_id,

		wms_inve_pruduct_category_id,

		id_card,

		cus_name,

		product_deadline_month,

		return_date,

		product_account,

		product_interest_account,

		act_return_date,

		pay_status,

		create_user_id,

		create_user_name,

		create_timestamp,

		last_update_user_id,

		last_update_timestamp,

		days_of_calculation,

		bonus_rate,

		payable_reward_income,

		payable_basic_income,

		remarks,
		days_extend_income,
		extend_income,
		adjust_amount, 
		adjust_remark,
		adjust_datetime,
		pm_personnel_id,
		pay_type,
		income_rate,
		wms_inve_customer_card_id,
		days_current_income,
		current_income_rate,
		current_income
		)
		VALUES
		(
		#{wms_inve_transa_income_id},
		#{wms_inve_transa_id},
		#{wms_inve_transa_prod_id},
		#{wms_inve_pruduct_category_id},
		#{id_card},
		#{cus_name},
		#{product_deadline_month},
		#{return_date},
		#{product_account},
		#{product_interest_account},
		#{act_return_date},
		#{pay_status},
		#{create_user_id},
		#{create_user_name},
		#{create_timestamp},
		#{last_update_user_id},
		#{last_update_timestamp},
		#{days_of_calculation},
		#{bonus_rate},
		#{payable_reward_income},
		#{payable_basic_income},
		#{remarks},
		#{days_extend_income},
		#{extend_income},
		#{adjust_amount}, 
		#{adjust_remark},
		#{adjust_datetime},
		#{pm_personnel_id},
		#{pay_type},
		#{income_rate},
		#{wms_inve_customer_card_id},
		#{days_current_income },
		#{current_income_rate },
		#{current_income }
		);
	</insert>
	
	<delete id="removeWmsInveTransaIncomes" parameterType="java.util.List">
		delete from wms_inve_transa_income where wms_inve_transa_id in 
		<foreach collection="list" open="(" close=")" index="index" item="item" separator=",">
			#{item }
		</foreach>
	</delete>
	
	<delete id="removeWmsInveTransaIncomesInIncome">
		delete from wms_inve_transa_income where wms_inve_transa_id in 
		(
			select wms_inve_transa_id from wms_inve_transa where data_status = 4 and enable_flag = 1
		)
	</delete>
	
	<delete id="deleteTransaIncome" parameterType="java.util.HashMap">
		delete from wms_inve_transa_income where wms_inve_transa_id = #{wms_inve_transa_id} and return_date = #{return_date } and pay_type=#{pay_type }
	</delete>
	
	<delete id="removeTransaIncomes" parameterType="java.util.HashMap">
		delete from wms_inve_transa_income 
		where
			wms_inve_transa_id in
			<foreach collection="transaIdList" open="(" close=")" index="index" item="item" separator=",">
				#{item }
			</foreach>
			<if test="pay_type != null">
				and pay_type = #{pay_type}
			</if>
	</delete>

	<!-- 更新用户 -->
	<update id="update" parameterType="WmsInveTransaIncome">
		update wms_inve_transa_income
		<set>
			<if test="wms_inve_transa_income_id != null">
				wms_inve_transa_income_id = #{wms_inve_transa_income_id},
			</if>
			<if test="wms_inve_transa_id != null">
				wms_inve_transa_id = #{wms_inve_transa_id},
			</if>
			<if test="wms_inve_transa_prod_id != null">
				wms_inve_transa_prod_id = #{wms_inve_transa_prod_id},
			</if>
			<if test="wms_inve_pruduct_category_id != null">
				wms_inve_pruduct_category_id = #{wms_inve_pruduct_category_id},
			</if>
			<if test="id_card != null">
				id_card = #{id_card},
			</if>
			<if test="cus_name != null">
				cus_name = #{cus_name},
			</if>
			<if test="product_deadline_month != null">
				product_deadline_month = #{product_deadline_month},
			</if>
			<if test="return_date != null">
				return_date = #{return_date},
			</if>
			<if test="product_account != null">
				product_account = #{product_account},
			</if>
			<if test="product_interest_account != null">
				product_interest_account = #{product_interest_account},
			</if>
			<if test="act_return_date != null">
				act_return_date = #{act_return_date},
			</if>
			<if test="pay_status != null">
				pay_status = #{pay_status},
			</if>
			<if test="create_user_id != null">
				create_user_id = #{create_user_id},
			</if>
			<if test="create_user_name != null">
				create_user_name = #{create_user_name},
			</if>
			<if test="create_timestamp != null">
				create_timestamp = #{create_timestamp},
			</if>
			<if test="last_update_user_id != null">
				last_update_user_id = #{last_update_user_id},
			</if>
			<if test="last_update_timestamp != null">
				last_update_timestamp = #{last_update_timestamp},
			</if>
			<if test="days_of_calculation !=null">
				days_of_calculation = #{days_of_calculation},
			</if>
			<if test="bonus_rate !=null">
				bonus_rate =#{bonus_rate},
			</if>
			<if test="payable_reward_income !=null">
				payable_reward_income =#{payable_reward_income},
			</if>
			<if test="payable_basic_income !=null">
				payable_basic_income =#{payable_basic_income},
			</if>
			<if test="remarks !=null">
				remarks =#{remarks},
			</if>
			<if test="days_extend_income !=null">
				days_extend_income =#{days_extend_income},
			</if>
			<if test="extend_income !=null">
				extend_income =#{extend_income},
			</if>
			<if test="adjust_amount !=null">
				adjust_amount =#{adjust_amount},
			</if>
			<if test="adjust_remark !=null">
				adjust_remark =#{adjust_remark},
			</if>
			<if test="adjust_datetime !=null">
				adjust_datetime =#{adjust_datetime},
			</if>
			<if test="pm_personnel_id !=null">
				pm_personnel_id =#{pm_personnel_id},
			</if>
			<if test="pay_type !=null">
				pay_type =#{pay_type},
			</if>
			<if test="income_rate != null">
				income_rate = #{income_rate},
			</if>
			<if test="renewal_income != null">
				renewal_income = #{renewal_income }
			</if>
		</set>
		where
		wms_inve_transa_income_id = #{wms_inve_transa_income_id}
	</update>
	<select id="getListByEntity" parameterType="WmsInveTransaIncome"
		resultType="WmsInveTransaIncome">
		select
		wms_inve_transa_income_id,
		wms_inve_transa_id,
		wms_inve_transa_prod_id,
		wms_inve_pruduct_category_id,
		id_card,
		cus_name,
		product_deadline_month,
		date_format(return_date,'%Y-%m-%d') as
		return_date_str,
		return_date,
		product_account,
		product_interest_account,
		date_format(act_return_date,'%Y-%m-%d') as act_return_date_str,
		act_return_date,
		pay_status,
		create_user_id,
		create_user_name,
		date_format(create_timestamp,'%Y-%m-%d %H:%i:%s') as
		create_timestamp_str,
		create_timestamp,
		last_update_user_id,
		date_format(last_update_timestamp,'%Y-%m-%d %H:%i:%s') as
		last_update_timestamp_str,
		last_update_timestamp,
		days_of_calculation,
		bonus_rate,
		payable_reward_income,
		payable_basic_income,
		remarks,
		pay_type,
		income_rate,
		days_extend_income,
		renewal_income,
		extend_income
		from
		wms_inve_transa_income
		<where>
			<if test="wms_inve_transa_income_id != null">
				and wms_inve_transa_income_id =
				#{wms_inve_transa_income_id}
			</if>
			<if test="wms_inve_transa_id != null">
				and wms_inve_transa_id = #{wms_inve_transa_id}
			</if>
			<if test="wms_inve_transa_prod_id != null">
				and wms_inve_transa_prod_id = #{wms_inve_transa_prod_id}
			</if>
			<if test="wms_inve_pruduct_category_id != null">
				and wms_inve_pruduct_category_id =
				#{wms_inve_pruduct_category_id}
			</if>
			<if test="id_card != null">
				and id_card = #{id_card}
			</if>
			<if test="cus_name != null">
				and cus_name = #{cus_name}
			</if>
			<if test="product_deadline_month != null">
				and product_deadline_month = #{product_deadline_month}
			</if>
			<if test="return_date != null">
				and return_date = #{return_date}
			</if>
			<if test="product_account != null">
				and product_account = #{product_account}
			</if>
			<if test="product_interest_account != null">
				and product_interest_account =
				#{product_interest_account}
			</if>
			<if test="act_return_date != null">
				and act_return_date = #{act_return_date}
			</if>
			<if test="pay_status != null">
				and pay_status = #{pay_status}
			</if>
			<if test="create_user_id != null">
				and create_user_id = #{create_user_id}
			</if>
			<if test="create_user_name != null">
				and create_user_name = #{create_user_name}
			</if>
			<if test="create_timestamp != null">
				and create_timestamp = #{create_timestamp}
			</if>
			<if test="last_update_user_id != null">
				and last_update_user_id = #{last_update_user_id}
			</if>
			<if test="last_update_timestamp != null">
				and last_update_timestamp = #{last_update_timestamp}
			</if>
			<if test="days_of_calculation !=null">
				and days_of_calculation #{days_of_calculation}
			</if>
			<if test="bonus_rate !=null">
				and bonus_rate =#{bonus_rate}
			</if>
			<if test="payable_reward_income !=null">
				and payable_reward_income =#{payable_reward_income}
			</if>
			<if test="payable_basic_income !=null">
				and payable_basic_income =#{payable_basic_income}
			</if>
			<if test="remarks !=null">
				and remarks =#{remarks}
			</if>
			<if test="isExcludePKFlag != null and isExcludePKFlag == true">
				and wms_inve_transa_income_id !=
				#{wms_inve_transa_income_id}
			</if>
			<if test="pay_type != null">
				and pay_type in (${pay_type })
			</if>
		</where>
		order by return_date asc
	</select>

	<!-- 批量添加收益信息 -->
	<insert id="addBatchWmsInveTransaIncomes" parameterType="java.util.List">
		insert into wms_inve_transa_income (
		wms_inve_transa_id,
		wms_inve_transa_prod_id,
		wms_inve_pruduct_category_id,
		id_card,
		cus_name,
		product_deadline_month,
		return_date,
		product_account,
		product_interest_account,
		act_return_date,
		pay_status,
		create_user_id,
		create_user_name,
		create_timestamp,
		last_update_user_id,
		last_update_timestamp,
		days_of_calculation,
		bonus_rate,
		payable_reward_income,
		income_rate,
		payable_basic_income,
		remarks,
		days_extend_income,
		extend_income,
		adjust_amount,
		adjust_remark,
		adjust_datetime,
		pm_personnel_id,
		pay_type,
		wms_inve_customer_card_id
		) values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(
			#{item.wms_inve_transa_id},
			#{item.wms_inve_transa_prod_id},
			#{item.wms_inve_pruduct_category_id},
			#{item.id_card},
			#{item.cus_name},
			#{item.product_deadline_month},
			#{item.return_date},
			#{item.product_account},
			#{item.product_interest_account},
			#{item.act_return_date},
			#{item.pay_status},
			#{item.create_user_id},
			#{item.create_user_name},
			#{item.create_timestamp},
			#{item.last_update_user_id},
			#{item.last_update_timestamp},
			#{item.days_of_calculation},
			#{item.bonus_rate},
			#{item.payable_reward_income},
			#{item.income_rate},
			#{item.payable_basic_income},
			#{item.remarks},
			#{item.days_extend_income},
			#{item.extend_income},
			#{item.adjust_amount},
			#{item.adjust_remark},
			#{item.adjust_datetime},
			#{item.pm_personnel_id},
			#{item.pay_type},
			#{item.wms_inve_customer_card_id}
			)
		</foreach>
	</insert>

	<select id="getWmsInveTransaIncome" parameterType="map"
		resultType="WmsInveTransaIncome">
		select
		wms_inve_transa_income_id,
		wms_inve_transa_id,
		wms_inve_transa_prod_id,
		wms_inve_pruduct_category_id,
		id_card,
		cus_name,
		product_deadline_month,
		date_format(return_date,'%Y-%m-%d') as return_date_str,
		return_date,
		product_account,
		product_interest_account,
		date_format(act_return_date,'%Y-%m-%d') as act_return_date_str,
		act_return_date,
		pay_status,
		create_user_id,
		create_user_name,
		date_format(create_timestamp,'%Y-%m-%d %H:%i:%s') as create_timestamp_str,
		create_timestamp,
		last_update_user_id,
		date_format(last_update_timestamp,'%Y-%m-%d %H:%i:%s') as last_update_timestamp_str,
		last_update_timestamp,
		days_of_calculation,
		bonus_rate,
		payable_reward_income,
		income_rate,
		payable_basic_income,
		remarks
		from
		wms_inve_transa_income
		where
		wms_inve_transa_id = #{wms_inve_transa_id}
		and date_format(return_date,'%Y-%m') =
		date_format(date_add((select min(return_date) from wms_inve_transa_income where wms_inve_transa_id
		= #{wms_inve_transa_id}), interval #{full_month} month),'%Y-%m')
		and date_add(DATE_FORMAT(create_timestamp,'%Y-%m-%d'), interval
		#{full_month} month) > #{date_of_payment}
	</select>

	<delete id="delWmsInveTransaIncomes" parameterType="java.lang.Integer">
		delete from
		wms_inve_transa_income where wms_inve_transa_id =
		#{wms_inve_transa_id}
	</delete>

	<select id="getWmsTransaFullRedeemInfo" parameterType="java.lang.Integer"
		resultType="java.util.HashMap">
		SELECT
		r.redeem_date
		FROM
		wms_inve_redeem r,
		wms_inve_transa_protocol tp,
		wms_inve_transa t
		WHERE
		r.wms_inve_redeem_id = tp.wms_inve_redeem_id
		AND tp.wms_inve_transa_id =
		t.wms_inve_transa_id
		AND t.wms_inve_transa_id = #{wms_inve_transa_id}
		AND r.is_fully_redeemed = 1
		AND r.enable_flag = 1
		AND tp.enable_flag = 1
		AND t.enable_flag = 1
		AND t.data_status = 6
		AND r.data_status = 6;
	</select>

	<select id="getWmsInveTransaIncomeByWmsInveTransaIdAndReturnDate"
		parameterType="WmsInveTransaIncome" resultType="WmsInveTransaIncome">
		select
		wms_inve_transa_income_id,
		wms_inve_transa_id,
		wms_inve_transa_prod_id,
		wms_inve_pruduct_category_id,
		id_card,
		cus_name,
		product_deadline_month,
		return_date,
		product_account,
		product_interest_account,
		act_return_date,
		pay_status,
		create_user_id,
		create_user_name,
		create_timestamp,
		last_update_user_id,
		last_update_timestamp,
		days_of_calculation,
		bonus_rate,
		payable_reward_income,
		income_rate,
		payable_basic_income,
		remarks,
		days_extend_income,
		extend_income,
		adjust_amount,
		adjust_remark,
		adjust_datetime,
		pm_personnel_id,
		pay_type
		from
		wms_inve_transa_income
		where
		wms_inve_transa_id = #{wms_inve_transa_id}
		and
		DATE_FORMAT(return_date,'%Y-%m') = DATE_FORMAT(#{return_date_str},'%Y-%m')

	</select>

	<select id="getPlayMoneyList" parameterType="map" resultType="map">
		
		select
			case when b.bank_of_deposit = '中国民生银行' then '民生银行' else b.bank_of_deposit end as bank_of_deposit,
			b.bank_branch,
			b.bank_of_deposit_pro,
			b.bank_of_deposit_city,
			b.card_no,
			b.cus_name,
			b.bill_code,
			b.wms_inve_transa_id,
			b.product_deadline_month,
			b.return_date,
			b.product_account,
			b.product_interest_account,
			b.days_of_calculation,
			b.bonus_rate,
			b.payable_reward_income,
			b.income_rate,
			b.payable_basic_income,
			b.days_extend_income,
			b.extend_income,
			b.adjust_amount,
			b.payable_income,
			b.payable_total_income,
			b.remarks,
			b.date_of_payment,
			b.pay_status_page,
			case when b.pay_status is null then '' 
			     when b.pay_status = 0 then '未支付'
			     when b.pay_status = 1 then '已支付'
			     when b.pay_status = 2 then '已终止'
			     when b.pay_status = 3 then '已支付'
			     when b.pay_status = 4 then '已支付'
			end
			as pay_status
		from
			(
				<!-- 基本收益sql -->
						SELECT
							w5.bank_of_deposit,
							w5.bank_branch,
							(SELECT 
								CASE WHEN RIGHT(value_meaning,1)='省' OR RIGHT(value_meaning,1)='市' 
										  THEN LEFT(value_meaning,CHAR_LENGTH(value_meaning) - 1)
								     WHEN RIGHT(value_meaning,3)='自治区'
								          THEN LEFT(value_meaning,CHAR_LENGTH(value_meaning) - 3)
								     ELSE value_meaning 
								END  
							 FROM 
							    wms_sys_dict_data 
							 WHERE 
							 	wms_sys_dict_id=72 
							 AND 
							 	value_code = w5.bank_of_deposit_pro
							 ) 
							 as bank_of_deposit_pro,
							(SELECT CASE WHEN RIGHT(value_meaning,1)='市' THEN LEFT(value_meaning,CHAR_LENGTH(value_meaning) - 1) ELSE value_meaning END  FROM wms_sys_dict_data WHERE wms_sys_dict_id=73 AND value_code = w5.bank_of_deposit_city) as bank_of_deposit_city,
							w5.card_no,
							w2.cus_name,
							w2.bill_code,
							w1.wms_inve_transa_id,
							w1.product_deadline_month,
							case when DATE_FORMAT(w1.return_date,'%Y-%m') = DATE_FORMAT(now(),'%Y-%m') then DATE_FORMAT(LAST_DAY(w1.return_date),'%Y-%m-%d') else DATE_FORMAT(w1.act_return_date,'%Y-%m-%d') end as return_date,
							w1.product_account,
							w1.product_interest_account,
							w1.days_of_calculation,
							IFNULL(sum(w1.bonus_rate),0) as bonus_rate,
							IFNULL(sum(w1.payable_reward_income),0) as payable_reward_income,
							w1.income_rate,
							case when DATE_FORMAT(w1.return_date,'%Y-%m') = DATE_FORMAT(now(),'%Y-%m') 
								 then 
								 	  (IFNULL(w1.payable_basic_income,0) + IFNULL(w1.renewal_income,0))
								 else
									  w1.payable_basic_income
							end
							as payable_basic_income,
							IFNULL(sum(w1.days_extend_income),0) as days_extend_income,
							IFNULL(sum(w1.extend_income),0) as extend_income,
							IFNULL(w1.adjust_amount,0) as adjust_amount,
							case when DATE_FORMAT(w1.return_date,'%Y-%m') = DATE_FORMAT(now(),'%Y-%m') 
							     then
							     	(IFNULL(w1.payable_basic_income,0) + IFNULL(w1.renewal_income,0))
							     else
							         IFNULL(w1.payable_basic_income,0)
							end
							AS payable_income,
							case when DATE_FORMAT(w1.return_date,'%Y-%m') = DATE_FORMAT(now(),'%Y-%m') 
							     then
							     	  (IFNULL(w1.payable_basic_income,0) + IFNULL(w1.adjust_amount,0) + IFNULL(w1.renewal_income,0))
							     else
							     	  (IFNULL(w1.payable_basic_income,0) + IFNULL(w1.adjust_amount,0))
							end
							AS payable_total_income,
							SUBSTRING_INDEX(w1.remarks,',',1) as remarks,
							w2.date_of_payment,
							w1.pay_status,
							w1.pay_status  as pay_status_page,
							null as adjust_amount_mon
						FROM wms_inve_transa_income w1, wms_inve_transa w2, wms_inve_transa_prod w3, wms_inve_pruduct_category w4, wms_inve_customer_card w5
						WHERE w1.wms_inve_transa_id = w2.wms_inve_transa_id
						AND w1.wms_inve_transa_prod_id = w3.wms_inve_transa_prod_id
						AND w1.wms_inve_pruduct_category_id = w4.wms_inve_pruduct_category_id
						AND w3.wms_inve_customer_card_id = w5.wms_inve_customer_card_id
						AND w2.wms_inve_transa_id not IN (SELECT * FROM (SELECT wms_inve_transa_id FROM wms_inve_transa_income_special) t1) 
						AND
						CASE WHEN ISNULL(w2.old_wms_inve_transa_id) = 0 THEN
							w2.old_wms_inve_transa_id NOT IN (SELECT * FROM ( SELECT wms_inve_transa_id FROM wms_inve_transa_income_special ) t2
						)
						ELSE
							1=1
						END
						AND w1.pay_type in (2,3)
						AND w1.pay_status in(0,1,3,4)
						<if test="return_date!=null">
							AND DATE_FORMAT(w1.return_date,'%Y-%m') = DATE_FORMAT(#{return_date},'%Y-%m')
							AND
							CASE WHEN DATE_FORMAT(#{return_date},'%Y-%m') = DATE_FORMAT(NOW(),'%Y-%m')
							          THEN w2.data_status in(4,6)
				                 WHEN DATE_FORMAT(#{return_date},'%Y-%m') &lt; DATE_FORMAT(NOW(),'%Y-%m')
							          THEN w2.data_status in(4,5,6)
				            END
						</if>
<!-- 						<if test="return_date==null or return_date==''"> -->
<!-- 							AND w2.data_status in(4,6) -->
<!-- 						</if> -->
						<if test="signing_date_begin != null"> 
							AND DATE_FORMAT(w2.date_of_payment,'%Y/%m/%d') &gt;= DATE_FORMAT(#{signing_date_begin},'%Y/%m/%d') 
						</if> 
						<if test="signing_date_end != null"> 
							AND DATE_FORMAT(w2.date_of_payment,'%Y/%m/%d') &lt;= DATE_FORMAT(#{signing_date_end},'%Y/%m/%d') 
						</if> 
						<if test="category_name != null">AND w3.wms_inve_pruduct_category_id = #{category_name}</if> 
						<if test="bill_code	!= null"> AND w2.bill_code like '%${bill_code}%' </if> 
						<if test="cus_name != null"> AND w2.cus_name like '%${cus_name}%' </if>
						group by w1.wms_inve_transa_id, w1.pay_status
						HAVING 
						   IFNULL(payable_income,0) != 0 
						<if test="is_bonus_rate!=null and is_bonus_rate==1">AND IFNULL(sum(w1.bonus_rate),0) != 0</if>
						<if test="is_bonus_rate!=null and is_bonus_rate==2">AND IFNULL(sum(w1.bonus_rate),0) = 0</if>
						<if test="is_extent_rate!=null and is_extent_rate==1">AND IFNULL(sum(w1.extend_income), 0) != 0 </if>
						<if test="is_extent_rate!=null and is_extent_rate==2">AND IFNULL(sum(w1.extend_income), 0) = 0</if>
						AND (IFNULL(payable_total_income,0)>0 OR IFNULL(adjust_amount,0) != 0)
				
				UNION ALL
				
				<!-- 公益收益sql -->
				SELECT
					w5.bank_of_deposit,
					w5.bank_branch,
					(SELECT 
						CASE WHEN RIGHT(value_meaning,1)='省' OR RIGHT(value_meaning,1)='市' 
								  THEN LEFT(value_meaning,CHAR_LENGTH(value_meaning) - 1)
						     WHEN RIGHT(value_meaning,3)='自治区'
						          THEN LEFT(value_meaning,CHAR_LENGTH(value_meaning) - 3)
						     ELSE value_meaning 
						END    
					 FROM 
					 	wms_sys_dict_data 
					 WHERE 
					 	wms_sys_dict_id=72 
					 AND value_code = w5.bank_of_deposit_pro
					 ) 
					as bank_of_deposit_pro,
					(SELECT CASE WHEN RIGHT(value_meaning,1)='市' THEN LEFT(value_meaning,CHAR_LENGTH(value_meaning) - 1) ELSE value_meaning END  FROM wms_sys_dict_data WHERE wms_sys_dict_id=73 AND value_code = w5.bank_of_deposit_city) as bank_of_deposit_city,
					w5.card_no,
					w2.cus_name,
					w2.bill_code,
					w1.wms_inve_transa_id,
					w1.product_deadline_month,
					case when DATE_FORMAT(w1.return_date,'%Y-%m') = DATE_FORMAT(now(),'%Y-%m') then DATE_FORMAT(LAST_DAY(w1.return_date),'%Y-%m-%d') else DATE_FORMAT(w1.act_return_date,'%Y-%m-%d') end as return_date,
					w1.product_account,
					w1.product_interest_account,
					w1.days_of_calculation,
					sum(IFNULL(w1.bonus_rate,0)) as bonus_rate,
					w1.payable_reward_income,
					w1.income_rate,
					IFNULL(sum(w1.days_extend_income),0) as days_extend_income,
					IFNULL(sum(w1.extend_income), 0) as extend_income,
					IFNULL(sum(w1.extend_income), 0) as payable_basic_income,
					ROUND(IFNULL(SUBSTRING_INDEX(GROUP_CONCAT(IFNULL(w1.adjust_amount,0) ORDER BY w1.wms_inve_transa_income_id ASC),',',-1),0),2) as adjust_amount,
					IFNULL(sum(w1.extend_income), 0) as payable_income,
					IFNULL(sum(w1.extend_income) + ROUND(IFNULL(SUBSTRING_INDEX(GROUP_CONCAT(IFNULL(w1.adjust_amount,0) ORDER BY w1.wms_inve_transa_income_id ASC),',',-1),0),2), 0) AS payable_total_income,
					SUBSTRING_INDEX(GROUP_CONCAT(w1.remarks ORDER BY w1.wms_inve_transa_income_id ASC),',',-1) as remarks,
					w2.date_of_payment,
					SUBSTRING_INDEX(GROUP_CONCAT(ifnull(w1.pay_status,0) ORDER BY w1.wms_inve_transa_income_id ASC),',',-1) as pay_status,
					SUBSTRING_INDEX(GROUP_CONCAT(ifnull(w1.pay_status,0) ORDER BY w1.wms_inve_transa_income_id ASC),',',-1) as pay_status_page,
					null as adjust_amount_mon
				FROM wms_inve_transa_income w1, wms_inve_transa w2, wms_inve_transa_prod w3, wms_inve_pruduct_category w4, wms_inve_customer_card w5
				WHERE w1.wms_inve_transa_id = w2.wms_inve_transa_id
				AND w1.wms_inve_transa_prod_id = w3.wms_inve_transa_prod_id
				AND w1.wms_inve_pruduct_category_id = w4.wms_inve_pruduct_category_id
				AND w3.wms_inve_customer_card_id = w5.wms_inve_customer_card_id
				AND w2.wms_inve_transa_id not IN (SELECT * FROM (SELECT wms_inve_transa_id FROM wms_inve_transa_income_special) t1) 
				AND
				CASE WHEN ISNULL(w2.old_wms_inve_transa_id) = 0 
				     THEN w2.old_wms_inve_transa_id NOT IN (SELECT * FROM ( SELECT wms_inve_transa_id FROM wms_inve_transa_income_special ) t2)
					 ELSE 1=1
				END
				AND w1.pay_type in (2,3)
				AND w1.pay_status in(0,1,3,4)
				<if test="return_date!=null">
					AND DATE_FORMAT(w1.return_date,'%Y-%m') = DATE_FORMAT(#{return_date},'%Y-%m')
					AND
					CASE WHEN DATE_FORMAT(#{return_date},'%Y-%m') = DATE_FORMAT(NOW(),'%Y-%m')
							  THEN w2.data_status in(4,6)
				         WHEN DATE_FORMAT(#{return_date},'%Y-%m') &lt; DATE_FORMAT(NOW(),'%Y-%m')
							  THEN w2.data_status in(4,5,6)
				    END
				</if>
<!-- 				<if test="return_date==null or return_date==''"> -->
<!-- 					AND w2.data_status in(4,6) -->
<!-- 				</if> -->
				<if test="signing_date_begin != null">
					 AND DATE_FORMAT(w2.date_of_payment,'%Y/%m/%d') &gt;= DATE_FORMAT(#{signing_date_begin},'%Y/%m/%d')  
				</if> 
				<if test="signing_date_end != null"> 
					AND DATE_FORMAT(w2.date_of_payment,'%Y/%m/%d') &lt;= DATE_FORMAT(#{signing_date_end},'%Y/%m/%d')   
				</if> 
				<if test="category_name != null">AND w3.wms_inve_pruduct_category_id = #{category_name}</if> 
				<if test="bill_code	!= null"> AND w2.bill_code like '%${bill_code}%' </if> 
				<if test="cus_name != null"> AND w2.cus_name like '%${cus_name}%' </if> 
					GROUP BY w1.wms_inve_transa_id, w1.pay_status
				HAVING
					IFNULL(sum(w1.extend_income), 0) != 0 
				<if test="is_bonus_rate!=null and is_bonus_rate==1">AND IFNULL(sum(w1.bonus_rate),0) != 0</if>
				<if test="is_bonus_rate!=null and is_bonus_rate==2">AND IFNULL(sum(w1.bonus_rate),0) = 0</if>
				AND (IFNULL(payable_total_income,0)>0 OR IFNULL(adjust_amount,0) != 0)
						
				UNION ALL
				<!-- 奖励收益sql -->
					SELECT
						w5.bank_of_deposit,
						w5.bank_branch,
						(SELECT 
							CASE WHEN RIGHT(value_meaning,1)='省' OR RIGHT(value_meaning,1)='市' 
									  THEN LEFT(value_meaning,CHAR_LENGTH(value_meaning) - 1)
							     WHEN RIGHT(value_meaning,3)='自治区'
							          THEN LEFT(value_meaning,CHAR_LENGTH(value_meaning) - 3)
							     ELSE value_meaning 
							END    
						 FROM 
						 	wms_sys_dict_data 
						 WHERE 
						 	wms_sys_dict_id=72 
					     AND value_code = w5.bank_of_deposit_pro
					     ) 
					    as bank_of_deposit_pro,
						(SELECT CASE WHEN RIGHT(value_meaning,1)='市' THEN LEFT(value_meaning,CHAR_LENGTH(value_meaning) - 1) ELSE value_meaning END  FROM wms_sys_dict_data WHERE wms_sys_dict_id=73 AND value_code = w5.bank_of_deposit_city) as bank_of_deposit_city,
						w5.card_no,
						w2.cus_name,
						w2.bill_code,
						w1.wms_inve_transa_id,
						w1.product_deadline_month,
						case when DATE_FORMAT(w1.return_date,'%Y-%m') = DATE_FORMAT(now(),'%Y-%m') then DATE_FORMAT(LAST_DAY(w1.return_date),'%Y-%m-%d') else DATE_FORMAT(w1.act_return_date,'%Y-%m-%d') end as return_date,
						w1.product_account,
						w1.product_interest_account,
						w1.days_of_calculation,
						IFNULL(SUM(w1.bonus_rate),0) as bonus_rate,
						IFNULL(SUM(w1.payable_reward_income),0) as payable_reward_income,
						w1.income_rate,
						w1.payable_reward_income as payable_basic_income,
						IFNULL(SUM(w1.days_extend_income),0) as days_extend_income,
						IFNULL(SUM(w1.extend_income),0) as extend_income,
						null as adjust_amount,
						w1.payable_reward_income AS payable_income,
						w1.payable_reward_income AS payable_total_income,
						SUBSTRING_INDEX(w1.remarks,',',-1) as remarks,
						w2.date_of_payment,
						w1.pay_status,
						w1.pay_status as pay_status_page,
						IFNULL(SUM(w1.adjust_amount), 0) as adjust_amount_mon
					FROM wms_inve_transa_income w1, wms_inve_transa w2, wms_inve_transa_prod w3, wms_inve_pruduct_category w4,wms_inve_customer_card w5
					WHERE w1.wms_inve_transa_id = w2.wms_inve_transa_id
					AND w1.wms_inve_transa_prod_id = w3.wms_inve_transa_prod_id
					AND w1.wms_inve_pruduct_category_id = w4.wms_inve_pruduct_category_id
					AND w3.wms_inve_customer_card_id = w5.wms_inve_customer_card_id
					AND w2.wms_inve_transa_id not IN (SELECT * FROM (SELECT wms_inve_transa_id FROM wms_inve_transa_income_special) t1) 
					AND
						CASE WHEN ISNULL(w2.old_wms_inve_transa_id) = 0 THEN
							w2.old_wms_inve_transa_id NOT IN (
							SELECT
								*
							FROM
								(
									SELECT
										wms_inve_transa_id
									FROM
										wms_inve_transa_income_special
								) t2
						)
						ELSE
							1=1
						END
					AND w1.pay_type in (2,3)
					AND w1.pay_status in(0,1,3,4)
					<if test="return_date!=null">
						AND DATE_FORMAT(w1.return_date,'%Y-%m') = DATE_FORMAT(#{return_date},'%Y-%m')
						AND
						CASE WHEN DATE_FORMAT(#{return_date},'%Y-%m') = DATE_FORMAT(NOW(),'%Y-%m')
								  THEN w2.data_status in(4,6)
				             WHEN DATE_FORMAT(#{return_date},'%Y-%m') &lt; DATE_FORMAT(NOW(),'%Y-%m')
								  THEN w2.data_status in(4,5,6)
				        END
					</if>
<!-- 					<if test="return_date==null or return_date==''"> -->
<!-- 						AND w2.data_status in(4,6) -->
<!-- 					</if> -->
					<if test="signing_date_begin != null"> 
						AND DATE_FORMAT(w2.date_of_payment,'%Y/%m/%d') &gt;= DATE_FORMAT(#{signing_date_begin},'%Y/%m/%d') 
					</if> 
					<if test="signing_date_end != null"> 
						AND DATE_FORMAT(w2.date_of_payment,'%Y/%m/%d') &lt;= DATE_FORMAT(#{signing_date_end},'%Y/%m/%d')
					</if> 
					<if test="category_name != null"> AND w3.wms_inve_pruduct_category_id = #{category_name}</if> 
					<if test="bill_code	!= null"> AND w2.bill_code like '%${bill_code}%' </if> 
					<if test="cus_name != null"> AND w2.cus_name like '%${cus_name}%' </if> 
					GROUP BY w1.wms_inve_transa_id, w1.pay_status
					HAVING
					    IFNULL(sum(w1.bonus_rate),0) != 0
					<if test="is_extent_rate!=null and is_extent_rate==1">AND IFNULL(sum(w1.extend_income), 0) != 0 </if>
					<if test="is_extent_rate!=null and is_extent_rate==2">AND IFNULL(sum(w1.extend_income), 0) = 0</if>
					AND (IFNULL(payable_total_income,0)>0  OR IFNULL(adjust_amount_mon,0) != 0)
			) b 
			where
			1=1
			<if test="is_query_pay_status !=null and is_query_pay_status == 1">AND b.pay_status_page in (1,3,4)</if>
			<if test="is_query_pay_status !=null and is_query_pay_status == 2">AND b.pay_status_page = 0</if>
			order by b.date_of_payment DESC,b.wms_inve_transa_id DESC
			
	</select>
	
	<select id="getIncomeTotalList" parameterType="map" resultType="map">
		select
				t.bill_code,
				t.cus_name,
				t.signing_date,
				t.salesman_name,
				t.product_account,
				t.category_name,
				t.category_deadline,
				t.data_status,
				t.days_of_calculation,
				t.income_rate,
				t.payable_basic_income,
				t.bonus_rate,
				t.payable_reward_income,
				t.return_date,
				t.product_interest_account,
				t.days_extend_income,
				t.extend_income,
				t.adjust_amount,
				t.adjust_remark,
				t.total_income,
				t.pay_status,
				t.wms_inve_transa_id,
				t.wms_inve_transa_income_id,
				t.pay_status_page,
				t.wms_inve_pruduct_category_id,
				t.wms_inve_transa_income_id
		from
		(
			SELECT
				  wt1.bill_code,
				  wt1.cus_name,
				  (DATE_FORMAT(wt1.date_of_payment,'%Y/%m/%d')) AS signing_date,
				  CONCAT(wt1.salesman_name,'  ',wt1.salesman_shortcode) AS salesman_name,
				  wt2.product_account,
				  wt3.category_name,
				  wt3.product_deadline as category_deadline,
				  (SELECT value_meaning FROM wms_sys_dict_data WHERE wms_sys_dict_id = 55 AND value_code = wt1.data_status) AS data_status,
				  wt2.days_of_calculation,
				  IFNULL(wt2.income_rate,0) as income_rate,
				  IFNULL(wt2.payable_basic_income,0) as payable_basic_income,
				  IFNULL(wt2.bonus_rate,0) as bonus_rate,
				  IFNULL(wt2.payable_reward_income,0) as payable_reward_income,
				  wt2.return_date,
				  IFNULL(wt2.product_interest_account,0) as product_interest_account,
				  IFNULL(wt2.days_extend_income,0) as days_extend_income,
				  IFNULL(wt2.extend_income,0) as extend_income,
				  IFNULL(wt2.adjust_amount,0) as adjust_amount,
				  wt2.adjust_remark,
				  IFNULL(wt2.total_income,0) as total_income,
				  wt2.pay_status as pay_status_page,
				  case when wt2.pay_status is null then '' 
				     when wt2.pay_status = 0 then '未支付'
				     when wt2.pay_status = 1 then '已支付'
				     when wt2.pay_status = 2 then '已终止'
				     when wt2.pay_status = 3 then '已支付'
				     when wt2.pay_status = 4 then '已支付'
				  end
				  as pay_status,
				  wt1.wms_inve_transa_id,
				  wt2.wms_inve_transa_income_id,
				  wt3.wms_inve_pruduct_category_id
			FROM wms_inve_transa wt1
			INNER JOIN 
			(
					SELECT
						CASE WHEN w1.pay_status = 0 
                      			  THEN GROUP_CONCAT(w1.wms_inve_transa_income_id)
							 ELSE wms_inve_transa_income_id
						END
						AS wms_inve_transa_income_id,
						w1.wms_inve_transa_id,
						round(IFNULL(w1.product_account/ 10000, 0))  AS product_account,
						sum(w1.days_of_calculation) as days_of_calculation,
						IFNULL(sum(w1.income_rate), 0) AS income_rate,
						CASE WHEN DATE_FORMAT(w1.return_date, '%Y-%m') = DATE_FORMAT(now(),'%Y-%m') 
						     THEN (IFNULL(sum(w1.payable_basic_income), 0) + IFNULL(sum(w1.renewal_income), 0)) 
						     ELSE IFNULL(sum(w1.payable_basic_income), 0)
						END 
						AS payable_basic_income,
						IFNULL(sum(w1.bonus_rate), 0) AS bonus_rate,
						IFNULL(sum(w1.payable_reward_income),0)as payable_reward_income,
						CASE WHEN DATE_FORMAT(w1.return_date, '%Y-%m') = DATE_FORMAT(now(), '%Y-%m') THEN DATE_FORMAT(LAST_DAY(w1.return_date), '%Y-%m-%d') ELSE
						DATE_FORMAT(w1.act_return_date,'%Y-%m-%d') END AS return_date, 
						CASE WHEN DATE_FORMAT(w1.return_date, '%Y-%m') = DATE_FORMAT(now(), '%Y-%m') 
							THEN (IFNULL(sum(w1.payable_basic_income), 0) + IFNULL(sum(w1.payable_reward_income), 0) + IFNULL(sum(w1.adjust_amount), 0) + IFNULL(SUM(w1.extend_income), 0) + IFNULL(sum(w1.renewal_income), 0)) 
							ELSE (IFNULL(sum(w1.payable_basic_income), 0) + IFNULL(sum(w1.payable_reward_income),0) + IFNULL(sum(w1.adjust_amount), 0) + IFNULL(SUM(w1.extend_income), 0) )
						END AS product_interest_account,
						IFNULL(SUM(w1.days_extend_income), 0) AS days_extend_income,
						IFNULL(SUM(w1.extend_income), 0) AS extend_income,
						IFNULL(sum(w1.adjust_amount), 0) AS adjust_amount,
						w1.adjust_remark,
						CASE WHEN DATE_FORMAT(w1.return_date, '%Y-%m') = DATE_FORMAT(now(), '%Y-%m') 
						     THEN (IFNULL(sum(w1.payable_basic_income), 0) + IFNULL(sum(w1.payable_reward_income), 0) + IFNULL(sum(w1.adjust_amount), 0) + IFNULL(SUM(w1.extend_income), 0) + IFNULL(sum(w1.renewal_income), 0))
						     ELSE (IFNULL(sum(w1.payable_basic_income), 0) + IFNULL(sum(w1.payable_reward_income),0) + IFNULL(sum(w1.adjust_amount), 0) + IFNULL(SUM(w1.extend_income), 0))
						END
						AS total_income,
						w1.pay_status,
						w1.pay_type
					FROM wms_inve_transa_income w1
					LEFT JOIN wms_inve_transa w2 ON w1.wms_inve_transa_id = w2.wms_inve_transa_id
					LEFT JOIN wms_inve_pruduct_category w3 ON w1.wms_inve_pruduct_category_id = w3.wms_inve_pruduct_category_id
					LEFT JOIN wms_inve_transa_prod w4 ON w1.wms_inve_transa_prod_id = w4.wms_inve_transa_prod_id
					WHERE w1.pay_type in (2,3)
				    AND w2.wms_inve_transa_id NOT IN (SELECT * FROM (SELECT wms_inve_transa_id FROM wms_inve_transa_income_special) t1) 
					AND 
					CASE WHEN ISNULL(w2.old_wms_inve_transa_id) = 0 
				         THEN w2.old_wms_inve_transa_id NOT IN (SELECT * FROM (SELECT wms_inve_transa_id FROM wms_inve_transa_income_special) t2)
					   	 ELSE 1=1
					END
					AND w1.pay_status in (0,1,3,4)
					<if test="return_date!=null">
					AND DATE_FORMAT(w1.return_date,'%Y-%m') = DATE_FORMAT(#{return_date},'%Y-%m')
					AND
					CASE WHEN DATE_FORMAT(#{return_date},'%Y-%m') = DATE_FORMAT(NOW(),'%Y-%m')
							  THEN w2.data_status in(4,6)
			             WHEN DATE_FORMAT(#{return_date},'%Y-%m') &lt; DATE_FORMAT(NOW(),'%Y-%m')
							  THEN w2.data_status in(4,5,6)
			        END
					</if>
				    GROUP BY w1.wms_inve_transa_id, w1.pay_status
				    HAVING
				    (IFNULL(total_income,0)>0 OR IFNULL(adjust_amount, 0) != 0)
			) wt2
			ON wt1.wms_inve_transa_id = wt2.wms_inve_transa_id
			INNER JOIN wms_inve_transa_prod wt3
			ON wt1.wms_inve_transa_id = wt3.wms_inve_transa_id
			WHERE 
			wt1.enable_flag = 1
			
			
			UNION ALL
			
			SELECT 
				  t1.bill_code,
				  t1.cus_name,
				  (DATE_FORMAT(t1.date_of_payment,'%Y/%m/%d')) AS signing_date,
				  CONCAT(t1.salesman_name,'  ',t1.salesman_shortcode) AS salesman_name,
				  round(IFNULL(wt3.product_account/ 10000, 0) ) AS product_account,
				  wt3.category_name,
				  wt3.product_deadline as category_deadline,
				  (SELECT value_meaning FROM wms_sys_dict_data WHERE wms_sys_dict_id = 55 AND value_code = t1.data_status) AS data_status,
				  null as days_of_calculation,
				  null as income_rate,
				  null as payable_basic_income,
				  null as bonus_rate,
				  null as payable_reward_income,
				  null as return_date,
				  null as product_interest_account,
				  null as days_extend_income,
				  null as extend_income,
				  null as adjust_amount,
				  null as adjust_remark,
				  null as total_income,
				  null as pay_status_page,
				  null as pay_status,
				  t1.wms_inve_transa_id,
				  null as wms_inve_transa_income_id,
				  wt3.wms_inve_pruduct_category_id
			FROM wms_inve_transa t1
			INNER JOIN wms_inve_transa_prod wt3
			ON t1.wms_inve_transa_id = wt3.wms_inve_transa_id
			WHERE FIND_IN_SET(t1.wms_inve_transa_id,
				(
						SELECT
							GROUP_CONCAT(DISTINCT w1.wms_inve_transa_id)
						FROM wms_inve_transa_income w1
						LEFT JOIN wms_inve_transa w2 ON w1.wms_inve_transa_id = w2.wms_inve_transa_id
						LEFT JOIN wms_inve_pruduct_category w3 ON w1.wms_inve_pruduct_category_id = w3.wms_inve_pruduct_category_id
						LEFT JOIN wms_inve_transa_prod w4 ON w1.wms_inve_transa_prod_id = w4.wms_inve_transa_prod_id
						WHERE w1.pay_type in (2,3)
							AND w2.wms_inve_transa_id NOT IN (SELECT * FROM (SELECT wms_inve_transa_id FROM wms_inve_transa_income_special) t1) 
						AND 
						CASE WHEN ISNULL(w2.old_wms_inve_transa_id) = 0 
								  THEN w2.old_wms_inve_transa_id NOT IN (SELECT * FROM (SELECT wms_inve_transa_id FROM wms_inve_transa_income_special) t2)
							 ELSE 1=1
						END
						AND w1.pay_status in (0,1,3,4)
						<if test="return_date!=null">
						AND DATE_FORMAT(w1.return_date,'%Y-%m') = DATE_FORMAT(#{return_date},'%Y-%m')
						AND
						CASE WHEN DATE_FORMAT(#{return_date},'%Y-%m') = DATE_FORMAT(NOW(),'%Y-%m')
								  THEN w2.data_status in(4,6)
				             WHEN DATE_FORMAT(#{return_date},'%Y-%m') &lt; DATE_FORMAT(NOW(),'%Y-%m')
								  THEN w2.data_status in(4,5,6)
				        END
						</if>
						AND
						CASE WHEN  DATE_FORMAT(w1.return_date,'%Y-%m') = DATE_FORMAT(now(),'%Y-%m') 
							 THEN ((IFNULL(w1.payable_basic_income,0) + IFNULL(w1.payable_reward_income,0) + IFNULL(w1.adjust_amount,0) + IFNULL(w1.extend_income,0) + IFNULL(w1.renewal_income,0)) > 0
							      OR IFNULL(w1.adjust_amount,0) != 0)
							 ELSE ((IFNULL(w1.payable_basic_income,0) + IFNULL(w1.payable_reward_income,0) + IFNULL(w1.adjust_amount,0) + IFNULL(w1.extend_income,0)) > 0
							 	  OR IFNULL(w1.adjust_amount,0) != 0)
						END
					)
			) = 0
			AND IFNULL(t1.transa_type, '1') != '2'
			<if test="return_date!=null">
			AND 
			CASE WHEN DATE_FORMAT(#{return_date},'%Y-%m') = DATE_FORMAT(NOW(),'%Y-%m')
                	  THEN t1.data_status = 4
			     WHEN DATE_FORMAT(#{return_date},'%Y-%m') &lt; DATE_FORMAT(NOW(),'%Y-%m')
					  THEN t1.data_status in(4,5,6)
			END
			</if>
			AND t1.enable_flag = 1
		) t
		where
		1=1
		<if test="bill_code!=null">
			AND t.bill_code like '%${bill_code}%'
		</if>
		<if test="cus_name!=null">
			AND t.cus_name like '%${cus_name}%'
		</if>
		<if test="signing_date_begin!=null">
			AND DATE_FORMAT(t.signing_date,'%Y/%m/%d') &gt;= DATE_FORMAT(#{signing_date_begin},'%Y/%m/%d')
	    </if>
		<if test="signing_date_end!=null">
			AND DATE_FORMAT(t.signing_date,'%Y/%m/%d') &lt;= DATE_FORMAT(#{signing_date_end},'%Y/%m/%d') 
		</if>
		<if test="category_name!=null">
			AND t.wms_inve_pruduct_category_id = #{category_name}	
		</if>
		<!-- 说明是历史数据 -->
		<if test="date_before != null and date_before == 1">
			<if test="is_bonus_rate!=null and is_bonus_rate==1">
			    AND IFNULL(t.bonus_rate,0) != 0
			</if>
			<if test="is_bonus_rate!=null and is_bonus_rate==2">
			    AND IFNULL(t.bonus_rate,0) = 0
			</if>
			<if test="is_extent_rate!=null and is_extent_rate==1">
			    AND IFNULL(t.extend_income,0) != 0
			</if>
			<if test="is_extent_rate!=null and is_extent_rate==2">
				AND IFNULL(t.extend_income,0) = 0
			</if>
			<if test="is_query_pay_status !=null and is_query_pay_status == 1">
				AND t.pay_status_page in (1,3,4)
			</if>
			<if test="is_query_pay_status !=null and is_query_pay_status == 2">
				AND t.pay_status_page = 0
			</if>
			AND t.wms_inve_transa_income_id is not null
		</if>
		<!-- 说明是当前月份数据 -->
		<if test="date_before != null and date_before == 2">
			<if test="is_query_data_type!=null and is_query_data_type==1">
				<if test="is_bonus_rate!=null and is_bonus_rate==1">
				    AND (IFNULL(t.bonus_rate,0) != 0 OR t.wms_inve_transa_income_id is null)
				</if>
				<if test="is_bonus_rate!=null and is_bonus_rate==2">
				    AND (IFNULL(t.bonus_rate,0) = 0 OR t.wms_inve_transa_income_id is null)
				</if>
				<if test="is_extent_rate!=null and is_extent_rate==1">
				    AND (IFNULL(t.extend_income,0) != 0 OR t.wms_inve_transa_income_id is null)
				</if>
				<if test="is_extent_rate!=null and is_extent_rate==2">
					AND (IFNULL(t.extend_income,0) = 0 OR t.wms_inve_transa_income_id is null)
				</if>
				<if test="is_query_pay_status !=null and is_query_pay_status == 1">
					AND t.pay_status_page in (1,3,4)
				</if>
				<if test="is_query_pay_status !=null and is_query_pay_status == 2">
					AND t.pay_status_page = 0
				</if>
			</if>
			<if test="is_query_data_type!=null and is_query_data_type==2">
				<if test="is_bonus_rate!=null and is_bonus_rate==1">
				    AND (IFNULL(t.bonus_rate,0) != 0 and t.wms_inve_transa_income_id is not null)
				</if>
				<if test="is_bonus_rate!=null and is_bonus_rate==2">
				    AND (IFNULL(t.bonus_rate,0) = 0 and t.wms_inve_transa_income_id is not null)
				</if>
				<if test="is_extent_rate!=null and is_extent_rate==1">
				    AND (IFNULL(t.extend_income,0) != 0 and t.wms_inve_transa_income_id is not null)
				</if>
				<if test="is_extent_rate!=null and is_extent_rate==2">
					AND (IFNULL(t.extend_income,0) = 0 and t.wms_inve_transa_income_id is not null)
				</if>
				<if test="is_query_pay_status !=null and is_query_pay_status == 1">
					AND t.pay_status_page in (1,3,4)
				</if>
				<if test="is_query_pay_status !=null and is_query_pay_status == 2">
					AND t.pay_status_page = 0
				</if>
				AND t.wms_inve_transa_income_id is not null
			</if> 
		</if>
		ORDER BY t.signing_date DESC ,t.wms_inve_transa_id  DESC
	</select>
	
	<update id="updateIncomePayStatusAndActReturnDateByBillCode" parameterType="map">
		update 
			wms_inve_transa_income i
		set
			i.pay_status = '1',
			i.last_update_user_id = #{last_update_user_id},
			i.act_return_date = CURDATE(),
			i.last_update_timestamp = NOW()
		where
			DATE_FORMAT(i.return_date, '%Y-%m') =  DATE_FORMAT(#{return_date}, '%Y-%m')
			and i.pay_status = '0'
			and i.pay_type in ('2','3')
			and i.wms_inve_transa_income_id in (${transaIncomeIds})
	</update>
	
	<select id="getMonthIncomeByBillCodeAndReturnDate" parameterType="map" resultType="map">
		SELECT
			ti.wms_inve_transa_income_id,
			ti.wms_inve_transa_id,
			ti.pay_status,
			ti.pay_type,
			t.bill_code
		FROM
			wms_inve_transa_income ti,
			wms_inve_transa t
		WHERE
			ti.wms_inve_transa_id = t.wms_inve_transa_id
		AND DATE_FORMAT(ti.return_date, '%Y-%m') = DATE_FORMAT(#{return_date}, '%Y-%m')
		AND t.bill_code in (${bill_code })
		AND ti.pay_status != '0'
		AND ti.pay_type IN ('2', '3')
	</select>
	
	
	<select id="getCusIncomeWithCustomerSummary" parameterType="map" resultType="map">
		SELECT
			tti.cus_name,
			tti.cus_id,
			CONCAT(FORMAT(total_income,2),'') as total_income,
			tti.basic_income,
			tti.reward_income,
			tti.public_income,
			IFNULL(tt.stock_amount,'0万') AS stock_amount
		FROM
			(
				SELECT
					t.cus_name,
					CONCAT(t.costomer_id,'') as cus_id,
					CASE WHEN IFNULL(t.old_wms_inve_transa_id,t.wms_inve_transa_id) NOT IN (SELECT wms_inve_transa_id FROM wms_inve_transa_income_special) THEN SUM(IFNULL(ti.payable_basic_income,0)) + SUM(IFNULL(ti.payable_reward_income,0)) + SUM(IFNULL(ti.extend_income,0)) ELSE 0 END as total_income,
					CONCAT(FORMAT(SUM(IFNULL(CASE WHEN IFNULL(t.old_wms_inve_transa_id,t.wms_inve_transa_id) NOT IN (SELECT wms_inve_transa_id FROM wms_inve_transa_income_special) THEN ti.payable_basic_income ELSE 0 END,0)),2),'') as basic_income,
					CONCAT(FORMAT(SUM(IFNULL(CASE WHEN IFNULL(t.old_wms_inve_transa_id,t.wms_inve_transa_id) NOT IN (SELECT wms_inve_transa_id FROM wms_inve_transa_income_special) THEN ti.payable_reward_income ELSE 0 END,0)),2),'') as reward_income,
					CONCAT(FORMAT(SUM(IFNULL(CASE WHEN IFNULL(t.old_wms_inve_transa_id,t.wms_inve_transa_id) NOT IN (SELECT wms_inve_transa_id FROM wms_inve_transa_income_special) THEN ti.extend_income ELSE 0 END,0)),2),'') as public_income
				FROM
					wms_inve_transa_income ti,
					wms_inve_transa_backup tb,
					wms_inve_transa t
				WHERE
					ti.wms_inve_transa_id = t.wms_inve_transa_id
				AND tb.wms_inve_transa_id = t.wms_inve_transa_id
				AND DATE_FORMAT(ti.return_date, '%Y-%m') = #{statics_month }
				AND tb.backup_month = #{statics_month }
				AND tb.data_status in ('4','5','6')
				AND ti.pay_type IN (2, 3)
				AND ti.pay_status != '2'
				AND IFNULL(t.transa_type, '1') != '2'
				AND tb.bel_salesman_id_id = #{salesman_id }
				GROUP BY
					t.costomer_id
			) tti
		LEFT JOIN (
			SELECT
				tb.costomer_id,
				CONCAT(FORMAT(SUM(IFNULL(tb.product_account,0))/10000,0),'万') AS stock_amount
			FROM
				wms_inve_transa_backup tb
			WHERE
				tb.backup_month = #{statics_month }
			AND tb.data_status = '4'
			AND tb.bel_salesman_id_id = #{salesman_id }
			GROUP BY
				tb.costomer_id
		) tt ON tti.cus_id = tt.costomer_id
		WHERE 1=1
		<if test="cus_name != null">
			AND tti.cus_name LIKE #{cus_name}
		</if>
		ORDER BY tti.total_income DESC
		<if test="offset != null and page_size != null">
			limit #{offset }, #{page_size }
		</if>
	</select>
	
	<select id="getCusIncomeWithCustomerSummaryRealTime" parameterType="map" resultType="map">
		SELECT 
			ttt.cus_name,
			ttt.cus_id,
			CONCAT(FORMAT(ttt.total_income,2),'') as total_income,
			ttt.basic_income,
			ttt.reward_income,
			ttt.public_income,
			IFNULL(ttp.stock_amount,'0万') AS stock_amount
		FROM (
		SELECT
			tt.cus_name,
			CONCAT(tt.costomer_id,'') as cus_id,
			CASE WHEN IFNULL(tt.old_wms_inve_transa_id,tt.wms_inve_transa_id) NOT IN (SELECT wms_inve_transa_id FROM wms_inve_transa_income_special) THEN SUM(IFNULL(tti.payable_basic_income,0)) + SUM(IFNULL(tti.payable_reward_income,0)) + SUM(IFNULL(tti.extend_income,0)) ELSE 0 END as total_income,
			CONCAT(FORMAT(SUM(IFNULL(CASE WHEN IFNULL(tt.old_wms_inve_transa_id,tt.wms_inve_transa_id) NOT IN (SELECT wms_inve_transa_id FROM wms_inve_transa_income_special) THEN tti.payable_basic_income ELSE 0 END,0)),2),'') as basic_income,
			CONCAT(FORMAT(SUM(IFNULL(CASE WHEN IFNULL(tt.old_wms_inve_transa_id,tt.wms_inve_transa_id) NOT IN (SELECT wms_inve_transa_id FROM wms_inve_transa_income_special) THEN tti.payable_reward_income ELSE 0 END,0)),2),'') as reward_income,
			CONCAT(FORMAT(SUM(IFNULL(CASE WHEN IFNULL(tt.old_wms_inve_transa_id,tt.wms_inve_transa_id) NOT IN (SELECT wms_inve_transa_id FROM wms_inve_transa_income_special) THEN tti.extend_income ELSE 0 END,0)),2),'') as public_income
		FROM
			(
				SELECT
					t.wms_inve_transa_id,
					t.costomer_id,
					t.cus_name,
					t.old_wms_inve_transa_id
				FROM
					(
						SELECT
							i.wms_inve_transa_id
						FROM
							wms_inve_transa_income i
						WHERE
							DATE_FORMAT(i.return_date, '%Y-%m') >= #{statics_month }
						AND i.pay_type IN (2, 3)
						AND i.pay_status != '2'
						AND i.wms_inve_transa_id IN (
							SELECT
								wms_inve_transa_id
							FROM
								wms_inve_transa
							WHERE
								bel_salesman_id_id = #{salesman_id }
						)
					) ti,
					wms_inve_transa t
				WHERE
					ti.wms_inve_transa_id = t.wms_inve_transa_id
					AND t.data_status in ('4','6')
					AND IFNULL(t.transa_type, '1') != '2'
				GROUP BY t.wms_inve_transa_id
			) tt
		LEFT JOIN (
			SELECT
				i.wms_inve_transa_id,
				i.payable_basic_income,
				i.payable_reward_income,
				i.extend_income
			FROM
				wms_inve_transa_income i
			WHERE
				DATE_FORMAT(i.return_date, '%Y-%m') = #{statics_month }
			AND i.pay_type IN (2, 3)
			AND i.pay_status != '2'
		) tti ON tt.wms_inve_transa_id = tti.wms_inve_transa_id
		GROUP BY tt.costomer_id) ttt 
		LEFT JOIN 
		(
			SELECT
				t.costomer_id,
				CONCAT(FORMAT(SUM(IFNULL(tp.product_account,0)) / 10000,0),'万') as stock_amount
			FROM
				wms_inve_transa t,
				wms_inve_transa_prod tp
			WHERE
				t.wms_inve_transa_id = tp.wms_inve_transa_id
			AND t.data_status = '4'
			AND t.bel_salesman_id_id = #{salesman_id }
			GROUP BY t.costomer_id
		) ttp ON ttt.cus_id = ttp.costomer_id
		WHERE 1=1
		<if test="cus_name != null">
			AND ttt.cus_name LIKE #{cus_name}
		</if>
		ORDER BY ttt.total_income DESC
		<if test="offset != null and page_size != null">
			limit #{offset }, #{page_size }
		</if>
	</select>
	
	<select id="getCusIncomeWithTransaSummary" parameterType="map" resultType="map">
		SELECT
			t.bel_salesman_id_id as salesman_id,
			t.cus_name,
			CONCAT(FORMAT(ti.product_account,2),'') as product_account,
			DATE_FORMAT(t.date_of_payment,'%Y/%m/%d') as date_of_payment,
			t.bill_code,
			p.category_name,
			CONCAT(p.product_deadline,'月') as category_deadline,
			CONCAT(FORMAT(p.product_interest,1),'%') as category_return_rate,
			CASE WHEN IFNULL(t.old_wms_inve_transa_id,t.wms_inve_transa_id) NOT IN (SELECT wms_inve_transa_id FROM wms_inve_transa_income_special) THEN CONCAT(FORMAT(SUM(IFNULL(ti.payable_basic_income,0)) + SUM(IFNULL(ti.payable_reward_income,0)) + SUM(IFNULL(ti.extend_income,0)),2),'') ELSE 0 END as total_income,
			CONCAT(FORMAT(SUM(IFNULL(CASE WHEN IFNULL(t.old_wms_inve_transa_id,t.wms_inve_transa_id) NOT IN (SELECT wms_inve_transa_id FROM wms_inve_transa_income_special) THEN ti.payable_basic_income ELSE 0 END,0)),2),'') as basic_income,
			CONCAT(FORMAT(SUM(IFNULL(CASE WHEN IFNULL(t.old_wms_inve_transa_id,t.wms_inve_transa_id) NOT IN (SELECT wms_inve_transa_id FROM wms_inve_transa_income_special) THEN ti.payable_reward_income ELSE 0 END,0)),2),'') as reward_income,
			CONCAT(FORMAT(SUM(IFNULL(CASE WHEN IFNULL(t.old_wms_inve_transa_id,t.wms_inve_transa_id) NOT IN (SELECT wms_inve_transa_id FROM wms_inve_transa_income_special) THEN ti.extend_income ELSE 0 END,0)),2),'') as public_income
		FROM
			(
				SELECT tt.* FROM
				(
					SELECT
						*
					FROM
						wms_inve_transa_backup
					WHERE
						backup_month = #{statics_month }
					AND data_status in ('4','5','6')
				) tb
				LEFT JOIN wms_inve_transa tt ON tb.wms_inve_transa_id = tt.wms_inve_transa_id
				WHERE tt.costomer_id = #{cus_id }
			) t,
			wms_inve_transa_income ti,
			wms_inve_transa_prod p
		WHERE
			t.wms_inve_transa_id = ti.wms_inve_transa_id
		AND t.wms_inve_transa_id = p.wms_inve_transa_id
		AND DATE_FORMAT(ti.return_date, '%Y-%m') = #{statics_month }
		AND ti.pay_type IN (2, 3)
		AND ti.pay_status != '2'
		AND IFNULL(t.transa_type, '1') != '2'
		GROUP BY t.wms_inve_transa_id 
		ORDER BY t.date_of_payment
		<if test="offset != null and page_size != null">
			limit #{offset }, #{page_size }
		</if>
	</select>
	
	<select id="getCusIncomeWithTransaSummaryRealTime" parameterType="map" resultType="map">
		SELECT
			tt.bel_salesman_id_id as salesman_id,
			tt.cus_name,
			CONCAT(FORMAT(tp.product_account,2),'') as product_account,
			DATE_FORMAT(tt.date_of_payment,'%Y/%m/%d') as date_of_payment,
			tt.bill_code,
			tp.category_name,
			CONCAT(tp.product_deadline,'月') as category_deadline,
			CONCAT(FORMAT(tp.product_interest,1),'%') as category_return_rate,
			CASE WHEN IFNULL(tt.old_wms_inve_transa_id,tt.wms_inve_transa_id) NOT IN (SELECT wms_inve_transa_id FROM wms_inve_transa_income_special) THEN CONCAT(FORMAT(SUM(IFNULL(tti.payable_basic_income,0)) + SUM(IFNULL(tti.payable_reward_income,0)) + SUM(IFNULL(tti.extend_income,0)),2),'') ELSE 0 END as total_income,
			CONCAT(FORMAT(SUM(IFNULL(CASE WHEN IFNULL(tt.old_wms_inve_transa_id,tt.wms_inve_transa_id) NOT IN (SELECT wms_inve_transa_id FROM wms_inve_transa_income_special) THEN tti.payable_basic_income ELSE 0 END,0)),2),'') as basic_income,
			CONCAT(FORMAT(SUM(IFNULL(CASE WHEN IFNULL(tt.old_wms_inve_transa_id,tt.wms_inve_transa_id) NOT IN (SELECT wms_inve_transa_id FROM wms_inve_transa_income_special) THEN tti.payable_reward_income ELSE 0 END,0)),2),'') as reward_income,
			CONCAT(FORMAT(SUM(IFNULL(CASE WHEN IFNULL(tt.old_wms_inve_transa_id,tt.wms_inve_transa_id) NOT IN (SELECT wms_inve_transa_id FROM wms_inve_transa_income_special) THEN tti.extend_income ELSE 0 END,0)),2),'') as public_income
		FROM
			(
				SELECT
					t.wms_inve_transa_id,
					t.costomer_id,
					t.cus_name,
					t.bel_salesman_id_id,
					t.date_of_payment,
					t.bill_code,
					t.data_status,
					t.old_wms_inve_transa_id
				FROM
					(
						SELECT
							i.wms_inve_transa_id
						FROM
							wms_inve_transa_income i
						WHERE
							DATE_FORMAT(i.return_date, '%Y-%m') >= #{statics_month }
						AND i.pay_type IN (2, 3)
						AND i.pay_status != '2'
						AND i.wms_inve_transa_id IN (
							SELECT
								wms_inve_transa_id
							FROM
								wms_inve_transa
							WHERE
								costomer_id = #{cus_id }
						)
					) ti,
					wms_inve_transa t
				WHERE
					ti.wms_inve_transa_id = t.wms_inve_transa_id
					AND IFNULL(t.transa_type, '1') != '2'
				GROUP BY
					t.wms_inve_transa_id
			) tt
		LEFT JOIN (
			SELECT
				i.wms_inve_transa_id,
				i.payable_basic_income,
				i.payable_reward_income,
				i.extend_income
			FROM
				wms_inve_transa_income i
			WHERE
				DATE_FORMAT(i.return_date, '%Y-%m') = #{statics_month }
			AND i.pay_type IN (2, 3)
			AND i.pay_status != '2'
		) tti ON tt.wms_inve_transa_id = tti.wms_inve_transa_id,
		 wms_inve_transa_prod tp
		WHERE
			tt.wms_inve_transa_id = tp.wms_inve_transa_id
		AND tt.data_status in ('4','6')
		GROUP BY tt.wms_inve_transa_id 
		ORDER BY tt.date_of_payment
		<if test="offset != null and page_size != null">
			limit #{offset }, #{page_size }
		</if>
	</select>
	
	<select id="getCusIncomeWithSalesmanSummary" parameterType="map" resultType="map">
		SELECT
			p.personnel_deptId,
			p.personnel_name as salesman_name,
			p.personnel_shortCode as salesman_short_code,
			CONCAT(p.personnel_id,'') as salesman_id,
			CONCAT(FORMAT(SUM(IFNULL(ti.payable_basic_income,0)) + SUM(IFNULL(ti.payable_reward_income,0)) + SUM(IFNULL(ti.extend_income,0)),2),'') as total_income,
			CONCAT(FORMAT(SUM(IFNULL(ti.payable_basic_income,0)),2),'') as basic_income,
			CONCAT(FORMAT(SUM(IFNULL(ti.payable_reward_income,0)),2),'') as reward_income,
			CONCAT(FORMAT(SUM(IFNULL(ti.extend_income,0)),2),'') as public_income
		FROM
			pm_personnel p,
			wms_inve_transa t,
			wms_inve_transa_income ti
		WHERE
			p.personnel_id = t.bel_salesman_id_id
		AND t.wms_inve_transa_id = ti.wms_inve_transa_id
		AND DATE_FORMAT(ti.return_date, '%Y-%m') = #{statics_month }
		AND ti.pay_type IN (2, 3)
		AND IFNULL(t.transa_type, '1') != '2'
		AND ti.pay_status != '2'
		<if test="team_ids != null">
			AND p.personnel_deptId in 
			<foreach collection="team_ids" close=")" open="(" index="index" item="item" separator=",">
				#{item}
			</foreach>
		</if>
		<if test="salesman_name != null">
			AND (p.personnel_name = #{salesman_name} OR p.personnel_shortCode = #{salesman_name})
		</if>
		GROUP BY p.personnel_id
		ORDER BY p.personnel_deptName,p.personnel_name
		<if test="offset != null and page_size != null">
			limit #{offset }, #{page_size }
		</if>
	</select>
	
	<select id="validateTransaIncomeStatusAndIncome" parameterType="map" resultType="map">
		SELECT
			i.wms_inve_transa_id,
			SUM(i.product_interest_account)+SUM(IFNULL(i.adjust_amount,0)) AS product_interest_account,
			i.pay_status
		FROM
			wms_inve_transa_income i
		WHERE
			wms_inve_transa_income_id IN (${transaIncomeIds})
		GROUP BY
			i.wms_inve_transa_id
		HAVING
			product_interest_account = #{income};
	</select>
	
	<insert id="insertShareHolderTransaIncome" parameterType="map">
		insert into wms_inve_transa_income_special(wms_inve_transa_id, bill_code, create_user_id, create_timestamp)
		values(#{wms_inve_transa_id }, #{bill_code }, #{create_user_id }, #{create_timestamp })
	</insert>
</mapper> 
