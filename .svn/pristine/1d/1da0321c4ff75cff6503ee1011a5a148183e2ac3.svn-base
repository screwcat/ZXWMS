package com.zx.emanage.remind.service.impl;import java.math.BigDecimal;import java.sql.Date;import java.sql.Timestamp;import java.text.SimpleDateFormat;import java.util.HashMap;import java.util.List;import java.util.Map;import org.apache.commons.lang3.StringUtils;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import org.springframework.transaction.annotation.Transactional;import com.zx.emanage.remind.persist.WmsCreCreditNotaryWarnDao;import com.zx.emanage.remind.persist.WmsCreCreditRepayHistoryDao;import com.zx.emanage.remind.service.IWmsCreCreditRepayHistoryService;import com.zx.emanage.remind.vo.WmsCreCreditRepayHistorySearchBeanVO;import com.zx.emanage.util.gen.entity.WmsCreCreditNotaryWarn;import com.zx.emanage.util.gen.entity.WmsCreCreditRepayHistory;import com.zx.platform.syscontext.vo.GridDataBean;import com.zx.sframe.util.DateUtil;import com.zx.sframe.util.vo.UserBean;/** *  * @ClassName: WmsCreCreditRepayHistoryServiceImpl * @Description: 内容摘要：还款历史表 * @author baisong * @date 2016年11月22日 * @version V1.0 * history: * 1、2016年11月22日 baisong 创建文件 */@Service("WmsCreCreditRepayHistoryService")public class WmsCreCreditRepayHistoryServiceImpl implements IWmsCreCreditRepayHistoryService {    private static Logger log = LoggerFactory.getLogger(WmsCreCreditRepayHistoryServiceImpl.class);    @Autowired    private WmsCreCreditRepayHistoryDao wmscrecreditrepayhistoryDao;        @Autowired    private WmsCreCreditNotaryWarnDao wmsCreCreditNotaryWarnDao;    /**     * Description : 查询列表(不带分页)     *      * @param queryInfo     * @return record list     * @author administrator     */    @Override    public Map<String, Object> getListWithoutPaging(WmsCreCreditRepayHistorySearchBeanVO queryInfo) {        Map<String, Object> paramMap = new HashMap<String, Object>();                paramMap.put("wms_cre_credit_notary_warn_id", queryInfo.getWms_cre_credit_notary_warn_id());                paramMap.put("sortname", queryInfo.getSortname());        paramMap.put("sortorder", queryInfo.getSortorder());        List<Map<String, Object>> list = wmscrecreditrepayhistoryDao.search(paramMap);        Map<String, Object> resMap = new HashMap<String, Object>();        resMap.put("Rows", list);        return resMap;    }    /**     * Description : 查询列表(带分页)     *      * @param queryInfo     * @return record list     * @author administrator     */    @Override    public Map<String, Object> getListWithPaging(WmsCreCreditRepayHistorySearchBeanVO queryInfo) {        Map<String, Object> paramMap = new HashMap<String, Object>();        paramMap.put("sortname", queryInfo.getSortname());        paramMap.put("sortorder", queryInfo.getSortorder());        paramMap.put("pagesize", queryInfo.getPagesize());        paramMap.put("offset", queryInfo.getOffset());        List<Map<String, Object>> list = wmscrecreditrepayhistoryDao.search(paramMap);        GridDataBean<Map<String, Object>> bean =             new GridDataBean<Map<String, Object>>(queryInfo.getPage(), wmscrecreditrepayhistoryDao.findCount(paramMap), list);        return bean.getGridData();    }    /**     * Description : 根据主键查询     *      * @param primary key     * @return WmsCreCreditRepayHistory     * @author administrator     */    @Override    public WmsCreCreditRepayHistory getInfoByPK(Integer wms_cre_credit_repay_history_id) {        return wmscrecreditrepayhistoryDao.get(wms_cre_credit_repay_history_id);    }    /**     * Description :新增     *      * @param bean     * @return "success" or "error" or user defined     * @author administrator     */    @Override    @Transactional    public String save(WmsCreCreditRepayHistorySearchBeanVO queryInfo, UserBean user) {        String resStr = "success";                java.sql.Timestamp now_time_timestamp = new java.sql.Timestamp(System.currentTimeMillis());        SimpleDateFormat format = new SimpleDateFormat("yyyyMM");        // 更新主表发送短信电话字段        WmsCreCreditNotaryWarn wmsCreCreditNotaryWarn = new WmsCreCreditNotaryWarn();        wmsCreCreditNotaryWarn.setWms_cre_credit_notary_warn_id(queryInfo.getWms_cre_credit_notary_warn_id());        wmsCreCreditNotaryWarn.setSend_message_number(queryInfo.getSend_message_number());        this.wmsCreCreditNotaryWarnDao.update(wmsCreCreditNotaryWarn);        // 更新还款历史信息表月还款金额、跟踪处理结果：根据单据主键查询，若有记录则更新无记录则新增        Map<String, Object> paramMap = new HashMap<String, Object>();        paramMap.put("wms_cre_credit_notary_warn_id", queryInfo.getWms_cre_credit_notary_warn_id());        // 第一次需求：查询最新一条记录is_new: 1        // 第二次需求：查询本月最新一条记录(每个月只有一条)        // 第三次需求：还原为第一次需求        paramMap.put("is_new", "1");//        paramMap.put("create_timestamp_month", format.format(now_time_timestamp));        paramMap.put("enable_flag", "1");        int count = wmscrecreditrepayhistoryDao.findCount(paramMap);                WmsCreCreditRepayHistory bean = new WmsCreCreditRepayHistory();        bean.setWms_cre_credit_notary_warn_id(queryInfo.getWms_cre_credit_notary_warn_id());        bean.setRepay_principal(queryInfo.getRepay_principal());        bean.setTrack_handle_result(queryInfo.getTrack_handle_result());        if (count == 0)        {// 新增        	format = new SimpleDateFormat("yyyyMMdd");            long now_time_long = System.currentTimeMillis();            java.util.Date now_time_date = new java.util.Date(now_time_long);            String now_time_string = format.format(now_time_date);            // 单据编号根据当前日期生成            paramMap = new HashMap<String, Object>();            paramMap.put("now_time", now_time_string);            paramMap.put("wms_cre_credit_notary_warn_id", queryInfo.getWms_cre_credit_notary_warn_id());        	bean.setRepay_history_code(this.wmscrecreditrepayhistoryDao.getRepayHistoryCode(paramMap));        	        	bean.setCreate_user_id(user.getUserId());        	bean.setCreate_user_name(user.getRealname());        	bean.setCreate_timestamp(now_time_timestamp);        	bean.setLast_update_user_id(user.getUserId());        	bean.setLast_update_timestamp(now_time_timestamp);        	bean.setIs_new("1");        	bean.setEnable_flag("1");        	wmscrecreditrepayhistoryDao.save(bean);        }        else if (count == 1)        {// 更新        	bean.setLast_update_user_id(user.getUserId());        	bean.setLast_update_timestamp(now_time_timestamp);        	wmscrecreditrepayhistoryDao.update(bean);        }        else        {// 查询记录数大于0        	        }                return resStr;    }    /**     * Description : 修改     *      * @param bean contains pk at least     * @return "success" or "error" or user defined     * @author administrator     */    @Override    @Transactional    public String update(WmsCreCreditRepayHistory bean, UserBean user) {        String resStr = "success";        int ret = 0;        ret = wmscrecreditrepayhistoryDao.update(bean); // update a record replace columns,                                                   // nonsupport null val        if (ret == 0) {            resStr = "error";        }        return resStr;    }    /**     * Description : 还款提醒信息修改初始化     * @author administrator     */    public WmsCreCreditRepayHistorySearchBeanVO editRepaymentInfoDisp(WmsCreCreditRepayHistorySearchBeanVO queryInfo, UserBean user) {    	Map<String, Object> paramMap = new HashMap<String, Object>();    	paramMap.put("wms_cre_credit_notary_warn_id", queryInfo.getWms_cre_credit_notary_warn_id());    	queryInfo.setResMap(wmscrecreditrepayhistoryDao.editRepaymentInfoDisp(paramMap));    	return queryInfo;    }	@Override	@Transactional	public Map<String, Object> getHistoryInfo(WmsCreCreditRepayHistory bean) {		Map<String, Object> paramMap = new HashMap<String, Object>();		WmsCreCreditNotaryWarn wmscrecreditnotarywarn = new WmsCreCreditNotaryWarn();        // 查询主表数据		wmscrecreditnotarywarn = wmsCreCreditNotaryWarnDao.get(bean.getWms_cre_credit_notary_warn_id());        // 历史变所有数据        paramMap.put("wms_cre_credit_notary_warn_id", bean.getWms_cre_credit_notary_warn_id());        List<Map<String, Object>> list = wmscrecreditrepayhistoryDao.search(paramMap);        // 历史表最新的单据		WmsCreCreditRepayHistory wmscrecreditrepayhistory = wmscrecreditrepayhistoryDao.forIsnewGetRepayPrincipal(bean.getWms_cre_credit_notary_warn_id());		if(wmscrecreditrepayhistory != null){			if(wmscrecreditrepayhistory.getRepay_principal() != null && !wmscrecreditrepayhistory.getRepay_principal().equals("")){				wmscrecreditnotarywarn.setRefund_limit_month(wmscrecreditrepayhistory.getRepay_principal().toString());			}		}		paramMap.put("wmscrecreditnotarywarn", wmscrecreditnotarywarn);        paramMap.put("historyList", list);		return paramMap;	}/**     *      * @Title: wmscrecreditrepayhistoryInfoSave     * @Description: TODO(还款确认保存)     * @param bean     * @param user     * @return      * @author: jiaodelong     * @time:2016年11月24日 下午2:17:00     * @see com.zx.emanage.remind.service.IWmsCreCreditRepayHistoryService#wmscrecreditrepayhistoryInfoSave(com.zx.emanage.remind.vo.WmsCreCreditRepayHistorySearchBeanVO, com.zx.sframe.util.vo.UserBean)     * history:     * 1、2016年11月24日 jiaodelong 创建方法     */	@Override	@Transactional	public String wmscrecreditrepayhistoryInfoSave(WmsCreCreditRepayHistorySearchBeanVO bean, UserBean user) {		 	String resStr = "success";	        int ret = 0;        // 查询主表数据	        WmsCreCreditNotaryWarn wmscrecreditnotarywarn = wmsCreCreditNotaryWarnDao.get(bean.getWms_cre_credit_notary_warn_id());	        WmsCreCreditNotaryWarn warn = new WmsCreCreditNotaryWarn();	        warn.setRepay_status(bean.getRepay_status());	        if ("4".equals(warn.getRepay_status()))	        {   // 是否续贷	            // 如果状态为未结清续贷，主表保存选择日期，也更改终止日期	            warn.setCurrent_repay_date(bean.getCurrent_repay_date());		        warn.setBorrow_end_date(bean.getBorrow_end_date());            // 是否续贷		        warn.setIs_cycles("1");	        }else{                // 主表保存下个月还款日期                java.util.Date time = DateUtil.getDatePlusMonths(wmscrecreditnotarywarn.getCurrent_repay_date(), 1);                warn.setCurrent_repay_date(new java.sql.Date(time.getTime()));	        }	        //如果为结清修改主表单据还款状态字段            if ("3".equals(warn.getRepay_status()))            {                warn.setBill_status("0");                warn.setClean_up_date(new Date(System.currentTimeMillis()));                warn.setClean_up_info("还款完成");                            }        // 还款期数+1	        warn.setRepay_period(wmscrecreditnotarywarn.getRepay_period() + 1);	        warn.setWms_cre_credit_notary_warn_id(bean.getWms_cre_credit_notary_warn_id());        // 更改主表信息	        wmsCreCreditNotaryWarnDao.update(warn);	        boolean is_history=true;	        WmsCreCreditRepayHistory history = wmscrecreditrepayhistoryDao.getRepayHistory(bean.getWms_cre_credit_notary_warn_id());        // 判断历史表里有没有is_new为1的数据        if (history == null)        {	        	history = new WmsCreCreditRepayHistory();	        	is_history=false;	        }	        history.setWms_cre_credit_notary_warn_id(bean.getWms_cre_credit_notary_warn_id());	        history.setRepay_principal(bean.getRepay_principal());	        history.setActual_repay_principal(bean.getActual_repay_principal());	        history.setRepay_date(bean.getCurrent_repay_date());	        history.setTrack_handle_result(bean.getTrack_handle_result());	        history.setIs_new("0");           // 还款期数+1            history.setRepay_no(wmscrecreditnotarywarn.getRepay_period() + 1);        // 有is_new的数据为修改	        if(is_history){	        	history.setLast_update_timestamp(new Timestamp(System.currentTimeMillis()));	  	        history.setLast_update_user_id(user.getUserId());	        	ret = wmscrecreditrepayhistoryDao.updateInfoForIsNew(history);	        }        else        {// 没有为新增一条数据         // 生成还款编号	        	Map<String, Object> paramMap = new HashMap<String, Object>();	        	SimpleDateFormat format = new SimpleDateFormat("yyyyMMdd");	            long now_time_long = System.currentTimeMillis();	            java.util.Date now_time_date = new java.util.Date(now_time_long);	            String now_time_string = format.format(now_time_date);            // 单据编号根据当前日期生成	            paramMap = new HashMap<String, Object>();	            paramMap.put("now_time", now_time_string);	            history.setRepay_history_code(this.wmscrecreditrepayhistoryDao.getRepayHistoryCode(paramMap));              	            history.setCreate_timestamp(new Timestamp(System.currentTimeMillis()));	            history.setCreate_user_id(user.getUserId());	            history.setCreate_user_name(user.getRealname());	            history.setEnable_flag("1");	        	ret = wmscrecreditrepayhistoryDao.save(history);	        }	        //初始化应还款金额  2017年1月11日，王志刚需求变更	        WmsCreCreditRepayHistory repayHistory = new WmsCreCreditRepayHistory();	        String principal = wmscrecreditrepayhistoryDao.searchPrincipal(bean.getWms_cre_credit_notary_warn_id());	        repayHistory.setWms_cre_credit_notary_warn_id(bean.getWms_cre_credit_notary_warn_id());	        repayHistory.setRepay_principal(new BigDecimal(principal));	        wmscrecreditrepayhistoryDao.update(repayHistory);	        if (ret == 0) {	            resStr = "error";	        }	        return resStr;	}/** *  * @Title: wmscrecreditrepayhistoryListSave * @Description: TODO(还款确认批量保存) * @param ids * @param user * @return  * @author: jiaodelong * @time:2016年12月5日 上午9:06:57 * @see com.zx.emanage.remind.service.IWmsCreCreditRepayHistoryService#wmscrecreditrepayhistoryListSave(java.lang.String, com.zx.sframe.util.vo.UserBean) * history: * 1、2016年12月5日 jiaodelong 创建方法 */	@Override	@Transactional	public String wmscrecreditrepayhistoryListSave(String ids, UserBean user) {		String resStr = "success";        int ret = 0;		String idsz[] = ids.split(",");		WmsCreCreditNotaryWarn wmscrecreditnotarywarn = new WmsCreCreditNotaryWarn();		WmsCreCreditNotaryWarn warn = new WmsCreCreditNotaryWarn();		java.sql.Date borrow_end_date = new java.sql.Date(System.currentTimeMillis());		java.sql.Date now_end_date = new java.sql.Date(System.currentTimeMillis());		for(int i = 0;i < idsz.length;i++) {			wmscrecreditnotarywarn = new WmsCreCreditNotaryWarn();            // 查询主表数据			wmscrecreditnotarywarn = wmsCreCreditNotaryWarnDao.get(Integer.parseInt(idsz[i]));            // 历史表最新的单据			WmsCreCreditRepayHistory wmscrecreditrepayhistory = wmscrecreditrepayhistoryDao.forIsnewGetRepayPrincipal(Integer.parseInt(idsz[i]));            // 判断历史变月还款金额数据是否为is_new 如果有则去历史表 没有取主表            if (wmscrecreditrepayhistory != null)            {				if(wmscrecreditrepayhistory.getRepay_principal() != null && !wmscrecreditrepayhistory.getRepay_principal().equals("")){					wmscrecreditnotarywarn.setRefund_limit_month(wmscrecreditrepayhistory.getRepay_principal().toString());				}			}			warn = new WmsCreCreditNotaryWarn();            // 批量确认单据状态为正常            warn.setRepay_status("1");            // 主表保存下个月还款日期(保存日期待处理)            java.util.Date time = DateUtil.getDatePlusMonths(wmscrecreditnotarywarn.getCurrent_repay_date(), 1);            // SimpleDateFormat dateformat = new SimpleDateFormat("yyyy-MM-dd");            warn.setCurrent_repay_date(new java.sql.Date(time.getTime()));	        warn.setWms_cre_credit_notary_warn_id(Integer.parseInt(idsz[i]));            // 还款期数+1	        warn.setRepay_period(wmscrecreditnotarywarn.getRepay_period() + 1);	        	        //2017年3月24日需求变更：还款确认还款到最后一期，确认时自动将单据变更为结清（正常）。（还款确认未选择状态情况之外）- 王志刚	        borrow_end_date = wmscrecreditnotarywarn.getBorrow_end_date();	        if((StringUtils.isEmpty(wmscrecreditnotarywarn.getRepay_status()) || wmscrecreditnotarywarn.getRepay_status().equals("1"))                 && borrow_end_date.getTime() <= now_end_date.getTime()) {	            warn.setRepay_status("3");	        }	        	        wmsCreCreditNotaryWarnDao.update(warn);	        boolean is_history = true;            // 判断历史表里有没有is_new为1的数据            WmsCreCreditRepayHistory repayhistory = wmscrecreditrepayhistoryDao.getRepayHistory(Integer.parseInt(idsz[i]));	        if(repayhistory == null) {	        	repayhistory = new WmsCreCreditRepayHistory();	        	is_history = false;	        }            // 有is_new的数据为修改	        if(is_history) {                // 还款时间为当前系统时间                long now_time = System.currentTimeMillis();		        wmscrecreditrepayhistory.setRepay_date(new Date(now_time));                // 应支付金额                wmscrecreditrepayhistory.setRepay_principal(new BigDecimal(wmscrecreditnotarywarn.getRefund_limit_month()));                // 实际支付金额=应支付金额                wmscrecreditrepayhistory.setActual_repay_principal(new BigDecimal(wmscrecreditnotarywarn.getRefund_limit_month()));	        	wmscrecreditrepayhistory.setLast_update_timestamp(new Timestamp(System.currentTimeMillis()));	 	        wmscrecreditrepayhistory.setLast_update_user_id(user.getUserId());                // 把is_new变成0	 	        wmscrecreditrepayhistory.setIs_new("0");                // 还款期数+1	 	        wmscrecreditrepayhistory.setRepay_no(wmscrecreditnotarywarn.getRepay_period() + 1);	 	        ret = wmscrecreditrepayhistoryDao.updateInfoForIsNew(wmscrecreditrepayhistory);            }            else            {// 没有为新增一条数据                WmsCreCreditRepayHistory history = new WmsCreCreditRepayHistory();                // 生成还款编号	        	Map<String, Object> paramMap = new HashMap<String, Object>();	        	SimpleDateFormat format1 = new SimpleDateFormat("yyyyMMdd");	            long now_time_long = System.currentTimeMillis();	            java.util.Date now_time_date = new java.util.Date(now_time_long);	            String now_time_string = format1.format(now_time_date);                // 单据编号根据当前日期生成	            paramMap = new HashMap<String, Object>();	            paramMap.put("now_time", now_time_string);	            history.setRepay_history_code(this.wmscrecreditrepayhistoryDao.getRepayHistoryCode(paramMap));                // 还款时间为当前系统时间                long now_time = System.currentTimeMillis();		        history.setRepay_date(new Date(now_time));                // 主表ID		        history.setWms_cre_credit_notary_warn_id(Integer.parseInt(idsz[i]));                // 应支付金额                history.setRepay_principal(new BigDecimal(wmscrecreditnotarywarn.getRefund_limit_month()));                // 实际支付金额=应支付金额                history.setActual_repay_principal(new BigDecimal(wmscrecreditnotarywarn.getRefund_limit_month()));		        history.setIs_new("0");               		        history.setRepay_no(wmscrecreditnotarywarn.getRepay_period());		        history.setCreate_timestamp(new Timestamp(System.currentTimeMillis()));		        history.setCreate_user_id(user.getUserId());		        history.setCreate_user_name(user.getRealname());		        history.setEnable_flag("1");                // 还款期数+1		        history.setRepay_no(wmscrecreditnotarywarn.getRepay_period() + 1);	            ret = wmscrecreditrepayhistoryDao.save(history);	        }	    }		if (ret == 0) {	        resStr = "error";	    }	    return resStr;	}}