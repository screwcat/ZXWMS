<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.zx.emanage.sysmanage.persist.SysRoleMenuFunctionDao">
	<!-- 查询数据条数，直接返回int类型条数 -->
	<select id="findCount" parameterType="map" resultType="int">
		select count(id) as count
		from sys_role
		<where>
			enable_flag='1'
			<if test="role_name != null">
				and role_name like '${role_name}'
			</if>
		</where>
	</select>

	<!-- 查询角色 -->
	<select id="search" parameterType="map" resultType="java.util.HashMap">
		select
		id,
		role_name,
		enable_flag,
		create_user,
		date_format(create_timestamp,'%Y-%c-%d') as create_timestamp,
		last_update_user,
		date_format(last_update_timestamp,'%Y-%c-%d') as last_update_timestamp,
		last_update_remark
		from sys_role
		<where>
			enable_flag='1'
			<if test="role_name != null">
				and role_name like '${role_name}'
			</if>
		</where>
		<if test="sortname != null and sortorder !=null">
			ORDER BY ${sortname} ${sortorder}
		</if>
		<if test="offset != null and pagesize !=null">
			LIMIT ${offset} , ${pagesize}
		</if>

	</select>
	<!-- 获取角色 -->
	<select id="get" parameterType="Integer" resultType="SysRole">
		select
		id,
		role_name,
		enable_flag,
		create_user,
		create_timestamp,
		last_update_user,
		last_update_timestamp,
		last_update_remark
		from sys_role
		where
		id=#{id}
	</select>

	<select id="getSysRoleMenuCheck" parameterType="map"
		resultType="java.util.HashMap">

		select CONCAT('M',mn.id) AS id, mn.menu_name, mn.menu_url,
		mn.menu_level, CONCAT('M',mn.p_menu_id) AS p_menu_id ,mn.menu_sort,0
		as type,
		<if test="current_role_id != null">
			(select id from sys_role_menu_function t where t.role_id=#{current_role_id}
			and t.menu_id=mn.id limit 1) as ischeck
		</if>
		<if test="no_current_role_id != null">
			null as ischeck
		</if>
		from sys_menu mn
		ORDER BY mn.menu_level,mn.menu_sort
	</select>

	<select id="getSysRoleFuncCheck" parameterType="map"
		resultType="java.util.HashMap">

		SELECT CONCAT('F',f.id) AS id, f.func_name,f.func_method,
		CONCAT('M',f.menu_id) AS menu_id,f.default_flag ,1 as type,
		<if test="current_role_id != null">
			(select id from sys_role_menu_function t where t.role_id=#{current_role_id}
			and t.func_id=f.id) as ischeck
		</if>
		<if test="no_current_role_id != null">
			null as ischeck
		</if>
		FROM sys_function f
		ORDER BY f.menu_id ,f.func_sort
	</select>
	<!-- 更新角色 -->
	<update id="update" parameterType="SysRole">
		update sys_role
		<set>
			<if test="role_name != null">
				role_name = #{role_name},
			</if>
			<if test="enable_flag != null">
				enable_flag = #{enable_flag},
			</if>
			<if test="last_update_user != null">
				last_update_user = #{last_update_user},
			</if>
			<if test="last_update_timestamp != null">
				last_update_timestamp = #{last_update_timestamp},
			</if>
			<if test="last_update_remark != null">
				last_update_remark = #{last_update_remark}
			</if>
		</set>
		where id = #{id}
	</update>
	<!-- 插入SysRoleMenuFunction，并在用户实体对象中将主键进行赋值，返回受影响的记录条数，如果不需要返回主键，无需配置useGeneratedKeys、keyProperty项 -->
	<insert id="save" parameterType="SysRoleMenuFunction"
		useGeneratedKeys="true" keyProperty="id">
		insert into sys_role_menu_function
		(role_id,menu_id,func_id) values (#{role_id},#{menu_id},#{func_id});
	</insert>
	<!-- 删除用户 -->
	<delete id="deleteByRoleId" parameterType="Integer">
		delete from
		sys_role_menu_function where role_id = #{role_id}
	</delete>
</mapper> 
