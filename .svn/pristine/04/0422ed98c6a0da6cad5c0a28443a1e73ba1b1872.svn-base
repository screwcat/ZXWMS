<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.zx.emanage.sysmanage.persist.SysWebUserDao">
	<!-- get entity by pk -->
	<select id="get" parameterType="int" resultType="SysWebUser">
		select
		sys_web_user_id,
		user_name,
		password,
		id_card,
		real_name,
		create_user_id,
		create_user_name,
		date_format(create_timestamp,'%Y-%m-%d %H:%i:%s') as create_timestamp_str,
		create_timestamp,
		last_update_user_id,
		date_format(last_update_timestamp,'%Y-%m-%d %H:%i:%s') as last_update_timestamp_str,
		last_update_timestamp,
		enable_flag
		from
		sys_web_user
		where
	</select>

	<!-- count num -->
	<select id="findCount" parameterType="map" resultType="int">
		select count() as count
		from sys_web_user
		<where>
			<if test="paramname != null">
				<!-- and columnName = #{columnName} -->
			</if>
		</where>
	</select>

	<!-- list -->
	<select id="search" parameterType="map" resultType="java.util.HashMap">
		select
		sys_web_user_id,
		user_name,
		password,
		id_card,
		real_name,
		create_user_id,
		create_user_name,
		date_format(create_timestamp,'%Y-%m-%d %H:%i:%s') as create_timestamp_str,
		create_timestamp,
		last_update_user_id,
		date_format(last_update_timestamp,'%Y-%m-%d %H:%i:%s') as last_update_timestamp_str,
		last_update_timestamp,
		enable_flag
		from sys_web_user
		<where>
			<if test="paramname != null">
				<!-- and columnName = #{columnName} -->
			</if>
		</where>
		<if test="sortname != '' and sortorder !=''">
			ORDER BY ${sortname} ${sortorder}
		</if>
		<if test="offset != null and pagesize !=null">
			LIMIT ${offset} , ${pagesize}
		</if>
	</select>

	<!-- save -->
	<insert id="save" parameterType="SysWebUser" useGeneratedKeys="true"
		keyProperty="">
		INSERT INTO sys_web_user
		(
		sys_web_user_id,

		user_name,

		password,

		id_card,

		real_name,

		create_user_id,

		create_user_name,

		create_timestamp,

		last_update_user_id,

		last_update_timestamp,

		enable_flag
		)
		VALUES
		(
		#{sys_web_user_id},
		#{user_name},
		#{password},
		#{id_card},
		#{real_name},
		#{create_user_id},
		#{create_user_name},
		#{create_timestamp},
		#{last_update_user_id},
		#{last_update_timestamp},
		#{enable_flag}
		);
	</insert>

	<!-- 更新用户 -->
	<update id="update" parameterType="SysWebUser">
		update sys_web_user
		<set>
			<if test="sys_web_user_id != null">
				sys_web_user_id = #{sys_web_user_id},
			</if>
			<if test="user_name != null">
				user_name = #{user_name},
			</if>
			<if test="password != null">
				password = #{password},
			</if>
			<if test="id_card != null">
				id_card = #{id_card},
			</if>
			<if test="real_name != null">
				real_name = #{real_name},
			</if>
			<if test="create_user_id != null">
				create_user_id = #{create_user_id},
			</if>
			<if test="create_user_name != null">
				create_user_name = #{create_user_name},
			</if>
			<if test="create_timestamp != null">
				create_timestamp = #{create_timestamp},
			</if>
			<if test="last_update_user_id != null">
				last_update_user_id = #{last_update_user_id},
			</if>
			<if test="last_update_timestamp != null">
				last_update_timestamp = #{last_update_timestamp},
			</if>
			<if test="enable_flag != null">
				enable_flag = #{enable_flag},
			</if>
		</set>
		where
	</update>
	<select id="getListByEntity" parameterType="SysWebUser"
		resultType="SysWebUser">
		select
		sys_web_user_id,
		user_name,
		password,
		id_card,
		real_name,
		create_user_id,
		create_user_name,
		date_format(create_timestamp,'%Y-%m-%d %H:%i:%s') as create_timestamp_str,
		create_timestamp,
		last_update_user_id,
		date_format(last_update_timestamp,'%Y-%m-%d %H:%i:%s') as last_update_timestamp_str,
		last_update_timestamp,
		enable_flag
		from
		sys_web_user
		<where>
			<if test="sys_web_user_id != null">
				and sys_web_user_id = #{sys_web_user_id}
			</if>
			<if test="user_name != null">
				and user_name = #{user_name}
			</if>
			<if test="password != null">
				and password = #{password}
			</if>
			<if test="id_card != null">
				and id_card = #{id_card}
			</if>
			<if test="real_name != null">
				and real_name = #{real_name}
			</if>
			<if test="create_user_id != null">
				and create_user_id = #{create_user_id}
			</if>
			<if test="create_user_name != null">
				and create_user_name = #{create_user_name}
			</if>
			<if test="create_timestamp != null">
				and create_timestamp = #{create_timestamp}
			</if>
			<if test="last_update_user_id != null">
				and last_update_user_id = #{last_update_user_id}
			</if>
			<if test="last_update_timestamp != null">
				and last_update_timestamp = #{last_update_timestamp}
			</if>
			<if test="enable_flag != null">
				and enable_flag = #{enable_flag}
			</if>
			<if test="isExcludePKFlag != null and isExcludePKFlag == true">
			</if>
		</where>
	</select>

	<!-- getById 外网用通过用户身份证来查询次用户是否已有用户名密码 -->
	<select id="getById" parameterType="String" resultType="SysWebUser">
		select
		sys_web_user_id,
		user_name,
		password,
		id_card,
		real_name,
		create_user_id,
		create_user_name,
		date_format(create_timestamp,'%Y-%m-%d %H:%i:%s') as create_timestamp_str,
		create_timestamp,
		last_update_user_id,
		date_format(last_update_timestamp,'%Y-%m-%d %H:%i:%s') as last_update_timestamp_str,
		last_update_timestamp,
		enable_flag
		from
		sys_web_user
		where
		enable_flag=1
		and id_card=#{id_card}
	</select>
	<!-- getByUserName 查询用户名密码是否已经存在 -->
	<select id="getByUserName" parameterType="String" resultType="SysWebUser">
		select
		sys_web_user_id,
		user_name,
		password,
		id_card,
		real_name,
		create_user_id,
		create_user_name,
		date_format(create_timestamp,'%Y-%m-%d %H:%i:%s') as create_timestamp_str,
		create_timestamp,
		last_update_user_id,
		date_format(last_update_timestamp,'%Y-%m-%d %H:%i:%s') as last_update_timestamp_str,
		last_update_timestamp,
		enable_flag
		from
		sys_web_user
		where
		enable_flag=1
		and user_name=#{user_name}
	</select>
</mapper> 
