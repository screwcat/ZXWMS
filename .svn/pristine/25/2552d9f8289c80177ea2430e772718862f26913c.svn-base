<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.zx.emanage.sysmanage.persist.SysRoleDao">
	<!-- 查询数据条数，直接返回int类型条数 -->
	<select id="findCount" parameterType="map" resultType="int">
		select count(id) as count
		from sys_role
		<where>
			enable_flag='1'
			<if test="role_name != null">
				and role_name like '${role_name}'
			</if>
		</where>
	</select>

	<!-- 查询角色 -->
	<select id="search" parameterType="map" resultType="java.util.HashMap">
		select
		id,
		role_name,
		enable_flag,
		create_user_id,
		date_format(create_timestamp,'%Y-%c-%d') as create_timestamp,
		last_update_user_id,
		date_format(last_update_timestamp,'%Y-%c-%d') as last_update_timestamp,
		last_update_remark
		from sys_role
		<where>
			enable_flag='1'
			<if test="role_name != null">
				and role_name like '${role_name}'
			</if>
		</where>
		<if test="sortname != null and sortorder !=null">
			ORDER BY ${sortname} ${sortorder}
		</if>
		<if test="offset != null and pagesize !=null">
			LIMIT ${offset} , ${pagesize}
		</if>

	</select>
	<!-- 获取角色 -->
	<select id="get" parameterType="Integer" resultType="SysRole">
		select
		id,
		role_name,
		enable_flag,
		create_user_id,
		create_timestamp,
		last_update_user_id,
		last_update_timestamp,
		last_update_remark,
		is_workflow,
		work_flow_id
		from sys_role
		where
		id=#{id}
	</select>

	<select id="getSysRoleMenuCheck" parameterType="map"
		resultType="java.util.HashMap">

		select CONCAT('M',mn.id) AS id, mn.menu_name, mn.menu_url,
		mn.menu_level, CONCAT('M',mn.p_menu_id) AS p_menu_id ,mn.menu_sort,0
		as type,
		<if test="current_role_id != null">
			(select id from sys_role_menu_function t where t.role_id=#{current_role_id}
			and t.menu_id=mn.id limit 1) as ischeck
		</if>
		<if test="no_current_role_id != null">
			null as ischeck
		</if>
		from sys_menu mn
		ORDER BY mn.menu_level,mn.menu_sort
	</select>

	<select id="getSysRoleFuncCheck" parameterType="map"
		resultType="java.util.HashMap">

		SELECT CONCAT('F',f.id) AS id, f.func_name,f.func_method,
		CONCAT('M',f.menu_id) AS menu_id,f.default_flag ,1 as type,
		<if test="current_role_id != null">
			(select id from sys_role_menu_function t where t.role_id=#{current_role_id}
			and t.func_id=f.id) as ischeck
		</if>
		<if test="no_current_role_id != null">
			null as ischeck
		</if>
		FROM sys_function f
		ORDER BY f.menu_id ,f.func_sort
	</select>
	<!-- 更新角色 -->
	<update id="update" parameterType="SysRole">
		update sys_role
		<set>
			<if test="role_name != null">
				role_name = #{role_name},
			</if>
			<if test="enable_flag != null">
				enable_flag = #{enable_flag},
			</if>
			<if test="last_update_user_id != null">
				last_update_user_id = #{last_update_user_id},
			</if>
			<if test="last_update_timestamp != null">
				last_update_timestamp = #{last_update_timestamp},
			</if>
			<if test="last_update_remark != null">
				last_update_remark = #{last_update_remark}
			</if>
		</set>
		where id = #{id}
	</update>
	<!-- 插入角色，并在用户实体对象中将主键进行赋值，返回受影响的记录条数，如果不需要返回主键，无需配置useGeneratedKeys、keyProperty项 -->
	<insert id="save" parameterType="SysRole" useGeneratedKeys="true"
		keyProperty="id">
		INSERT INTO sys_role
		(role_name ,enable_flag
		,create_user_id,create_timestamp,last_update_user_id,last_update_timestamp,last_update_remark)
		VALUES
		(
		#{role_name},#{enable_flag},
		#{create_user_id},#{create_timestamp},#{last_update_user_id},#{last_update_timestamp},#{last_update_remark});
	</insert>
	<select id="search2" parameterType="map" resultType="java.util.HashMap">
		select
		id,
		role_name,
		enable_flag,
		create_user_id,
		date_format(create_timestamp,'%Y-%c-%d') as create_timestamp,
		last_update_user_id,
		date_format(last_update_timestamp,'%Y-%c-%d') as last_update_timestamp,
		last_update_remark
		from sys_role
		<where>
			enable_flag='1'
			<if test="id != null">
				and id = #{id}
			</if>
			<if test="role_name != null">
				and role_name = #{role_name}
			</if>
			<if test="enable_flag != null">
				and enable_flag = #{enable_flag}
			</if>
			<if test="create_user_id != null">
				and create_user_id = #{create_user_id}
			</if>
			<if test="create_timestamp != null">
				and create_timestamp = #{create_timestamp}
			</if>
			<if test="last_update_user_id != null">
				and last_update_user_id = #{last_update_user_id}
			</if>
			<if test="last_update_timestamp != null">
				and last_update_timestamp = #{last_update_timestamp}
			</if>
			<if test="last_update_remark != null">
				and last_update_remark = #{last_update_remark}
			</if>
		</where>
	</select>
	<!-- 删除角色 -->
	<delete id="delete">
		delete from sys_role where id in
		<foreach collection="array" item="item" index="index" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</delete>
	<!-- 查询用户的理财查询权限 -->
	<select id="getUserRoleNameList" parameterType="int" resultType="String">
		select
		role_name
		from sys_role
		<where>
			id in (select role_id from sys_user_role where user_id = #{user_id})
			and role_name in
			('理财业务专员','理财财务专员','理财业务部主管','理财业务部总监','理财业务接待专员','理财业务接待部主管','超级用户','财务柜员','理财财务主管','理财业务部副总')
			and is_workflow=0
			and enable_flag = 1
		</where>
	</select>
	<!--根据登录的ID,判断该人角色是不是业务部门团队经理 -->
	<select id="findRole" parameterType="Integer" resultType="Integer">
		SELECT
		EXISTS
		(select id from sys_role where id in (select role_id from sys_user_role where
		user_id=#{userId}) and is_workflow=0 and role_name='业务部门团队经理') AS EX
	</select>

	<!-- 根据登录人ID,判断器角色是不是信审部门主管 -->
	<select id="findRoleForCDS" parameterType="Integer" resultType="Integer">
		SELECT
		EXISTS
		(select id from sys_role where id in (select role_id from sys_user_role where
		user_id=#{userId}) and is_workflow=0 and role_name='信审部门主管') AS EX
	</select>
	
	<select id="getMessagePeople"  resultType="java.util.HashMap">
	     select
	     	id,
	     	role_name,
	     	enable_flag,
	     	create_user_id,
	     	create_timestamp,
	     	last_update_user_id,
	     	last_update_timestamp,
	     	last_update_remark,
	     	is_workflow,
	     	work_flow_id
	     from
	     	sys_role
	     where 
	     	enable_flag = '1'
	     and
	     	is_workflow = '0'
	</select>
</mapper> 
