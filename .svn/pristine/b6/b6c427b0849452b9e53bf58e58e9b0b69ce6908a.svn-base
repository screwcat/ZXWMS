<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.zx.emanage.loanpost.persist.WmsPostLoanMigrationDao">
	<!-- get entity by pk -->
	<select id="get" parameterType="long" resultType="WmsPostLoanMigration">
		select
		wms_post_loan_migration_id,
		wms_cre_credit_head_id,
		attachment_old_name,
		attachment_new_name,
		attachment_address,
		attachment_type,
		create_user_id,
		create_user_name,
		create_timestamp,
		last_update_user_id,
		last_update_timestamp,
		enable_flag
		from
		wms_post_loan_migration
		where
		wms_post_loan_migration_id = #{wms_post_loan_migration_id}
	</select>

	<!-- count num -->
	<select id="findCount" parameterType="map" resultType="int">
		select count(wms_post_loan_migration_id) as count
		from
		wms_post_loan_migration
		<where>
			<if test="paramname != null">
				<!-- and columnName = #{columnName} -->
			</if>
		</where>
	</select>

	<!-- list -->
	<select id="search" parameterType="map" resultType="java.util.HashMap">
		select
		wms_post_loan_migration_id,
		wms_cre_credit_head_id,
		attachment_old_name,
		attachment_new_name,
		attachment_address,
		attachment_type,
		create_user_id,
		create_user_name,
		create_timestamp,
		last_update_user_id,
		last_update_timestamp,
		enable_flag
		from
		wms_post_loan_migration
		<where>
			<if test="wms_cre_credit_head_id != null">
				and wms_cre_credit_head_id = #{wms_cre_credit_head_id}
			</if>
			<if test="enable_flag != null">
				and enable_flag = #{enable_flag}
			</if>
		</where>
		<if test="sortname != '' and sortorder !=''">
			ORDER BY ${sortname} ${sortorder}
		</if>
		<if test="offset != null and pagesize !=null">
			LIMIT ${offset} , ${pagesize}
		</if>
	</select>

	<!-- save -->
	<insert id="save" parameterType="WmsPostLoanMigration"
		useGeneratedKeys="true" keyProperty="wms_post_loan_migration_id">
		INSERT INTO
		wms_post_loan_migration
		(
		wms_post_loan_migration_id,

		wms_cre_credit_head_id,

		attachment_old_name,

		attachment_new_name,

		attachment_address,

		attachment_type,

		create_user_id,

		create_user_name,

		create_timestamp,

		last_update_user_id,

		last_update_timestamp,

		enable_flag
		)
		VALUES
		(
		#{wms_post_loan_migration_id},
		#{wms_cre_credit_head_id},
		#{attachment_old_name},
		#{attachment_new_name},
		#{attachment_address},
		#{attachment_type},
		#{create_user_id},
		#{create_user_name},
		#{create_timestamp},
		#{last_update_user_id},
		#{last_update_timestamp},
		#{enable_flag}
		);
	</insert>

	<!-- 更新用户 -->
	<update id="update" parameterType="WmsPostLoanMigration">
		update wms_post_loan_migration
		<set>
			<if test="wms_post_loan_migration_id != null">
				wms_post_loan_migration_id = #{wms_post_loan_migration_id},
			</if>
			<if test="attachment_old_name != null">
				attachment_old_name = #{attachment_old_name},
			</if>
			<if test="attachment_new_name != null">
				attachment_new_name = #{attachment_new_name},
			</if>
			<if test="attachment_address != null">
				attachment_address = #{attachment_address},
			</if>
			<if test="attachment_type != null">
				attachment_type = #{attachment_type},
			</if>
			<if test="create_user_id != null">
				create_user_id=#{create_user_id},
			</if>
			<if test="create_user_name != null">
				create_user_name=#{create_user_name},
			</if>
			<if test="create_timestamp != null">
				create_timestamp=#{create_timestamp},
			</if>
			<if test="last_update_user_id != null">
				last_update_user_id=#{last_update_user_id},
			</if>
			<if test="last_update_timestamp != null">
				last_update_timestamp=#{last_update_timestamp},
			</if>
			<if test="enable_flag != null">
				enable_flag=#{enable_flag},
			</if>
		</set>
		where
		wms_post_loan_migration_id = #{wms_post_loan_migration_id}
	</update>
	<!-- 更新enable状态 -->
	<update id="updateEnable" parameterType="WmsPostLoanMigration">
		update wms_post_loan_migration
		<set>
			<if test="enable_flag != null">
				enable_flag=#{enable_flag},
			</if>
		</set>
		where
		wms_cre_credit_head_id = #{wms_cre_credit_head_id}
	</update>
	<select id="getListByEntity" parameterType="WmsPostLoanMigration"
		resultType="WmsPostLoanMigration">
		select
		wms_post_loan_migration_id,
		wms_cre_credit_head_id,
		attachment_old_name,
		attachment_new_name,
		attachment_address,
		attachment_type,
		create_user_id,
		create_user_name,
		create_timestamp,
		last_update_user_id,
		last_update_timestamp,
		enable_flag
		from
		wms_post_loan_migration
		<where>
			<if test="wms_post_loan_migration_id != null">
				and wms_post_loan_migration_id = #{wms_post_loan_migration_id}
			</if>
			<if test="wms_cre_credit_head_id != null">
				and wms_cre_credit_head_id = #{wms_cre_credit_head_id}
			</if>
			<if test="attachment_old_name != null">
				and attachment_old_name = #{attachment_old_name}
			</if>
			<if test="attachment_new_name != null">
				and attachment_new_name = #{attachment_new_name}
			</if>
			<if test="attachment_address != null">
				and attachment_address = #{attachment_address}
			</if>
			<if test="attachment_type != null">
				and attachment_type = #{attachment_type}
			</if>
			<if test="isExcludePKFlag != null and isExcludePKFlag == true">
				and wms_post_loan_migration_id != #{wms_post_loan_migration_id}
			</if>
		</where>
	</select>
	<!-- 转件管理一览表格 -->
	<select id="searchZJByQueryInfo" parameterType="map"
		resultType="java.util.HashMap">
		select
		m1.cre_type,
		(case m1.cre_type when '1' then '信贷产品' when '2' then '房贷产品' end)as
		cre_type_name,
		m1.protocol_code,
		m2.debtor_name,
		m2.debtor_tel,
		m2.protocol_type,
		date_format(m1.protocol_creat_date,'%Y-%m-%d') as protocol_creat_date,
		m1.protocol_amount,
		date_format(m1.current_repay_date,'%Y-%m-%d') as current_repay_date,
		m1.protocol_amount,
		m1.repay_principal,
		m1.repay_interest,
		m1.cur_overdue_day,
		m1.repay_status,
		m1.customer_officer_name,
		m1.wms_cre_credit_head_id,
		m1.wms_fina_cre_pay_id,
		m1.wms_cre_appro_borrow_protocol_id
		from
		wms_fina_cre_repay m1,wms_cre_appro_borrow_protocol m2
		<where>
			m1.wms_cre_appro_borrow_protocol_id=m2.wms_cre_appro_id
			and
			m1.repay_status=2
			and m1.cur_overdue_type in(1,2)
			<if test="protocol_code != null">
				and m1.protocol_code like #{protocol_code}
			</if>
			<if test="debtor_name != null">
				and m2.debtor_name like #{debtor_name}
			</if>
			<if test="debtor_tel != null">
				and m2.debtor_tel like #{debtor_tel}
			</if>
			<if test="customer_officer_name != null">
				and m1.customer_officer_name like
				#{customer_officer_name}
			</if>
			<if test="cre_type != null">
				and m1.cre_type = #{cre_type}
			</if>
			<if test="migration_status != null">
				and m1.migration_status = #{migration_status}
			</if>
			<if test="idList !=null">
				and m1.wms_cre_credit_head_id in
				<foreach collection="idList" item="wms_cre_credit_head_id"
					open="(" separator="," close=")">
					#{wms_cre_credit_head_id}
				</foreach>
			</if>
		</where>
		<if test="sortname != '' and sortorder !=''">
			ORDER BY ${sortname} ${sortorder}
		</if>
		<if test="offset != null and pagesize !=null">
			LIMIT ${offset} , ${pagesize}
		</if>
	</select>
	<!-- 实现转件申请 -->
	<select id="searchZJByQueryInfo1" parameterType="map"
		resultType="java.util.HashMap">
		select
		m1.cre_type,
		(case m1.cre_type when '1' then '信贷产品' when '2' then '房贷产品' end)as
		cre_type_name,
		m1.protocol_code,
		m2.debtor_name,
		m2.debtor_tel,
		m2.protocol_type,
		date_format(m1.protocol_creat_date,'%Y-%m-%d') as protocol_creat_date,
		m1.protocol_amount,
		date_format(m1.current_repay_date,'%Y-%m-%d') as current_repay_date,
		m1.protocol_amount,
		m1.repay_principal,
		m1.repay_interest,
		m1.cur_overdue_day,
		m1.repay_status,
		m1.customer_officer_name,
		m1.wms_cre_credit_head_id,
		m1.wms_fina_cre_pay_id,
		m1.wms_cre_appro_borrow_protocol_id
		from
		wms_fina_cre_repay m1,wms_cre_appro_borrow_protocol m2
		<where>
			m1.wms_cre_appro_borrow_protocol_id=m2.wms_cre_appro_id
			and
			m1.wms_cre_credit_head_id=m2.wms_cre_credit_head_id
			and
			m1.repay_status=2
			and m1.cur_overdue_type in(1,2)
			<if test="protocol_code != null">
				and m1.protocol_code like #{protocol_code}
			</if>
			<if test="debtor_name != null">
				and m2.debtor_name like #{debtor_name}
			</if>
			<if test="debtor_tel != null">
				and m2.debtor_tel like #{debtor_tel}
			</if>
			<if test="customer_officer_name != null">
				and m1.customer_officer_name like
				#{customer_officer_name}
			</if>
			<if test="cre_type != null">
				and m1.cre_type = #{cre_type}
			</if>
			<if test="migration_status ==0">
				and m1.migration_status = #{migration_status}
			</if>
			<if test="idList !=null and idList.size()!=0">
				or (
				m1.wms_cre_appro_borrow_protocol_id=m2.wms_cre_appro_id
				and m1.wms_cre_credit_head_id=m2.wms_cre_credit_head_id
				and m1.repay_status=2
				and m1.cur_overdue_type in(1,2)
				<if test="protocol_code != null">
					and m1.protocol_code like #{protocol_code}
				</if>
				<if test="debtor_name != null">
					and m2.debtor_name like #{debtor_name}
				</if>
				<if test="debtor_tel != null">
					and m2.debtor_tel like #{debtor_tel}
				</if>
				<if test="customer_officer_name != null">
					and m1.customer_officer_name like #{customer_officer_name}
				</if>
				<if test="cre_type != null">
					and m1.cre_type = #{cre_type}
				</if>
				and m1.migration_status=1 and m1.wms_cre_credit_head_id in
				<foreach collection="idList" item="wms_cre_credit_head_id"
					open="(" separator="," close=")">
					#{wms_cre_credit_head_id}
				</foreach>
				)
			</if>
		</where>
		<if test="sortname != '' and sortorder !=''">
			ORDER BY ${sortname} ${sortorder}
		</if>
		<if test="offset != null and pagesize !=null">
			LIMIT ${offset} , ${pagesize}
		</if>
	</select>
	<!-- 转件管理一览行数 -->
	<select id="findCountZJByQueryInfo" parameterType="map"
		resultType="int">
		select count(m1.protocol_code) as count
		from
		wms_fina_cre_repay
		m1,wms_cre_appro_borrow_protocol m2
		<where>
			m1.wms_cre_appro_borrow_protocol_id=m2.wms_cre_appro_id
			and
			m1.repay_status=2
			and m1.cur_overdue_type in(1,2)
			<if test="protocol_code != null">
				and m1.protocol_code like #{protocol_code}
			</if>
			<if test="debtor_name != null">
				and m2.debtor_name like #{debtor_name}
			</if>
			<if test="debtor_tel != null">
				and m2.debtor_tel like #{debtor_tel}
			</if>
			<if test="customer_officer_name != null">
				and m1.customer_officer_name like
				#{customer_officer_name}
			</if>
			<if test="cre_type != null">
				and m1.cre_type = #{cre_type}
			</if>
			<if test="migration_status != null">
				and m1.migration_status = #{migration_status}
			</if>
			<if test="idList !=null">
				and m1.wms_cre_credit_head_id in
				<foreach collection="idList" item="wms_cre_credit_head_id"
					open="(" separator="," close=")">
					#{wms_cre_credit_head_id}
				</foreach>
			</if>
		</where>
	</select>

	<select id="findCountZJByQueryInfo1" parameterType="map"
		resultType="int">
		select count(m1.protocol_code) as count
		from
		wms_fina_cre_repay
		m1,wms_cre_appro_borrow_protocol m2
		<where>
			m1.wms_cre_appro_borrow_protocol_id=m2.wms_cre_appro_id
			and
			m1.wms_cre_credit_head_id=m2.wms_cre_credit_head_id
			and
			m1.repay_status=2
			and m1.cur_overdue_type in(1,2)
			<if test="protocol_code != null">
				and m1.protocol_code like #{protocol_code}
			</if>
			<if test="debtor_name != null">
				and m2.debtor_name like #{debtor_name}
			</if>
			<if test="debtor_tel != null">
				and m2.debtor_tel like #{debtor_tel}
			</if>
			<if test="customer_officer_name != null">
				and m1.customer_officer_name like
				#{customer_officer_name}
			</if>
			<if test="cre_type != null">
				and m1.cre_type = #{cre_type}
			</if>
			<if test="migration_status ==0">
				and m1.migration_status = #{migration_status}
			</if>
			<if test="idList !=null and idList.size()!=0">
				or (
				m1.wms_cre_appro_borrow_protocol_id=m2.wms_cre_appro_id
				and m1.wms_cre_credit_head_id=m2.wms_cre_credit_head_id
				and m1.repay_status=2
				and m1.cur_overdue_type in(1,2)
				<if test="protocol_code != null">
					and m1.protocol_code like #{protocol_code}
				</if>
				<if test="debtor_name != null">
					and m2.debtor_name like #{debtor_name}
				</if>
				<if test="debtor_tel != null">
					and m2.debtor_tel like #{debtor_tel}
				</if>
				<if test="customer_officer_name != null">
					and m1.customer_officer_name like #{customer_officer_name}
				</if>
				<if test="cre_type != null">
					and m1.cre_type = #{cre_type}
				</if>
				and m1.migration_status=1 and m1.wms_cre_credit_head_id in
				<foreach collection="idList" item="wms_cre_credit_head_id"
					open="(" separator="," close=")">
					#{wms_cre_credit_head_id}
				</foreach>
				)
			</if>
		</where>
	</select>
	<!-- 转件管理 转件审核 确认的无分页数据 -->
	<select id="getZJListWithoutPaging" parameterType="map"
		resultType="java.util.HashMap">
		select
		m1.cre_type,
		(case m1.cre_type when '1' then '信贷产品' when '2' then '房贷产品' end)as
		cre_type_name,
		m1.protocol_code,
		m2.debtor_name,
		m2.debtor_tel,
		m2.protocol_type,
		date_format(m1.protocol_creat_date,'%Y-%m-%d') as protocol_creat_date,
		m1.protocol_amount,
		date_format(m1.current_repay_date,'%Y-%m-%d') as current_repay_date,
		m1.protocol_amount,
		m1.repay_principal,
		m1.repay_interest,
		m1.cur_overdue_day,
		m1.repay_status,
		m1.customer_officer_name,
		m1.wms_cre_credit_head_id,
		m1.wms_fina_cre_pay_id,
		m1.wms_cre_appro_borrow_protocol_id
		from
		wms_fina_cre_repay m1,wms_cre_appro_borrow_protocol m2
		<where>
			m1.wms_cre_appro_borrow_protocol_id=m2.wms_cre_appro_id
			and
			m1.repay_status=2
			and m1.cur_overdue_type in(1,2)
			<if test="protocol_code != null">
				and m1.protocol_code like #{protocol_code}
			</if>
			<if test="debtor_name != null">
				and m2.debtor_name like #{debtor_name}
			</if>
			<if test="debtor_tel != null">
				and m2.debtor_tel like #{debtor_tel}
			</if>
			<if test="customer_officer_name != null">
				and m1.customer_officer_name like
				#{customer_officer_name}
			</if>
			<if test="cre_type != null">
				and m1.cre_type = #{cre_type}
			</if>
			<if test="migration_status != null">
				and m1.migration_status = #{migration_status}
			</if>
			<if test="idList !=null">
				and m1.wms_cre_credit_head_id in
				<foreach collection="idList" item="wms_cre_credit_head_id"
					open="(" separator="," close=")">
					#{wms_cre_credit_head_id}
				</foreach>
			</if>
		</where>
		<if test="sortname != '' and sortorder !=''">
			ORDER BY ${sortname} ${sortorder}
		</if>
	</select>
	<!-- 转件管理 转件申请的无分页数据 -->
	<select id="getZJSQListWithoutPaging" parameterType="map"
		resultType="java.util.HashMap">
		select
		m1.cre_type,
		(case m1.cre_type when '1' then '信贷产品' when '2' then '房贷产品' end)as
		cre_type_name,
		m1.protocol_code,
		m2.debtor_name,
		m2.debtor_tel,
		m2.protocol_type,
		date_format(m1.protocol_creat_date,'%Y-%m-%d') as protocol_creat_date,
		m1.protocol_amount,
		date_format(m1.current_repay_date,'%Y-%m-%d') as current_repay_date,
		m1.protocol_amount,
		m1.repay_principal,
		m1.repay_interest,
		m1.cur_overdue_day,
		m1.repay_status,
		m1.customer_officer_name,
		m1.wms_cre_credit_head_id,
		m1.wms_fina_cre_pay_id,
		m1.wms_cre_appro_borrow_protocol_id
		from
		wms_fina_cre_repay m1,wms_cre_appro_borrow_protocol m2
		<where>
			m1.wms_cre_appro_borrow_protocol_id=m2.wms_cre_appro_id
			and
			m1.wms_cre_credit_head_id=m2.wms_cre_credit_head_id
			and
			m1.repay_status=2
			and m1.cur_overdue_type in(1,2)
			<if test="protocol_code != null">
				and m1.protocol_code like #{protocol_code}
			</if>
			<if test="debtor_name != null">
				and m2.debtor_name like #{debtor_name}
			</if>
			<if test="debtor_tel != null">
				and m2.debtor_tel like #{debtor_tel}
			</if>
			<if test="customer_officer_name != null">
				and m1.customer_officer_name like
				#{customer_officer_name}
			</if>
			<if test="cre_type != null">
				and m1.cre_type = #{cre_type}
			</if>
			<if test="migration_status ==0">
				and m1.migration_status = #{migration_status}
			</if>
			<if test="idList !=null and idList.size()!=0">
				or (
				m1.wms_cre_appro_borrow_protocol_id=m2.wms_cre_appro_id
				and m1.wms_cre_credit_head_id=m2.wms_cre_credit_head_id
				and m1.repay_status=2
				and m1.cur_overdue_type in(1,2)
				<if test="protocol_code != null">
					and m1.protocol_code like #{protocol_code}
				</if>
				<if test="debtor_name != null">
					and m2.debtor_name like #{debtor_name}
				</if>
				<if test="debtor_tel != null">
					and m2.debtor_tel like #{debtor_tel}
				</if>
				<if test="customer_officer_name != null">
					and m1.customer_officer_name like #{customer_officer_name}
				</if>
				<if test="cre_type != null">
					and m1.cre_type = #{cre_type}
				</if>
				and m1.migration_status=1 and m1.wms_cre_credit_head_id in
				<foreach collection="idList" item="wms_cre_credit_head_id"
					open="(" separator="," close=")">
					#{wms_cre_credit_head_id}
				</foreach>
				)
			</if>
		</where>
		<if test="sortname != '' and sortorder !=''">
			ORDER BY ${sortname} ${sortorder}
		</if>
	</select>
	<!-- 通过贷款表ID 查询还款和合同信息 -->
	<select id="getMigrationInfoByMCCHID" parameterType="map"
		resultType="java.util.HashMap">
		select
		m1.cre_type,
		m1.protocol_code,
		m2.debtor_name,
		m2.debtor_tel,
		date_format(m1.protocol_creat_date,'%Y-%m-%d') as protocol_creat_date,
		m1.protocol_amount,
		date_format(m1.current_repay_date,'%Y-%m-%d') as current_repay_date,
		m1.protocol_amount,
		m1.repay_principal,
		m1.repay_interest,
		m1.cur_overdue_day,
		m1.repay_status,
		m1.customer_officer_name,
		m1.wms_cre_credit_head_id,
		m1.wms_fina_cre_pay_id,
		m1.wms_cre_appro_borrow_protocol_id,
		m1.refund_limit_month,
		m1.repay_period,
		m1.un_pay_period,
		m1.un_pay_principal,
		m1.cur_late_fee,
		m1.un_pay_interest
		from
		wms_fina_cre_repay m1,wms_cre_appro_borrow_protocol m2
		<where>
			m1.wms_cre_appro_borrow_protocol_id=m2.wms_cre_appro_id
			and
			m1.repay_status=2
			and m1.cur_overdue_type in(1,2)
			<if test="wms_cre_credit_head_id != null">
				and m1.wms_cre_credit_head_id=#{wms_cre_credit_head_id}
			</if>
		</where>
	</select>
	<insert id="addNewRecord" parameterType="WmsPostLoanMigration"
		useGeneratedKeys="true" keyProperty="id">
		INSERT INTO wms_post_loan_migration
		(
		wms_post_loan_migration_id,

		wms_cre_credit_head_id,

		attachment_old_name,

		attachment_new_name,

		attachment_address,

		attachment_type
		)
		VALUES
		(
		#{wms_post_loan_migration_id},
		#{wms_cre_credit_head_id},
		#{attachment_old_name},
		#{attachment_new_name},
		#{attachment_address},
		#{attachment_type}
		);
	</insert>
</mapper> 
