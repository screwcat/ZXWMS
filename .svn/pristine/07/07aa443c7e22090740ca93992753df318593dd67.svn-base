package com.zx.emanage.telUserLoanInfo.web;import java.util.HashMap;import java.util.List;import java.util.Map;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpSession;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestMethod;import org.springframework.web.bind.annotation.ResponseBody;import com.zx.emanage.telUserLoanInfo.service.IWmsCreCreditNotificationMessageService;import com.zx.emanage.telUserLoanInfo.vo.WmsCreCreditNotificationMessageSearchBeanVO;import com.zx.emanage.util.gen.entity.WmsCreCreditNotificationMessage;import com.zx.sframe.util.GlobalVal;import com.zx.sframe.util.vo.UserBean;//import com.zx.wms.util.ResultHelper;/* * @author administrator */@Controllerpublic class WmsCreCreditNotificationMessageController {    private static Logger log = LoggerFactory.getLogger(WmsCreCreditNotificationMessageController.class);    @Autowired    private IWmsCreCreditNotificationMessageService wmscrecreditnotificationmessageService;    /**     * Description : 获取结果集(不带分页)     *      * @param queryInfo     * @return record list     * @author administrator     */    @RequestMapping(value = "/inve/SearchWmsCreCreditNotificationMessageWithoutPagingList.do", method = {RequestMethod.GET, RequestMethod.POST})    @ResponseBody    public Map<String, Object> getListWithoutPaging(WmsCreCreditNotificationMessageSearchBeanVO queryInfo) {        return wmscrecreditnotificationmessageService.getListWithoutPaging(queryInfo);    }    /**     * Description : 获取结果集(带分页)     *      * @param queryInfo     * @return record list     * @author administrator     */    @RequestMapping(value = "/inve/SearchWmsCreCreditNotificationMessageWithPagingList.do", method = {RequestMethod.GET, RequestMethod.POST})    @ResponseBody    public Map<String, Object> getListWithPaging(WmsCreCreditNotificationMessageSearchBeanVO queryInfo) {        return wmscrecreditnotificationmessageService.getListWithPaging(queryInfo);    }    /**     * Description : 通过主键获取结果     *      * @param primary key     * @return WmsCreCreditNotificationMessageVO     * @author administrator     */    @RequestMapping(value = "/inve/WmsCreCreditNotificationMessageGetInfoByPK.do", method = {RequestMethod.GET, RequestMethod.POST})    @ResponseBody    public WmsCreCreditNotificationMessage getInfoByPK(Integer WmsCreCreditNotificationMessage_id) {        return wmscrecreditnotificationmessageService.getInfoByPK(WmsCreCreditNotificationMessage_id);    }    /**     * Description : 新增记录     *      * @param bean     * @return "success" or "error" or user defined     * @author administrator     */    @RequestMapping(value = "/inve/WmsCreCreditNotificationMessageSave.do", method = {RequestMethod.GET, RequestMethod.POST})    @ResponseBody    public String doSave(HttpServletRequest request, WmsCreCreditNotificationMessage bean) {        String result = "";        HttpSession session = request.getSession();        UserBean user = (UserBean) session.getAttribute(GlobalVal.USER_SESSION);        try {            result = wmscrecreditnotificationmessageService.save(bean, user);        }        catch (Exception e) {            log.error(e.getMessage());            result = "error";        }        return result;    }    /**     * Description : 更新记录     *      * @param bean     * @return "success" or "error" or user defined     * @author administrator     */    @RequestMapping(value = "/inve/WmsCreCreditNotificationMessageUpdate.do", method = {RequestMethod.GET, RequestMethod.POST})    @ResponseBody    public String doUpdate(HttpServletRequest request, WmsCreCreditNotificationMessage bean) {        String result = "";        HttpSession session = request.getSession();        UserBean user = (UserBean) session.getAttribute(GlobalVal.USER_SESSION);        try {            result = wmscrecreditnotificationmessageService.update(bean, user);        }        catch (Exception e) {            log.error(e.getMessage());            result = "error";        }        return result;    }        /**     * Description : 信息通知中心删除     *      * @param Integer     * @return Map<String, Object>     * @author jiaodelong     */    @RequestMapping(value = "/wms/deleteMessageUp.do", method = { RequestMethod.GET, RequestMethod.POST })    @ResponseBody    public Map<String, Object> deleteWmsMessage(String msg_key_list, HttpServletRequest request) {    	Map<String, Object> resMap = new HashMap<String, Object>();    	List<String> messageList = com.zx.sframe.util.JsonUtil.jsonArrayToList(msg_key_list, String.class);    	try {    		for(String list : messageList){    			wmscrecreditnotificationmessageService.updateMessageFlag(Integer.parseInt(list));    		}    		resMap.put("result", "success");    		resMap.put("message","请求成功！");    		resMap.put("flag", true);		} catch (Exception e) {			log.error(e.getMessage());			resMap.put("result", "error");			resMap.put("flag", false);    		resMap.put("message", e.getMessage());		}	    return resMap;    }        /**     * Description : 修改通知中心状态     *      * @param Integer     * @return Map<String, Object>     * @author jiaodelong     */    @RequestMapping(value = "/wms/updateMessageStatusForIsread.do", method = { RequestMethod.GET, RequestMethod.POST })    @ResponseBody    public Map<String, Object> updateMessageStatusForIsread(String user_id) {    	Map<String, Object> resMap = new HashMap<String, Object>();    	try {    		wmscrecreditnotificationmessageService.updateMessageStatusForIsread(Integer.valueOf(user_id));    		resMap.put("result", "success");    		resMap.put("flag", true);    		resMap.put("message","请求成功！");		} catch (Exception e) {			log.error(e.getMessage());			resMap.put("result", "error");			resMap.put("flag", false);    		resMap.put("message", e.getMessage());		}    	return resMap;    }}