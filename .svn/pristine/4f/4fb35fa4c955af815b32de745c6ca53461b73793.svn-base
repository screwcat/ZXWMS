package com.zx.emanage.cremanage.service.impl;import java.sql.Timestamp;import java.text.ParseException;import java.text.SimpleDateFormat;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;import jodd.util.StringUtil;import org.apache.commons.lang3.StringUtils;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import org.springframework.transaction.annotation.Transactional;import com.zx.emanage.cremanage.persist.WmsCreCreditAutoExpireDao;import com.zx.emanage.cremanage.service.IWmsCreCreditAutoExpireService;import com.zx.emanage.cremanage.service.IWmsCreCreditHeadService;import com.zx.emanage.cremanage.service.IWmsLoanWorkFlowService;import com.zx.emanage.cremanage.vo.WmsCreCreditAutoExpireSearchBeanVO;import com.zx.emanage.cremanage.vo.WmsHouseCreditWorkFlowVO;import com.zx.emanage.util.gen.SysTools;import com.zx.emanage.util.gen.WmsHelp;import com.zx.emanage.util.gen.entity.WmsCreCreditAutoExpire;import com.zx.platform.syscontext.PlatformGlobalVar;import com.zx.platform.syscontext.vo.GridDataBean;import com.zx.sframe.util.vo.UserBean;/* * WmsCreCreditAutoExpireService */@Service("WmsCreCreditAutoExpireService")public class WmsCreCreditAutoExpireServiceImpl implements IWmsCreCreditAutoExpireService {    private static Logger log = LoggerFactory.getLogger(WmsCreCreditAutoExpireServiceImpl.class);    @Autowired    private WmsCreCreditAutoExpireDao wmscrecreditautoexpireDao;    @Autowired    private IWmsLoanWorkFlowService wmsLoanWorkFlowService;    @Autowired    private IWmsCreCreditHeadService wmsCreCreditHeadService;        /**     *      * @Title: getListWithoutPaging     * @Description: 查询列表(不带分页)     * @param WmsCreCreditAutoExpireSearchBeanVO queryInfo     * @return      * @author: wangyihan     * @time: 2017年02月20日 上午09:06:35     * history:     * 1、2017年02月20日 上午09:06:35 wangyihan 创建方法     */    @Override    public Map<String, Object> getListWithoutPaging(WmsCreCreditAutoExpireSearchBeanVO queryInfo) {        Map<String, Object> paramMap = new HashMap<String, Object>();        paramMap.put("sortname", queryInfo.getSortname());        paramMap.put("sortorder", queryInfo.getSortorder());        List<Map<String, Object>> list = wmscrecreditautoexpireDao.search(paramMap);        Map<String, Object> resMap = new HashMap<String, Object>();        resMap.put("Rows", list);        return resMap;    }    /**     *      * @Title: getListWithPaging     * @Description: 查询列表(带分页)     * @param WmsCreCreditAutoExpireSearchBeanVO queryInfo     * @return      * @author: wangyihan     * @time: 2017年02月20日 上午09:06:35     * history:     * 1、2017年02月20日 上午09:06:35 wangyihan 创建方法     */    @Override    public Map<String, Object> getListWithPaging(WmsCreCreditAutoExpireSearchBeanVO queryInfo, UserBean user)    {        Map<String, Object> paramMap = new HashMap<String, Object>();                if(StringUtils.isNotBlank(queryInfo.getBill_code())) {            paramMap.put("bill_code", SysTools.getSqlLikeParam(queryInfo.getBill_code()));        }        if(StringUtils.isNotBlank(queryInfo.getSalesman_name_str())) {            paramMap.put("salesman_name_str", SysTools.getSqlLikeParam(queryInfo.getSalesman_name_str()));        }        if(StringUtils.isNotBlank(queryInfo.getCreate_timestamp_begin())) {            paramMap.put("create_timestamp_begin", queryInfo.getCreate_timestamp_begin());        }        if(StringUtils.isNotBlank(queryInfo.getCreate_timestamp_end())) {            paramMap.put("create_timestamp_end", queryInfo.getCreate_timestamp_end());        }        if(StringUtils.isNotBlank(queryInfo.getCustomer_name())) {            paramMap.put("customer_name", SysTools.getSqlLikeParam(queryInfo.getCustomer_name()));        }        if(StringUtils.isNotBlank(queryInfo.getId_card())) {            paramMap.put("id_card", SysTools.getSqlLikeParam(queryInfo.getId_card()));        }        if(StringUtils.isNotBlank(queryInfo.getSalesman_city_code())) {            paramMap.put("salesman_city_code", queryInfo.getSalesman_city_code());        }        if(StringUtils.isNotBlank(queryInfo.getMaturity_status())) {            paramMap.put("maturity_status", queryInfo.getMaturity_status());        }        if (StringUtil.isNotBlank(queryInfo.getMort_flag())) {            paramMap.put("mort_flag", queryInfo.getMort_flag());// 抵押形式        }        paramMap.put("sortname", queryInfo.getSortname());        paramMap.put("sortorder", queryInfo.getSortorder());        // 判断是否分页        if (!"0".equals(queryInfo.getIs_page()))        {            paramMap.put("pagesize", queryInfo.getPagesize());            paramMap.put("offset", queryInfo.getOffset());        }        // 开发模式 1为开发模式 其他为正常权限模式        if (!"1".equals(PlatformGlobalVar.SYS_PROPERTIES.get("isDeveloperMode")))        {            paramMap.put("salesman_id", user.getUserId());// 登陆人id            paramMap.put("menu_url", WmsHelp.MENU_URL_ZSGQHF_LIST);            paramMap.put("childrendept", wmsCreCreditHeadService.queryChildrenDeptInfo(paramMap)); // 获取可查看的部门        }        List<Map<String, Object>> list = wmscrecreditautoexpireDao.search(paramMap);        // 判断是否分页        if (!"0".equals(queryInfo.getIs_page()))        {            GridDataBean<Map<String, Object>> bean = new GridDataBean<Map<String, Object>>(queryInfo.getPage(), wmscrecreditautoexpireDao.findCount(paramMap), list);            return bean.getGridData();        }        else        {            Map<String, Object> retMap = new HashMap<>();            retMap.put("Rows", list);            return retMap;        }    }    /**     *      * @Title: getInfoByPK     * @Description: 根据主键查询     * @param Integer wms_cre_credit_auto_expire_id     * @return      * @author: wangyihan     * @time: 2017年02月20日 上午09:06:35     * history:     * 1、2017年02月20日 上午09:06:35 wangyihan 创建方法     */    @Override    public WmsCreCreditAutoExpire getInfoByPK(Integer wms_cre_credit_auto_expire_id) {        return wmscrecreditautoexpireDao.get(wms_cre_credit_auto_expire_id);    }    /**     *      * @Title: save     * @Description: 新增     * @param WmsCreCreditAutoExpire bean, UserBean user     * @return      * @author: wangyihan     * @time: 2017年02月20日 上午09:06:35     * history:     * 1、2017年02月20日 上午09:06:35 wangyihan 创建方法     */    @Override    @Transactional    public String save(WmsCreCreditAutoExpire bean, UserBean user) {        String resStr = "success";        int ret = 0;                SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");        Map<String, Object> paramMap = new HashMap<String, Object>();                //如果为延期，有延期天数，则查询出原来的延期总天数然后加上当前延期天数        if(bean.getExpire_days() != null) {            paramMap.put("wms_cre_credit_head_id", bean.getWms_cre_credit_head_id());            paramMap.put("is_new", 1);            List<Map<String, Object>> old_list = this.wmscrecreditautoexpireDao.searchForTable(paramMap);            if(old_list == null || old_list.size() != 1) {                log.error("wms_cre_credit_auto_expire表记录不正确：" + old_list);                return "error";            }            Integer old_total_expire_days = new Integer(old_list.get(0).get("total_expire_days").toString());            bean.setTotal_expire_days(old_total_expire_days + bean.getExpire_days());            try            {                //获取原数据的终审时间                bean.setAppro_time(new java.sql.Timestamp(format.parse(old_list.get(0).get("appro_time").toString()).getTime()));            }            catch (ParseException e)            {                log.error("原数据的终审时间为空或异常：" + old_list);            }        } else {            //恢复单据需要走流程            WmsHouseCreditWorkFlowVO approveHouseWorkFlowVO = new WmsHouseCreditWorkFlowVO();            approveHouseWorkFlowVO.setUserId(user.getUserId().toString());            approveHouseWorkFlowVO.setAdvice(bean.getExpire_reason());            approveHouseWorkFlowVO.setBusinessId(bean.getWms_cre_credit_head_id().toString());            approveHouseWorkFlowVO.setWms_cre_credit_head_id(bean.getWms_cre_credit_head_id().toString());            approveHouseWorkFlowVO.setDebtkey("ZSSP");            approveHouseWorkFlowVO.setPass("recovery");            wmsLoanWorkFlowService.publicApprovalStatus(approveHouseWorkFlowVO);        }                        //将之前该单据记录的is_new变为0        paramMap = new HashMap<String, Object>();        paramMap.put("wms_cre_credit_head_id", bean.getWms_cre_credit_head_id());        paramMap.put("is_new", "0");        this.wmscrecreditautoexpireDao.updateForMany(paramMap);                long now_time_long = System.currentTimeMillis();        Timestamp now_time_timestamp = new Timestamp(now_time_long);        bean.setIs_new("1");        bean.setCreate_user_id(user.getUserId());        bean.setCreate_user_name(user.getRealname());        bean.setCreate_timestamp(now_time_timestamp);        bean.setLast_update_user_id(user.getUserId());        bean.setLast_update_timestamp(now_time_timestamp);        bean.setEnable_flag("1");                ret = wmscrecreditautoexpireDao.save(bean);        if (ret == 0) {            resStr = "error";        }        return resStr;    }    /**     *      * @Title: update     * @Description: 修改     * @param WmsCreCreditAutoExpire bean, UserBean user     * @return      * @author: wangyihan     * @time: 2017年02月20日 上午09:06:35     * history:     * 1、2017年02月20日 上午09:06:35 wangyihan 创建方法     */    @Override    @Transactional    public String update(WmsCreCreditAutoExpire bean, UserBean user) {        String resStr = "success";        int ret = 0;        ret = wmscrecreditautoexpireDao.update(bean); // update a record replace columns,                                                   // nonsupport null val        if (ret == 0) {            resStr = "error";        }        return resStr;    }    /**     * @Title: sendAutoExpireinfo     * @Description: TODO(这里用一句话描述这个方法的作用)     * @param bean     * @param user     * @return      * @author: admin     * @time:2017年2月25日 上午9:58:29     * @see com.zx.emanage.cremanage.service.IWmsCreCreditAutoExpireService#sendAutoExpireinfo(com.zx.emanage.cremanage.vo.WmsCreCreditAutoExpireSearchBeanVO, com.zx.sframe.util.vo.UserBean)     * history:     * 1、2017年2月25日 admin 创建方法    */    @Override    public String sendAutoExpireinfo(WmsCreCreditAutoExpireSearchBeanVO bean, UserBean user)    {        // 终审到期作废        if ("1".equals(bean.getSend_type()))        {            // 调用发送信息的接口出现异常 不会影响正常流程            try            {                // 调用方法map                Map<String, Object> sendMap = new HashMap<String, Object>();                // 参数map                Map<String, String> paramMap = new HashMap<String, String>();                // 参数map                Map<String, String> msg_extras = new HashMap<String, String>();                sendMap.put("user_id", bean.getSalesman_id());                paramMap.put("bill_code", bean.getBill_code());                paramMap.put("customer_name", bean.getCustomer_name());                paramMap.put("city", bean.getCity());                // 消息中心使用                sendMap.put("personnel_id", bean.getSalesman_id().toString());                sendMap.put("personnel_shortCode", bean.getSalesman_shortcode());                sendMap.put("personnel_name", bean.getSalesman_name());                sendMap.put("city", bean.getCity());                // 极光推送需要的数据参数                sendMap.put("quart_message", "1");// 消息附加参数                paramMap.put("salesman_name_code", bean.getPersonnel_name() + bean.getPersonnel_shortcode());                paramMap.put("end_date", bean.getEnd_date());// 到期日期                msg_extras.put("wms_cre_credit_head_id", bean.getWms_cre_credit_head_id());// 添加参数                sendMap.put("msg_extras", msg_extras);// 消息附加参数                // 如果是消息中心                sendMap.put("message_center", "1");                // 提交人                paramMap.put("bill_code", bean.getBill_code());                paramMap.put("customer_name", bean.getCustomer_name());                paramMap.put("wms_cre_credit_head_id", bean.getWms_cre_credit_head_id());                paramMap.put("personnel_id", bean.getSalesman_id().toString());                paramMap.put("bill_status", bean.getBill_status());                paramMap.put("create_user_id", bean.getSalesman_id().toString());                paramMap.put("create_user_name", bean.getSalesman_name());                paramMap.put("personnel_shortCode", bean.getSalesman_shortcode());                paramMap.put("app_name", WmsHelp.APP_NAME_MIS);//                sendMap.put("msg_map", paramMap);// 极光推送的消息内容参数                sendMap.put("is_oneself", "1");// 判断获取人                sendMap.put("msg_code", "10010");// 消息编码                sendMap.put("msg_code_role", "10010");// 消息编码                sendMap.put("app_name", WmsHelp.APP_NAME_MIS);//                // 启动线程发送消息                this.wmsCreCreditHeadService.sendInfoAsynchronous(sendMap);            }            catch (Exception e)            {                e.printStackTrace();            }            // 调用发送信息的接口出现异常 不会影响正常流程            try            {                // 调用方法map                Map<String, Object> sendMap = new HashMap<String, Object>();                // 参数map                Map<String, String> paramMap = new HashMap<String, String>();                // 参数map                Map<String, String> msg_extras = new HashMap<String, String>();                sendMap.put("user_id", bean.getSalesman_id());                paramMap.put("bill_code", bean.getBill_code());                paramMap.put("customer_name", bean.getCustomer_name());                paramMap.put("city", bean.getCity());                // 消息中心使用                sendMap.put("personnel_id", bean.getSalesman_id().toString());                sendMap.put("personnel_shortCode", bean.getSalesman_shortcode());                sendMap.put("personnel_name", bean.getSalesman_name());                sendMap.put("city", bean.getCity());                // 极光推送需要的数据参数                sendMap.put("quart_message", "1");// 消息附加参数                paramMap.put("salesman_name_code", bean.getPersonnel_name() + bean.getPersonnel_shortcode());                paramMap.put("end_date", bean.getEnd_date());// 到期日期                msg_extras.put("wms_cre_credit_head_id", bean.getWms_cre_credit_head_id());// 添加参数                sendMap.put("msg_extras", msg_extras);// 消息附加参数                // 如果是消息中心                sendMap.put("message_center", "1");                // 提交人                paramMap.put("bill_code", bean.getBill_code());                paramMap.put("customer_name", bean.getCustomer_name());                paramMap.put("wms_cre_credit_head_id", bean.getWms_cre_credit_head_id());                paramMap.put("personnel_id", bean.getSalesman_id().toString());                paramMap.put("bill_status", bean.getBill_status());                paramMap.put("create_user_id", bean.getSalesman_id().toString());                paramMap.put("create_user_name", bean.getSalesman_name());                paramMap.put("app_name", WmsHelp.APP_NAME_MIS);//                sendMap.put("msg_map", paramMap);// 极光推送的消息内容参数                sendMap.put("role_outside", "1");// 判断获取人                List<String> post_number_list = new ArrayList<>();                post_number_list.add("TDJL");                sendMap.put("post_number_list", post_number_list);// 判断获取人                sendMap.put("msg_code", "10011");// 消息编码                sendMap.put("msg_code_role", "10011");// 消息编码                sendMap.put("app_name", WmsHelp.APP_NAME_MIS);//                // 启动线程发送消息                this.wmsCreCreditHeadService.sendInfoAsynchronous(sendMap);            }            catch (Exception e)            {                e.printStackTrace();            }        }        return "success";    }}