<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.zx.emanage.inve.persist.WmsInveClerkProtocolDao">

	<select id="getNewestWmsInveClerkProtocolByTransaId" parameterType="int" resultType="WmsInveClerkProtocol">
		select 
			* 
		from 
			wms_inve_clerk_protocol 
		where 
			wms_inve_transa_id = #{transaId }
			and enable_flag = '1'
		order by create_timestamp DESC
		LIMIT 1
	</select>

	<!-- get entity by pk -->
	<select id="get" parameterType="int" resultType="WmsInveClerkProtocol">
		select
        				wms_inve_clerk_protocol_id,
        				prot_code,
        				wms_inve_transa_id,
        				is_order_extend,
        				sign_place,
						date_format(begin_of_date,'%Y-%m-%d %H:%i:%s') as begin_of_date_str,
        				begin_of_date,
        				a_name,
        				a_id_card,
        				a_bank_number,
        				a_bank_info,
        				product_account,
        				product_account_upper,
        				category_name,
        				product_deadline,
        				a_data,
        				b_address,
        				b_name,
						date_format(end_of_date,'%Y-%m-%d %H:%i:%s') as end_of_date_str,
        				end_of_date,
        				expect_interest,
						date_format(act_end_of_date,'%Y-%m-%d %H:%i:%s') as act_end_of_date_str,
        				act_end_of_date,
        				create_user_id,
        				create_user_name,
        				create_user_dept_id,
						date_format(create_timestamp,'%Y-%m-%d %H:%i:%s') as create_timestamp_str,
        				create_timestamp,
        				last_update_user_id,
						date_format(last_update_timestamp,'%Y-%m-%d %H:%i:%s') as last_update_timestamp_str,
        				last_update_timestamp,
        				enable_flag
        	from
        		wms_inve_clerk_protocol
        	where
        				wms_inve_clerk_protocol_id = #{wms_inve_clerk_protocol_id}
	</select>

	<!-- count num -->
	<select id="findCount" parameterType="map" resultType="int">
		select count(wms_inve_clerk_protocol_id) as count
		from wms_inve_clerk_protocol
		<where>
			<if test="paramname != null">
				<!-- and columnName = #{columnName} -->
			</if>
		</where>
	</select>

	<!-- list -->
	<select id="search" parameterType="map" resultType="java.util.HashMap">
		select 
				wms_inve_clerk_protocol_id,
				prot_code,
				wms_inve_transa_id,
				is_order_extend,
				sign_place,
				date_format(begin_of_date,'%Y-%m-%d %H:%i:%s') as begin_of_date_str,
				begin_of_date,
				a_name,
				a_id_card,
				a_bank_number,
				a_bank_info,
				product_account,
				product_account_upper,
				category_name,
				product_deadline,
				a_data,
				b_address,
				b_name,
				date_format(end_of_date,'%Y-%m-%d %H:%i:%s') as end_of_date_str,
				end_of_date,
				expect_interest,
				date_format(act_end_of_date,'%Y-%m-%d %H:%i:%s') as act_end_of_date_str,
				act_end_of_date,
				create_user_id,
				create_user_name,
				create_user_dept_id,
				date_format(create_timestamp,'%Y-%m-%d %H:%i:%s') as create_timestamp_str,
				create_timestamp,
				last_update_user_id,
				date_format(last_update_timestamp,'%Y-%m-%d %H:%i:%s') as last_update_timestamp_str,
				last_update_timestamp,
				enable_flag
		from wms_inve_clerk_protocol
		<where>
			<if test="paramname != null">
				<!-- and columnName = #{columnName} -->
			</if>
		</where>
		<if test="sortname != '' and sortorder !=''">
			ORDER BY ${sortname} ${sortorder}
		</if>
		<if test="offset != null and pagesize !=null">
			LIMIT ${offset} , ${pagesize}
		</if>
	</select>

	<!-- save -->
	<insert id="save" parameterType="WmsInveClerkProtocol" useGeneratedKeys="true" keyProperty="wms_inve_clerk_protocol_id">
		INSERT INTO wms_inve_clerk_protocol
		(
				wms_inve_clerk_protocol_id,

				prot_code,

				wms_inve_transa_id,
				
				wms_inve_redeem_id,
				
				protocol_type,

				is_order_extend,

				sign_place,
				
				sign_place_postcode,

				begin_of_date,

				a_name,

				a_id_card,

				a_contact_address,

				a_bank_number,

				a_bank_info,

				product_account,

				product_account_upper,

				category_name,

				product_deadline,

				a_data,

				b_address,

				b_name,

				end_of_date,

				expect_interest,

				act_end_of_date,

				create_user_id,

				create_user_name,

				create_user_dept_id,

				create_timestamp,

				last_update_user_id,

				last_update_timestamp,

				enable_flag,
				
				finnished_type,
				
				main_protocol_version,
				
				sub_protocol_version,
				
				inter_protocol_version,
				
				inter_protocol_merge_version,
				
				m2m_protocol_version,
				
				bel_salesman_id,
				
				customer_signature_path
		)
		VALUES
		(
				#{wms_inve_clerk_protocol_id},
				#{prot_code},
				#{wms_inve_transa_id},
				#{wms_inve_redeem_id},
				#{protocol_type},
				#{is_order_extend},
				#{sign_place},
				#{sign_place_postcode},				
				#{begin_of_date},
				#{a_name},
				#{a_id_card},
				#{a_contact_address},				
				#{a_bank_number},
				#{a_bank_info},
				#{product_account},
				#{product_account_upper},
				#{category_name},
				#{product_deadline},
				#{a_data},
				#{b_address},
				#{b_name},
				#{end_of_date},
				#{expect_interest},
				#{act_end_of_date},
				#{create_user_id},
				#{create_user_name},
				#{create_user_dept_id},
				#{create_timestamp},
				#{last_update_user_id},
				#{last_update_timestamp},
				#{enable_flag},
				#{finnished_type},
				#{main_protocol_version},
				#{sub_protocol_version},
				#{inter_protocol_version},
				#{inter_protocol_merge_version},
				#{m2m_protocol_version},
				#{bel_salesman_id},
				#{customer_signature_path}
		);
	</insert>

	<!-- 更新用户 -->
	<update id="update" parameterType="WmsInveClerkProtocol">
		update wms_inve_clerk_protocol
		<set>
					<if test="wms_inve_clerk_protocol_id != null">
						 wms_inve_clerk_protocol_id = #{wms_inve_clerk_protocol_id},
					</if>
					<if test="prot_code != null">
						 prot_code = #{prot_code},
					</if>
					<if test="wms_inve_transa_id != null">
						 wms_inve_transa_id = #{wms_inve_transa_id},
					</if>
					<if test="protocol_type != null">
						protocol_type = #{protocol_type },
					</if>
					<if test="is_order_extend != null">
						 is_order_extend = #{is_order_extend},
					</if>
					<if test="sign_place != null">
						 sign_place = #{sign_place},
					</if>
					<if test="begin_of_date != null">
						 begin_of_date = #{begin_of_date},
					</if>
					<if test="a_name != null">
						 a_name = #{a_name},
					</if>
					<if test="a_id_card != null">
						 a_id_card = #{a_id_card},
					</if>
					<if test="a_bank_number != null">
						 a_bank_number = #{a_bank_number},
					</if>
					<if test="a_bank_info != null">
						 a_bank_info = #{a_bank_info},
					</if>
					<if test="product_account != null">
						 product_account = #{product_account},
					</if>
					<if test="product_account_upper != null">
						 product_account_upper = #{product_account_upper},
					</if>
					<if test="category_name != null">
						 category_name = #{category_name},
					</if>
					<if test="product_deadline != null">
						 product_deadline = #{product_deadline},
					</if>
					<if test="a_data != null">
						 a_data = #{a_data},
					</if>
					<if test="b_address != null">
						 b_address = #{b_address},
					</if>
					<if test="b_name != null">
						 b_name = #{b_name},
					</if>
					<if test="end_of_date != null">
						 end_of_date = #{end_of_date},
					</if>
					<if test="expect_interest != null">
						 expect_interest = #{expect_interest},
					</if>
					<if test="act_end_of_date != null">
						 act_end_of_date = #{act_end_of_date},
					</if>
					<if test="create_user_id != null">
						 create_user_id = #{create_user_id},
					</if>
					<if test="create_user_name != null">
						 create_user_name = #{create_user_name},
					</if>
					<if test="create_user_dept_id != null">
						 create_user_dept_id = #{create_user_dept_id},
					</if>
					<if test="create_timestamp != null">
						 create_timestamp = #{create_timestamp},
					</if>
					<if test="last_update_user_id != null">
						 last_update_user_id = #{last_update_user_id},
					</if>
					<if test="last_update_timestamp != null">
						 last_update_timestamp = #{last_update_timestamp},
					</if>
					<if test="enable_flag != null">
						 enable_flag = #{enable_flag},
					</if>
					<if test="finnished_type != null">
						finnished_type = #{finnished_type},
					</if>					
					<if test="main_protocol_version != null">
						main_protocol_version = #{main_protocol_version},
					</if>
					<if test="sub_protocol_version != null">
						sub_protocol_version = #{sub_protocol_version},
					</if>
					<if test="inter_protocol_version != null">
						inter_protocol_version = #{inter_protocol_version},
					</if>
					<if test="inter_protocol_merge_version != null">
						inter_protocol_merge_version = #{inter_protocol_merge_version},
					</if>
					<if test="m2m_protocol_version != null">
						m2m_protocol_version = #{m2m_protocol_version},
					</if>
					<if test="bel_salesman_id != null">
						bel_salesman_id = #{bel_salesman_id}
					</if>									
	   </set>
		 where 
    				wms_inve_clerk_protocol_id = #{wms_inve_clerk_protocol_id}
	</update>
	<select id="getListByEntity" parameterType="WmsInveClerkProtocol" resultType="WmsInveClerkProtocol">
		select 
				wms_inve_clerk_protocol_id,
				prot_code,
				wms_inve_transa_id,
				wms_inve_redeem_id,
				is_order_extend,
				sign_place,
				date_format(begin_of_date,'%Y-%m-%d %H:%i:%s') as begin_of_date_str,
				begin_of_date,
				a_name,
				a_id_card,
				a_bank_number,
				a_bank_info,
				product_account,
				product_account_upper,
				category_name,
				product_deadline,
				a_data,
				b_address,
				b_name,
				date_format(end_of_date,'%Y-%m-%d %H:%i:%s') as end_of_date_str,
				end_of_date,
				expect_interest,
				date_format(act_end_of_date,'%Y-%m-%d %H:%i:%s') as act_end_of_date_str,
				act_end_of_date,
				create_user_id,
				create_user_name,
				create_user_dept_id,
				date_format(create_timestamp,'%Y-%m-%d %H:%i:%s') as create_timestamp_str,
				create_timestamp,
				last_update_user_id,
				date_format(last_update_timestamp,'%Y-%m-%d %H:%i:%s') as last_update_timestamp_str,
				last_update_timestamp,
				enable_flag
		from
		wms_inve_clerk_protocol
		<where>
					<if test="wms_inve_clerk_protocol_id != null">
						and wms_inve_clerk_protocol_id = #{wms_inve_clerk_protocol_id}
					</if>
					<if test="prot_code != null">
						and prot_code = #{prot_code}
					</if>
					<if test="wms_inve_transa_id != null">
						and wms_inve_transa_id = #{wms_inve_transa_id}
					</if>
					<if test="is_order_extend != null">
						and is_order_extend = #{is_order_extend}
					</if>
					<if test="sign_place != null">
						and sign_place = #{sign_place}
					</if>
					<if test="begin_of_date != null">
						and begin_of_date = #{begin_of_date}
					</if>
					<if test="a_name != null">
						and a_name = #{a_name}
					</if>
					<if test="a_id_card != null">
						and a_id_card = #{a_id_card}
					</if>
					<if test="a_bank_number != null">
						and a_bank_number = #{a_bank_number}
					</if>
					<if test="a_bank_info != null">
						and a_bank_info = #{a_bank_info}
					</if>
					<if test="product_account != null">
						and product_account = #{product_account}
					</if>
					<if test="product_account_upper != null">
						and product_account_upper = #{product_account_upper}
					</if>
					<if test="category_name != null">
						and category_name = #{category_name}
					</if>
					<if test="product_deadline != null">
						and product_deadline = #{product_deadline}
					</if>
					<if test="a_data != null">
						and a_data = #{a_data}
					</if>
					<if test="b_address != null">
						and b_address = #{b_address}
					</if>
					<if test="b_name != null">
						and b_name = #{b_name}
					</if>
					<if test="end_of_date != null">
						and end_of_date = #{end_of_date}
					</if>
					<if test="expect_interest != null">
						and expect_interest = #{expect_interest}
					</if>
					<if test="act_end_of_date != null">
						and act_end_of_date = #{act_end_of_date}
					</if>
					<if test="create_user_id != null">
						and create_user_id = #{create_user_id}
					</if>
					<if test="create_user_name != null">
						and create_user_name = #{create_user_name}
					</if>
					<if test="create_user_dept_id != null">
						and create_user_dept_id = #{create_user_dept_id}
					</if>
					<if test="create_timestamp != null">
						and create_timestamp = #{create_timestamp}
					</if>
					<if test="last_update_user_id != null">
						and last_update_user_id = #{last_update_user_id}
					</if>
					<if test="last_update_timestamp != null">
						and last_update_timestamp = #{last_update_timestamp}
					</if>
					<if test="enable_flag != null">
						and enable_flag = #{enable_flag}
					</if>
				 	<if test="wms_inve_clerk_protocol_id != null and wms_inve_clerk_protocol_id == true">
		        				and wms_inve_clerk_protocol_id != #{wms_inve_clerk_protocol_id}
					</if>
		</where>
		order by wms_inve_clerk_protocol_id desc
	</select>
	
	<select id="getWmsInveRedeemProtocolByTransaId" parameterType="map" resultType="WmsInveClerkProtocol">
		select 
			wms_inve_clerk_protocol_id,
			prot_code,
			wms_inve_transa_id,
			wms_inve_redeem_id,
			is_order_extend,
			sign_place,
			date_format(begin_of_date,'%Y-%m-%d %H:%i:%s') as begin_of_date_str,
			begin_of_date,
			a_name,
			a_id_card,
			a_bank_number,
			a_bank_info,
			product_account,
			product_account_upper,
			category_name,
			product_deadline,
			a_data,
			b_address,
			b_name,
			date_format(end_of_date,'%Y-%m-%d %H:%i:%s') as end_of_date_str,
			end_of_date,
			expect_interest,
			date_format(act_end_of_date,'%Y-%m-%d %H:%i:%s') as act_end_of_date_str,
			act_end_of_date,
			create_user_id,
			create_user_name,
			create_user_dept_id,
			date_format(create_timestamp,'%Y-%m-%d %H:%i:%s') as create_timestamp_str,
			create_timestamp,
			last_update_user_id,
			date_format(last_update_timestamp,'%Y-%m-%d %H:%i:%s') as last_update_timestamp_str,
			last_update_timestamp,
			enable_flag,
			(select v.prot_version from wms_inve_clerk_protocol_version v where v.prot_type='1') as main_protocol_version,
			(select v.prot_version from wms_inve_clerk_protocol_version v where v.prot_type='2') as sub_protocol_version,
			(select v.prot_version from wms_inve_clerk_protocol_version v where v.prot_type='3') as inter_protocol_version,
			(select v.prot_version from wms_inve_clerk_protocol_version v where v.prot_type='4') as m2m_protocol_version,
			(select v.prot_version from wms_inve_clerk_protocol_version v where v.prot_type='5') as inter_protocol_merge_version,																					
			(select t.bel_salesman_id_id from wms_inve_transa t where t.wms_inve_transa_id = #{transaId}) as bel_salesman_id			
		from
			wms_inve_clerk_protocol 
		<where>
			wms_inve_transa_id = #{transaId }
			and product_account = #{productAccount }*10000
			and wms_inve_redeem_id is not null
			and enable_flag = '1'
		</where>	
		order by wms_inve_clerk_protocol_id desc
	</select>
	
	<select id="getWmsInveExtendProtocolByTransaId" parameterType="int" resultType="WmsInveClerkProtocol">
		select 
			wms_inve_clerk_protocol_id,
			prot_code,
			wms_inve_transa_id,
			is_order_extend,
			sign_place,
			date_format(begin_of_date,'%Y-%m-%d %H:%i:%s') as begin_of_date_str,
			begin_of_date,
			a_name,
			a_id_card,
			a_bank_number,
			a_bank_info,
			product_account,
			product_account_upper,
			category_name,
			product_deadline,
			a_data,
			b_address,
			b_name,
			date_format(end_of_date,'%Y-%m-%d %H:%i:%s') as end_of_date_str,
			end_of_date,
			expect_interest,
			date_format(act_end_of_date,'%Y-%m-%d %H:%i:%s') as act_end_of_date_str,
			act_end_of_date,
			create_user_id,
			create_user_name,
			create_user_dept_id,
			date_format(create_timestamp,'%Y-%m-%d %H:%i:%s') as create_timestamp_str,
			create_timestamp,
			last_update_user_id,
			date_format(last_update_timestamp,'%Y-%m-%d %H:%i:%s') as last_update_timestamp_str,
			last_update_timestamp,
			enable_flag,
			(select v.prot_version from wms_inve_clerk_protocol_version v where v.prot_type='1') as main_protocol_version,
			(select v.prot_version from wms_inve_clerk_protocol_version v where v.prot_type='2') as sub_protocol_version,
			(select v.prot_version from wms_inve_clerk_protocol_version v where v.prot_type='3') as inter_protocol_version,
			(select v.prot_version from wms_inve_clerk_protocol_version v where v.prot_type='4') as m2m_protocol_version,
			(select v.prot_version from wms_inve_clerk_protocol_version v where v.prot_type='5') as inter_protocol_merge_version,																								
			(select t.bel_salesman_id_id from wms_inve_transa t where t.wms_inve_transa_id = #{transaId}) as bel_salesman_id
		from
			wms_inve_clerk_protocol 
		<where>
			wms_inve_transa_id = #{transaId }
			and enable_flag = '1'
		</where>	
		order by wms_inve_clerk_protocol_id desc
	</select>
	
	<!-- 打印合同时 根据主键查询合同相关信息 -->
	<select id="getWmsInveClerkProtocolById" parameterType="int" resultType="java.util.HashMap">
		select
        				p1.wms_inve_clerk_protocol_id,
        				p1.wms_inve_redeem_id,
        				(select r.redeem_date from wms_inve_redeem r where r.wms_inve_redeem_id = p1.wms_inve_redeem_id) as redeem_date,
        				p1.prot_code,
        				
        				case 
        					when p1.prot_code is null then '暂无'
        				else
        					CONCAT(p1.prot_code,'-',date_format(p1.create_timestamp,'%m%d')) 
        				end as trans_code,
        				p1.prot_type,
        				p1.wms_inve_transa_id,
        				p1.is_order_extend,
        				p1.sign_place,
						date_format(p1.begin_of_date,'%Y') as year,
						date_format(p1.begin_of_date,'%m') as month,
						date_format(p1.begin_of_date,'%d') as day,
						date_format(p1.begin_of_date,'%Y-%m-%d') as begin_of_date,
						date_format(p1.begin_of_date,'%Y-%m-%d') as sign_date,
						date_format(p1.begin_of_date,'%Y 年 %m 月 %d 日') as sign_date_fm,						
        				p1.a_name,
        				p1.a_id_card,
        				p1.a_bank_number,
        				p1.a_bank_info,
        				TRUNCATE(IFNULL(p1.product_account,0)/10000,0) as bas_product_account,
        				CONCAT('￥',TRUNCATE(IFNULL(p1.product_account,0),0)) as product_account,
        				CONCAT(IFNULL(p1.product_account_upper,0),'万元整') as product_account_upper,
        				p1.category_name,
        				p1.product_deadline,
						concat(p1.product_deadline,'个月') as product_deadline_info,
        				p1.a_data,
        				p1.b_address,
        				p1.b_name,
        				date_format(p1.end_of_date,'%Y-%m-%d') as end_of_date,        				
         				concat(truncate(p1.expect_interest,1),'%') AS expect_interest,        				
        				p1.act_end_of_date,
        			 	date_format(ifnull(p1.act_end_of_date,p1.end_of_date), '%Y') AS end_year,
 						date_format(ifnull(p1.act_end_of_date,p1.end_of_date), '%m') AS end_month,
 						date_format(ifnull(p1.act_end_of_date,p1.end_of_date), '%d') AS end_day,
        				'身份证，银行卡，金额' as concrete_resource,
        				CASE when 
        					p3.category_interest_pay_method =1 then '月返' 
						ELSE '年返'
						end as product_deadline_name,
						CASE when 
        					p3.category_interest_pay_method =1 then '月付' 
						ELSE '年付'
						end as category_interest_pay_method_name,
						p3.wms_inve_pruduct_category_id,
        				p1.sign_place_postcode,
						p1.a_contact_address,
        				(select c.personnel_id_card from wms_inve_clerk_company_creditor c where c.creditor_type = 1) as intran_id,			
						(select c.personnel_name from wms_inve_clerk_company_creditor c where c.creditor_type = 1) as intran_name,
						(select c.contact_address from wms_inve_clerk_company_creditor c where c.creditor_type = 1) as intran_address,
						(select c.card_no from wms_inve_clerk_company_creditor c where c.creditor_type = 1) as card_no,			
						(select c.bank_info from wms_inve_clerk_company_creditor c where c.creditor_type = 1) as bank_info,					
						format(p1.product_account,2) as sum_cre_pledge_mon,
						p1.product_account as sum_cre_pledge_mon_lower,
						(select p.personnel_name from wms_inve_transa t,pm_personnel p where t.wms_inve_transa_id = p1.wms_inve_transa_id and t.bel_salesman_id_id = p.personnel_id) as salesman_name,
						(select p.personnel_shortCode from pm_personnel p where p1.bel_salesman_id = p.personnel_id) as salesman_shortCode,						  									  								  
      					(select r.region_protocol_b_name from wms_inve_clerk_region r where r.region_number = (select p.personnel_regionNumber from pm_personnel p where p.personnel_id = p1.create_user_id)) as r_b_name,
						(select r.region_protocol_b_area from wms_inve_clerk_region r where r.region_number = (select p.personnel_regionNumber from pm_personnel p where p.personnel_id = p1.create_user_id)) as r_b_area,      					
      					(select count(1) from wms_inve_pruduct_rebate_way r where r.wms_inve_pruduct_category_id = p3.wms_inve_pruduct_category_id) as is_reward_product,      		
      		      		(select p.personnel_shortCode from pm_personnel p where p1.create_user_id = p.personnel_id) as create_user_shortCode,
      		      		ifnull(p1.main_protocol_version,'') as main_protocol_version,
						ifnull(p1.sub_protocol_version,'') as sub_protocol_version,
						ifnull(p1.inter_protocol_version,'') as inter_protocol_version,
						ifnull(p1.inter_protocol_merge_version,'') as inter_protocol_merge_version,						
						ifnull(p1.m2m_protocol_version,'') as m2m_protocol_version,
						ifnull(p1.customer_signature_path,'') as customer_signature_path
      		from
        		wms_inve_clerk_protocol p1
        	left join 
        		wms_inve_transa_prod p2
        	on p1.wms_inve_transa_id = p2.wms_inve_transa_id
        	left join 
        		wms_inve_pruduct_category p3
        	on p2.wms_inve_pruduct_category_id = p3.wms_inve_pruduct_category_id
        	<where>
				<if test="wms_inve_transa_id != null">
					and p1.wms_inve_transa_id = #{wms_inve_transa_id}
				</if>
				<if test="wms_inve_clerk_protocol_id != null">
        			and p1.wms_inve_clerk_protocol_id = #{wms_inve_clerk_protocol_id}
				</if>
		</where>
	</select>
	
	<!-- 查询协议记录条数 -->
	<select id="findCountProtocol" parameterType="map" resultType="int">
		SELECT
			count(1) as count
		FROM wms_inve_transa t1 , wms_inve_transa_prod t2 ,wms_inve_clerk_protocol t3,pm_personnel p		
		
		<where>
			t3.wms_inve_transa_id = t2.wms_inve_transa_id 
			and t3.wms_inve_transa_id = t1.wms_inve_transa_id
			and t1.bel_salesman_id_id = p.personnel_id
			AND t3.enable_flag = 1
			<if test="bill_code != null">
				and t1.bill_code = #{bill_code}
			</if>
				<if test="cus_name != null">
				and t1.cus_name like #{cus_name}
			</if>
			
			<if test="id_card != null">
				and t1.id_card=#{id_card}
			</if>
			
			<if test="mobile_phone != null">
				and t1.mobile_phone=#{mobile_phone}
			</if>

			<if test="category_name != null">
				and t2.wms_inve_pruduct_category_id = #{category_name}
			</if>
			
			<if test="prot_code != null">
				and t3.prot_code = #{prot_code}
			</if>
 			
 			<if test="salesman_name != null">
            	and (t1.salesman_name =#{salesman_name} or t1.salesman_shortcode=#{salesman_name})
            </if>

			<if test="begin_of_date_begin != null">
				and date_format(t3.begin_of_date,'%Y-%m-%d')  &gt;= #{begin_of_date_begin}
			
			</if>
			<if test="begin_of_date_end !=null">
				and date_format(t3.begin_of_date,'%Y-%m-%d')  &lt;=#{begin_of_date_end}
			</if>
		
  			<if test="end_of_date_begin != null">
				and date_format(t3.end_of_date,'%Y-%m-%d')  &gt;= #{end_of_date_begin}
			
			</if>
			<if test="end_of_date_end !=null">
				and date_format(t3.end_of_date,'%Y-%m-%d')  &lt;=#{end_of_date_end}
			</if>
            	
			AND (1=2
			<if test="salesman_id !=null">
				OR t1.bel_salesman_id_id = #{salesman_id}
			</if>

			<if test="salesman_dept_id !=null">
				OR t1.bel_salesman_dept_id = #{salesman_dept_id}
			</if>
			
			<if test="deptIds !=null">
				OR t1.bel_salesman_dept_id in
				<foreach collection="deptIds" item="dept_id" index="index"
					open="(" separator="," close=")">
					#{dept_id}
				</foreach>
			</if>
			
			<if test="deptIds_user_id !=null">
				OR FIND_IN_SET(t1.bel_salesman_dept_id,getMenuData(${deptIds_user_id},${deptIds_menu}))
			</if>
			
			<if test="personnel_id != null">
				OR p.personnel_regionNumber = (select personnel_regionNumber from pm_personnel where personnel_id = #{personnel_id})
			</if>

			<if test="super_user !=null">
				OR 1=#{super_user}
			</if>
			)
		</where>
	</select>
	
	<select id="getWmsInveClerkProtocolList" parameterType="map" resultType="java.util.HashMap">
		SELECT			
			t1.bill_code,
			t1.id_card,
			t1.cus_name,
			t1.mobile_phone,
			t1.wms_inve_transa_id,
			t1.wms_inve_customer_id,
			t1.data_status,
			t2.wms_inve_transa_prod_id,
			t2.category_name,
			t2.product_deadline,
			t3.product_account/10000 as product_account,
			t2.wms_inve_pruduct_category_id,
			ifnull(t3.prot_code,'') as prot_code,
			t3.prot_type,
			t3.wms_inve_clerk_protocol_id,
			date_format(t3.begin_of_date,'%Y-%m-%d') as begin_of_date,
			date_format(t3.end_of_date,'%Y-%m-%d') as end_of_date,
			date_format(t3.act_end_of_date,'%Y-%m-%d') as act_end_of_date,
			t3.protocol_type,
			CONCAT(t1.salesman_name,"/",(select personnel_shortCode from pm_personnel where personnel_id=t1.salesman_id)) as salesman_name,
			<!-- 			
				(select max(t.wms_inve_transa_crepkg_id) from wms_inve_transa_crepkg t where t.wms_inve_clerk_protocol_id = t3.wms_inve_clerk_protocol_id and t.wms_inve_transa_id = t3.wms_inve_transa_id and t.enable_flag=1) as isMatch			
 			-->			
 			(select count(1) from wms_inve_clerk_protocol_transa_crepkg t where t.wms_inve_clerk_protocol_id = t3.wms_inve_clerk_protocol_id and t.wms_inve_transa_id = t3.wms_inve_transa_id) as isMatch,			
			(select count(1) from wms_inve_transa_crepkg c1,wms_inve_credit_package c2 where c1.wms_inve_credit_package_id=c2.wms_inve_credit_package_id and c1.wms_inve_transa_id = t3.wms_inve_transa_id and ifnull(c2.act_end_date,c2.crepg_end_date)&lt;CURDATE()  and c1.enable_flag = 1 and c1.acl_state = 1) as is_over_date,		
			(select c.has_paper_protocol from wms_inve_pruduct_category c where c.wms_inve_pruduct_category_id = t2.wms_inve_pruduct_category_id) as has_paper_protocol		
		FROM wms_inve_transa t1 , wms_inve_transa_prod t2 ,wms_inve_clerk_protocol t3,pm_personnel p		
		<where>
			t3.wms_inve_transa_id = t2.wms_inve_transa_id 
			and t3.wms_inve_transa_id = t1.wms_inve_transa_id
			and t1.bel_salesman_id_id = p.personnel_id
			and t3.enable_flag =1
			<if test="bill_code != null">
				and t1.bill_code = #{bill_code}
			</if>
			<if test="cus_name != null">
				and t1.cus_name like #{cus_name}
			</if>
			
			<if test="id_card != null">
				and t1.id_card=#{id_card}
			</if>
			
			<if test="mobile_phone != null">
				and t1.mobile_phone=#{mobile_phone}
			</if>

			<if test="category_name != null">
				and t2.wms_inve_pruduct_category_id = #{category_name}
			</if>
			
			<if test="prot_code != null">
				and t3.prot_code = #{prot_code}
			</if>
 			
 			<if test="salesman_name != null">
            	and (t1.salesman_name =#{salesman_name} or t1.salesman_shortcode=#{salesman_name})
            </if>

			<if test="begin_of_date_begin != null">
				and date_format(t3.begin_of_date,'%Y-%m-%d')  &gt;= #{begin_of_date_begin}
			
			</if>
			<if test="begin_of_date_end !=null">
				and date_format(t3.begin_of_date,'%Y-%m-%d')  &lt;=#{begin_of_date_end}
			</if>

			<choose>
				<when test="end_of_date_begin != null and end_of_date_end != null">
					and date_format(t3.act_end_of_date,'%Y-%m-%d') &gt;= #{end_of_date_begin}
					and date_format(t3.act_end_of_date,'%Y-%m-%d') &lt;=#{end_of_date_end}
				</when>
				<when test="end_of_date_begin != null and end_of_date_end == null">
					and date_format(ifnull(t3.act_end_of_date,'9999-12-31'),'%Y-%m-%d') &gt;= #{end_of_date_begin}
				</when>
				<when test="end_of_date_begin == null and end_of_date_end != null">
					and date_format(t3.act_end_of_date,'%Y-%m-%d') &lt;=#{end_of_date_end}
				</when>
			</choose>
			
			AND (1=2
			<if test="salesman_id !=null">
				OR t1.bel_salesman_id_id = #{salesman_id}
			</if>

			<if test="salesman_dept_id !=null">
				OR t1.bel_salesman_dept_id = #{salesman_dept_id}
			</if>
			
			<if test="deptIds !=null">
				OR t1.bel_salesman_dept_id in
				<foreach collection="deptIds" item="dept_id" index="index"
					open="(" separator="," close=")">
					#{dept_id}
				</foreach>
			</if>
			
			<if test="deptIds_user_id !=null">
				OR FIND_IN_SET(t1.bel_salesman_dept_id,getMenuData(${deptIds_user_id},${deptIds_menu}))
			</if>
			
			<if test="personnel_id != null">
				OR p.personnel_regionNumber = (select personnel_regionNumber from pm_personnel where personnel_id = #{personnel_id})
			</if>

			<if test="super_user !=null">
				OR 1=#{super_user}
			</if>
			)
		</where>
		
		ORDER BY t1.bill_code DESC,t3.create_timestamp ASC
		<if test="offset != null and pagesize !=null">
			LIMIT ${offset} , ${pagesize}
		</if>
	</select>
	
	
	<select id="getWmsInveClerkProtocolByEntity" parameterType="WmsInveClerkProtocol" resultType="WmsInveClerkProtocol">
		select 
				wms_inve_clerk_protocol_id,
				prot_code,
				wms_inve_transa_id,
				wms_inve_redeem_id,
				is_order_extend,
				sign_place,
				date_format(begin_of_date,'%Y-%m-%d %H:%i:%s') as begin_of_date_str,
				begin_of_date,
				a_name,
				a_id_card,
				a_bank_number,
				a_bank_info,
				product_account,
				product_account_upper,
				category_name,
				product_deadline,
				a_data,
				b_address,
				b_name,
				date_format(end_of_date,'%Y-%m-%d %H:%i:%s') as end_of_date_str,
				end_of_date,
				expect_interest,
				date_format(act_end_of_date,'%Y-%m-%d %H:%i:%s') as act_end_of_date_str,
				act_end_of_date,
				create_user_id,
				create_user_name,
				create_user_dept_id,
				date_format(create_timestamp,'%Y-%m-%d %H:%i:%s') as create_timestamp_str,
				create_timestamp,
				last_update_user_id,
				date_format(last_update_timestamp,'%Y-%m-%d %H:%i:%s') as last_update_timestamp_str,
				last_update_timestamp,
				enable_flag
		from wms_inve_clerk_protocol
		<where>
			enable_flag=1
			<if test="wms_inve_transa_id != null">
				and wms_inve_transa_id = #{wms_inve_transa_id}
			</if>
			<if test="wms_inve_redeem_id != null">
				and wms_inve_redeem_id = #{wms_inve_redeem_id}
			</if>
			<if test="product_account != null">
				and product_account = #{product_account}
			</if>
			and act_end_of_date is null
		</where>
	</select>
	<!-- 根据上单主键和赎回主键查询合同信息  生成一条公益合同记录 -->
	<select id="getWmsInveClerkPublicProtocol" parameterType="WmsInveClerkProtocol" resultType="WmsInveClerkProtocol">
		select 
				p.prot_code,
				p.wms_inve_transa_id,
				p.sign_place,
				p.prot_type,
				p.sign_place_postcode,
				p.a_contact_address,
				p.a_name,
				p.a_id_card,
				p.a_bank_number,
				p.a_bank_info,
				p.product_account,
				p.product_account_upper,
				p.a_data,
				p.b_address,
				p.b_name,
				(select t.bel_salesman_id_id from wms_inve_transa t where t.wms_inve_transa_id = p.wms_inve_transa_id) as bel_salesman_id,
				(select v.prot_version from wms_inve_clerk_protocol_version v where v.prot_type='1') as main_protocol_version,
				(select v.prot_version from wms_inve_clerk_protocol_version v where v.prot_type='2') as sub_protocol_version,
				(select v.prot_version from wms_inve_clerk_protocol_version v where v.prot_type='3') as inter_protocol_version,
				(select v.prot_version from wms_inve_clerk_protocol_version v where v.prot_type='4') as m2m_protocol_version,
				(select v.prot_version from wms_inve_clerk_protocol_version v where v.prot_type='5') as inter_protocol_merge_version,																									
				(select t.customer_signature_path from wms_inve_transa t where t.wms_inve_transa_id = p.wms_inve_transa_id) as customer_signature_path		
		from wms_inve_clerk_protocol p
		<where>
			p.enable_flag=1
			<if test="wms_inve_transa_id != null">
				and p.wms_inve_transa_id = #{wms_inve_transa_id}
			</if>
			<if test="wms_inve_redeem_id != null">
				and p.wms_inve_redeem_id = #{wms_inve_redeem_id}
			</if>
			<if test="product_account != null">
				and p.product_account = #{product_account}
			</if>
			and p.act_end_of_date is null
		</where>
	</select>
	
	<!-- 更新柜员合同表 -->
	<update id="updateProtocolActEndOfDateById" parameterType="WmsInveClerkProtocol">
		update wms_inve_clerk_protocol
		SET			
			act_end_of_date = NOW()
	    where
        	wms_inve_clerk_protocol_id = #{wms_inve_clerk_protocol_id}
	</update>
	
	<!-- 更新原柜员合同表实际到期日-->
	<update id="updateProtocolActEndOfDateByParams" parameterType="map">
		update wms_inve_clerk_protocol
		SET			
			act_end_of_date = #{act_end_of_date}
	    where
        	wms_inve_clerk_protocol_id = #{wms_inve_clerk_protocol_id}
	</update>
	
		<!-- 更新公益合同表实际到期日-->
	<update id="updatePubProtocolActEndOfDateById" parameterType="map">
		update wms_inve_clerk_protocol
		SET			
			act_end_of_date = #{act_end_of_date}
	    where
        	wms_inve_transa_id = #{wms_inve_transa_id}
        	and enable_flag = 1
        	and prot_type = 1
        	and act_end_of_date is null
	</update>
	
	<!-- 上单表主键 查询 返回柜员协议表实体   生成prot_code -->
	<select id="getWmsInveClerkProtocolByTransaIdWithCode" parameterType="int" resultType="WmsInveClerkProtocol">
		SELECT
			t.wms_inve_transa_id,	
			t.contract_signing_type as protocol_type,	
			concat(r.region_protocol_prefix,(select  getClerkProcCode('WMS_INVE_PROTOCOL_CODE')))as prot_code,
			r.region_protocol_area as sign_place,
			r.region_postcode	as sign_place_postcode,
			t.date_of_payment as begin_of_date,			
			t.cus_name as a_name,
			t.id_card as a_id_card,
			t.contact_address as a_contact_address,
			p.card_no as a_bank_number, 
			concat(p.bank_of_deposit,
					' ',(SELECT value_meaning FROM wms_sys_dict_data WHERE wms_sys_dict_id = 72 and value_code = p.bank_of_deposit_pro),
					' ',(SELECT value_meaning FROM wms_sys_dict_data WHERE wms_sys_dict_id = 73 AND value_code = p.bank_of_deposit_city),
					' ',p.bank_branch) as a_bank_info,				
			t.product_total_count_lower as product_account,
			t.product_total_count_upper as product_account_upper,
			p.category_name,
			p.product_deadline,			
			'身份证，银行卡，金额' as a_data,					
			t.create_user_name as b_name,			
			r.region_protocol_b_area as b_address,
			p.product_interest as expect_interest,
			t.bel_salesman_id_id as bel_salesman_id,
			t.customer_signature_path,
			(select v.prot_version from wms_inve_clerk_protocol_version v where v.prot_type='1') as main_protocol_version,
			(select v.prot_version from wms_inve_clerk_protocol_version v where v.prot_type='2') as sub_protocol_version,
			(select v.prot_version from wms_inve_clerk_protocol_version v where v.prot_type='3') as inter_protocol_version,
			(select v.prot_version from wms_inve_clerk_protocol_version v where v.prot_type='4') as m2m_protocol_version,
			(select v.prot_version from wms_inve_clerk_protocol_version v where v.prot_type='5') as inter_protocol_merge_version																					
		FROM
			wms_inve_transa t,wms_inve_transa_prod p,pm_personnel pm,wms_inve_clerk_region r
		WHERE			
			t.wms_inve_transa_id = p.wms_inve_transa_id	
			and p.create_user_id = pm.personnel_id
			and r. region_number =  pm.personnel_regionNumber		
			and t.wms_inve_transa_id=#{wms_inve_transa_id}
	</select>
	
	<!-- 上单表主键 查询 返回柜员协议表实体   生成prot_code -->
	<select id="getWmsInveClerkProtocolByTransaIdWithoutCode" parameterType="int" resultType="WmsInveClerkProtocol">
		SELECT
			t.wms_inve_transa_id,	
			t.contract_signing_type as protocol_type,	
			null as prot_code,
			r.region_protocol_area as sign_place,
			r.region_postcode	as sign_place_postcode,
			t.date_of_payment as begin_of_date,			
			t.cus_name as a_name,
			t.id_card as a_id_card,
			t.contact_address as a_contact_address,
			p.card_no as a_bank_number, 
			concat(p.bank_of_deposit,
					' ',(SELECT value_meaning FROM wms_sys_dict_data WHERE wms_sys_dict_id = 72 and value_code = p.bank_of_deposit_pro),
					' ',(SELECT value_meaning FROM wms_sys_dict_data WHERE wms_sys_dict_id = 73 AND value_code = p.bank_of_deposit_city),
					' ',p.bank_branch) as a_bank_info,			
			t.product_total_count_lower as product_account,
			t.product_total_count_upper as product_account_upper,
			p.category_name,
			p.product_deadline,			
			'身份证，银行卡，金额' as a_data,					
			t.create_user_name as b_name,			
			r.region_protocol_b_area as b_address,
			p.product_interest as expect_interest,
			t.bel_salesman_id_id as bel_salesman_id,
			t.customer_signature_path,
			(select v.prot_version from wms_inve_clerk_protocol_version v where v.prot_type='1') as main_protocol_version,
			(select v.prot_version from wms_inve_clerk_protocol_version v where v.prot_type='2') as sub_protocol_version,
			(select v.prot_version from wms_inve_clerk_protocol_version v where v.prot_type='3') as inter_protocol_version,
			(select v.prot_version from wms_inve_clerk_protocol_version v where v.prot_type='4') as m2m_protocol_version,
			(select v.prot_version from wms_inve_clerk_protocol_version v where v.prot_type='5') as inter_protocol_merge_version																
		FROM
			wms_inve_transa t,wms_inve_transa_prod p,pm_personnel pm,wms_inve_clerk_region r
		WHERE			
			t.wms_inve_transa_id = p.wms_inve_transa_id	
			and p.create_user_id = pm.personnel_id
			and r. region_number =  pm.personnel_regionNumber		
			and t.wms_inve_transa_id=#{wms_inve_transa_id}
	</select>
	
	<update id="updateProtocolCode" parameterType="map" >
		update
			wms_inve_clerk_protocol cp
		set
			prot_code = CONCAT((select region_protocol_prefix from wms_inve_clerk_region where region_number = #{personnel_regionNumber}), getClerkProcCode('WMS_INVE_PROTOCOL_CODE')),
			protocol_type = #{protocol_type },
			main_protocol_version = #{main_protocol_version},
			sub_protocol_version = #{sub_protocol_version},
			inter_protocol_version = #{inter_protocol_version},
			inter_protocol_merge_version = #{inter_protocol_merge_version},			
			m2m_protocol_version = #{m2m_protocol_version},
			customer_signature_path = #{customer_signature_path},
			last_update_user_id = #{userId },
			last_update_timestamp = #{lastUpdateTime }
		where
			wms_inve_clerk_protocol_id = #{protocolId }
	</update>
		
	<select id="getListByWmsInveClerkProtocol" parameterType="WmsInveClerkProtocol" resultType="WmsInveClerkProtocol">
		select 
				p1.wms_inve_clerk_protocol_id,
				p1.prot_code,
				p1.wms_inve_transa_id,
				p1.protocol_type,
				p1.is_order_extend,
				p1.sign_place,
				p1.sign_place_postcode,
				date_format(p1.begin_of_date,'%Y-%m-%d %H:%i:%s') as begin_of_date_str,
				p1.begin_of_date,
				t.cus_name as a_name,
				t.id_card as a_id_card,
				t.contact_address as a_contact_address,
				p2.card_no as a_bank_number, 
				concat(p2.bank_of_deposit,
						' ',(SELECT value_meaning FROM wms_sys_dict_data WHERE wms_sys_dict_id = 72 and value_code = p2.bank_of_deposit_pro),
						' ',(SELECT value_meaning FROM wms_sys_dict_data WHERE wms_sys_dict_id = 73 AND value_code = p2.bank_of_deposit_city),
						' ',p2.bank_branch) as a_bank_info,
				p1.product_account,
				p1.product_account_upper,
				p1.category_name,
				p1.product_deadline,
				p1.a_data,
				p1.b_address,
				p1.b_name,
				date_format(p1.end_of_date,'%Y-%m-%d %H:%i:%s') as end_of_date_str,
				p1.end_of_date,
				p1.expect_interest,
				date_format(p1.act_end_of_date,'%Y-%m-%d %H:%i:%s') as act_end_of_date_str,
				p1.act_end_of_date,
				p1.create_user_id,
				p1.create_user_name,
				p1.create_user_dept_id,
				date_format(p1.create_timestamp,'%Y-%m-%d %H:%i:%s') as create_timestamp_str,
				p1.create_timestamp,
				p1.last_update_user_id,
				date_format(p1.last_update_timestamp,'%Y-%m-%d %H:%i:%s') as last_update_timestamp_str,
				p1.last_update_timestamp,
				p1.enable_flag,
				t.bel_salesman_id_id as bel_salesman_id,
				t.customer_signature_path
		from
			wms_inve_clerk_protocol p1,wms_inve_transa t,wms_inve_transa_prod p2
		where
			p1.wms_inve_transa_id = t.wms_inve_transa_id
			and t.wms_inve_transa_id = p2.wms_inve_transa_id	
			and p1.enable_flag = 1	
			and p1.wms_inve_transa_id = #{wms_inve_transa_id}
		order by p1.wms_inve_clerk_protocol_id desc
	</select>
	
	<!-- 根据原单据的上单主键查询柜员协议表中预约续期的协议 -->
	<select id="getWmsInveClerkProtocolByWmsInveTransaIdAndIsOrderExtend" parameterType="map" resultType="WmsInveClerkProtocol">
		SELECT 
			wms_inve_clerk_protocol_id,
			prot_code,
			wms_inve_transa_id,
			wms_inve_redeem_id,
			protocol_type,
			is_order_extend,
			sign_place,
			sign_place_postcode,
			begin_of_date,
			a_name,
			a_id_card,
			a_contact_address,
			a_bank_number,
			a_bank_info,
			product_account,
			product_account_upper,
			category_name,
			product_deadline,
			a_data,
			b_address,
			b_name,
			end_of_date,
			expect_interest,
			act_end_of_date,
			create_user_id,
			create_user_name,
			create_user_dept_id,
			create_timestamp,
			last_update_user_id,
			last_update_timestamp,
			enable_flag,
			finnished_type,
			(select t.bel_salesman_id_id from wms_inve_transa t where t.wms_inve_transa_id = #{wms_inve_transa_id}) as bel_salesman_id
		FROM
			wms_inve_clerk_protocol
		WHERE
			wms_inve_transa_id = #{wms_inve_transa_id}
		AND
			is_order_extend = #{is_order_extend}
		and enable_flag = 1
	</select>
	
	
	<!-- 失效柜员协议表单据 -->
	<update id="disableWmsinveclerkprotocol" parameterType="WmsInveClerkProtocol">
		update wms_inve_clerk_protocol
		<set>					
			<if test="enable_flag != null">
				 enable_flag = #{enable_flag},
			</if>
			<if test="product_account != null">
				 product_account = #{product_account},
			</if>
	   </set>
	   <where> 
			<if test="wms_inve_transa_id != null">
				and wms_inve_transa_id = #{wms_inve_transa_id}
			</if>
			<if test="wms_inve_redeem_id != null">
				and wms_inve_redeem_id = #{wms_inve_redeem_id}
			</if>
		</where>
	</update>
	
	<update id="deleteClerkProtocolByWmsInveTransaIdAndIsOrderExtend" parameterType="WmsInveClerkProtocol">
		UPDATE 
			wms_inve_clerk_protocol
		SET
			enable_flag = #{enable_flag}
		WHERE
			wms_inve_transa_id = #{wms_inve_transa_id}
		AND
			is_order_extend = #{is_order_extend}
	</update>
	
	<select id="getWmsInveClaimsInfos" parameterType="map" resultType="map">
		SELECT
			t1.wms_inve_transa_id,
			t1.wms_inve_clerk_protocol_id,
			t1.wms_inve_clerk_protocol_transa_crepkg_id,
			case 
				when t2.prot_code is null then '暂无'
			else 
				CONCAT(t2.prot_code,'-',DATE_FORMAT(t1.create_timestamp,'%m%d')) 
			end AS prot_code,
			DATE_FORMAT(t1.create_timestamp,'%Y-%m-%d') AS date_str
		FROM
			wms_inve_clerk_protocol_transa_crepkg t1,
			wms_inve_clerk_protocol t2
		WHERE
			t1.wms_inve_clerk_protocol_id = t2.wms_inve_clerk_protocol_id
		AND
			t1.wms_inve_transa_id = #{wms_inve_transa_id}
		AND
			t1.wms_inve_clerk_protocol_id = #{wms_inve_clerk_protocol_id}
	</select>
	
	<select id="getWmsInveClerkProtocolByWmsInveTransaId" parameterType="map" resultType="WmsInveClerkProtocol">
		SELECT 
			wms_inve_clerk_protocol_id,
			prot_code,
			wms_inve_transa_id,
			wms_inve_redeem_id,
			protocol_type,
			is_order_extend,
			sign_place,
			sign_place_postcode,
			begin_of_date,
			a_name,
			a_id_card,
			a_contact_address,
			a_bank_number,
			a_bank_info,
			product_account,
			product_account_upper,
			category_name,
			product_deadline,
			a_data,
			b_address,
			b_name,
			end_of_date,
			expect_interest,
			act_end_of_date,
			create_user_id,
			create_user_name,
			create_user_dept_id,
			create_timestamp,
			last_update_user_id,
			last_update_timestamp,
			enable_flag,
			finnished_type
		FROM
			wms_inve_clerk_protocol
		WHERE
			wms_inve_transa_id = #{wms_inve_transa_id}
		AND
			is_order_extend != 1
	</select>
	
	<select id="getWmsInveClerkProtocolByTransaIdAndAccount" parameterType="map" resultType="WmsInveClerkProtocol">
		select 
			* 
		from 
			wms_inve_clerk_protocol cp 
		where cp.wms_inve_transa_id = #{transaId } 
			and cp.product_account = #{productAccount } 
			and IFNULL(cp.is_order_extend,0) = '0' 
			and enable_flag = '1'
		order by cp.wms_inve_clerk_protocol_id desc
	</select>
	
	<select id="getOldWmsInveClerkProtocolByWmsInveTransaId" parameterType="int" resultType="WmsInveClerkProtocol">
		SELECT 
			wms_inve_clerk_protocol_id,
			prot_code,
			wms_inve_transa_id,
			wms_inve_redeem_id,
			protocol_type,
			is_order_extend,
			sign_place,
			sign_place_postcode,
			begin_of_date,
			a_name,
			a_id_card,
			a_contact_address,
			a_bank_number,
			a_bank_info,
			product_account,
			product_account_upper,
			category_name,
			product_deadline,
			a_data,
			b_address,
			b_name,
			end_of_date,
			expect_interest,
			act_end_of_date,
			create_user_id,
			create_user_name,
			create_user_dept_id,
			create_timestamp,
			last_update_user_id,
			last_update_timestamp,
			enable_flag,
			finnished_type
		FROM
			wms_inve_clerk_protocol
		WHERE
			wms_inve_transa_id = #{wms_inve_transa_id}
		AND
			enable_flag = 1
		order by wms_inve_clerk_protocol_id desc
		limit 0,1
	</select>
	
	<!-- 根据上单表主键获取柜员协议信息 -->
	<select id="findWmsInveClerkProtocolByInveTransaId" parameterType="int" resultType="WmsInveClerkProtocol">
		SELECT 
			wms_inve_clerk_protocol_id,
			prot_code,
			wms_inve_transa_id,
			wms_inve_redeem_id,
			protocol_type,
			is_order_extend,
			sign_place,
			sign_place_postcode,
			begin_of_date,
			a_name,
			a_id_card,
			a_contact_address,
			a_bank_number,
			a_bank_info,
			product_account,
			product_account_upper,
			category_name,
			product_deadline,
			a_data,
			b_address,
			b_name,
			end_of_date,
			expect_interest,
			act_end_of_date,
			create_user_id,
			create_user_name,
			create_user_dept_id,
			create_timestamp,
			last_update_user_id,
			last_update_timestamp,
			enable_flag,
			finnished_type
		FROM
			wms_inve_clerk_protocol
		WHERE
			wms_inve_transa_id = #{wms_inve_transa_id}
		and
			enable_flag = 1
	</select>
	
	<select id="getClerkProtocolByWmsInveTransaId" parameterType="int" resultType="WmsInveClerkProtocol">
		SELECT 
			wms_inve_clerk_protocol_id,
			prot_code,
			wms_inve_transa_id,
			wms_inve_redeem_id,
			protocol_type,
			is_order_extend,
			sign_place,
			sign_place_postcode,
			begin_of_date,
			a_name,
			a_id_card,
			a_contact_address,
			a_bank_number,
			a_bank_info,
			product_account,
			product_account_upper,
			category_name,
			product_deadline,
			a_data,
			b_address,
			b_name,
			end_of_date,
			expect_interest,
			act_end_of_date,
			create_user_id,
			create_user_name,
			create_user_dept_id,
			create_timestamp,
			last_update_user_id,
			last_update_timestamp,
			enable_flag,
			finnished_type
		FROM
			wms_inve_clerk_protocol
		WHERE
			wms_inve_transa_id = #{wms_inve_transa_id}
		AND
			(IFNULL(is_order_extend,0) != 1 AND wms_inve_redeem_id IS NULL)
		and
			enable_flag = 1
	</select>
	
	<!-- 修改柜员合同表 客户收益卡信息-->
	<update id="updateWmsinveclerkprotocolBankInfo" parameterType="map">
		update wms_inve_clerk_protocol
		set					
			a_bank_number = #{a_bank_number},
			a_bank_info = concat(#{bank_of_deposit},
					' ',(SELECT value_meaning FROM wms_sys_dict_data WHERE wms_sys_dict_id = 72 and value_code = #{bank_of_deposit_pro}),
					' ',(SELECT value_meaning FROM wms_sys_dict_data WHERE wms_sys_dict_id = 73 AND value_code = #{bank_of_deposit_city}),
					' ',#{bank_branch})
	   	where
			 wms_inve_transa_id = #{wms_inve_transa_id}
	</update>
	
	<select id="getClerkProtocolByWmsInveTransaIdToWmsInveTransa" parameterType="int" resultType="map">
		select
			financial_bill_code as prot_code
		from
			wms_inve_transa
		where
			wms_inve_transa_id = #{wms_inve_transa_id}
	</select>
	
	<!-- 查询是否有重复的合同编号 -->
	<select id="getClerkProtocolProtCodeCount" parameterType="java.lang.String" resultType="int">
		select count(wms_inve_clerk_protocol_id) as count
		from wms_inve_clerk_protocol
		<where>
			1=1
<!-- 			<if test="prot_code != null"> -->
				and prot_code = #{prot_code}
<!-- 			</if> -->
		</where>
	</select>
	
	<select id="getCanBePublicOrCurrentProtocolList" resultType="WmsInveClerkProtocol">
		SELECT
			p1.wms_inve_clerk_protocol_id,
			p1.prot_code,
			p1.wms_inve_transa_id,
			p1.protocol_type,
			p1.sign_place,
			p1.sign_place_postcode,
			p1.begin_of_date,
			p1.product_deadline,
			p1.a_name,
			p1.a_id_card,
			p1.a_contact_address,
			p1.a_bank_number,
			p1.a_bank_info,
			p1.product_account,
			p1.product_account_upper,
			p1.a_data,
			p1.b_address,
			p1.b_name,
			date_format(p2.end_of_date, '%Y-%m-%d') AS end_of_date_str,			
			t.bel_salesman_id_id as bel_salesman_id,
			t.customer_signature_path,
			(select v.prot_version from wms_inve_clerk_protocol_version v where v.prot_type='1') as main_protocol_version,
			(select v.prot_version from wms_inve_clerk_protocol_version v where v.prot_type='2') as sub_protocol_version,
			(select v.prot_version from wms_inve_clerk_protocol_version v where v.prot_type='3') as inter_protocol_version,
			(select v.prot_version from wms_inve_clerk_protocol_version v where v.prot_type='5') as inter_protocol_merge_version,																
			(select v.prot_version from wms_inve_clerk_protocol_version v where v.prot_type='4') as m2m_protocol_version	
		FROM
			(
				SELECT
					max(
						p.wms_inve_clerk_protocol_id
					) AS wms_inve_clerk_protocol_id,
					p.wms_inve_transa_id,
					max(t.wms_inve_transa_protocol_id) as wms_inve_transa_protocol_id
				FROM
					wms_inve_clerk_protocol p,wms_inve_transa_protocol t
				WHERE
					p.wms_inve_transa_id = t.wms_inve_transa_id
				AND p.act_end_of_date IS NULL
				GROUP BY
					p.wms_inve_transa_id
			) rs,
			wms_inve_clerk_protocol p1,
			wms_inve_transa t,
			wms_inve_transa_protocol p2
		WHERE
			rs.wms_inve_clerk_protocol_id = p1.wms_inve_clerk_protocol_id
		AND rs.wms_inve_transa_id = t.wms_inve_transa_id
		AND rs.wms_inve_transa_protocol_id = p2.wms_inve_transa_protocol_id
		AND t.data_status = 4
		</select>
	
		<insert id="saveWmsInveClerkProtocol" parameterType="WmsInveClerkProtocol" useGeneratedKeys="true" keyProperty="wms_inve_clerk_protocol_id">
		INSERT INTO wms_inve_clerk_protocol
		(
				wms_inve_clerk_protocol_id,
				prot_code,
				prot_type,
				wms_inve_transa_id,				
				wms_inve_redeem_id,				
				protocol_type,
				is_order_extend,
				sign_place,				
				sign_place_postcode,
				begin_of_date,
				a_name,
				a_id_card,
				a_contact_address,
				a_bank_number,
				a_bank_info,
				product_account,
				product_account_upper,
				category_name,
				product_deadline,
				a_data,
				b_address,
				b_name,
				end_of_date,
				expect_interest,
				act_end_of_date,
				create_user_id,
				create_user_name,
				create_user_dept_id,
				create_timestamp,
				last_update_user_id,
				last_update_timestamp,
				enable_flag,				
				finnished_type,				
				main_protocol_version,				
				sub_protocol_version,				
				inter_protocol_version,
				inter_protocol_merge_version,				
				m2m_protocol_version,				
				bel_salesman_id,
				customer_signature_path
		)
		VALUES
		(
				#{wms_inve_clerk_protocol_id},
				#{prot_code},
				#{prot_type},
				#{wms_inve_transa_id},
				#{wms_inve_redeem_id},
				#{protocol_type},
				#{is_order_extend},
				#{sign_place},
				#{sign_place_postcode},				
				#{begin_of_date},
				#{a_name},
				#{a_id_card},
				#{a_contact_address},				
				#{a_bank_number},
				#{a_bank_info},
				#{product_account},
				#{product_account_upper},
				#{category_name},
				#{product_deadline},
				#{a_data},
				#{b_address},
				#{b_name},
				#{end_of_date},
				#{expect_interest},
				#{act_end_of_date},
				#{create_user_id},
				#{create_user_name},
				#{create_user_dept_id},
				#{create_timestamp},
				#{last_update_user_id},
				#{last_update_timestamp},
				#{enable_flag},
				#{finnished_type},
				#{main_protocol_version},
				#{sub_protocol_version},
				#{inter_protocol_version},
				#{inter_protocol_merge_version},
				#{m2m_protocol_version},
				#{bel_salesman_id},
				#{customer_signature_path}
		);
	</insert>
	
	<select id="getAllCusProtocolWithoutPaperTransaInfoList" parameterType="map" resultType="map">
		SELECT
			pc.category_name as prod_name,
			pc.wms_inve_pruduct_category_id,
			tp.product_interest,
			tp.product_deadline,
			t.wms_inve_transa_id as transa_id,
			DATE_FORMAT(date_of_payment,'%Y/%m/%d') as date_of_payment_str,
			CASE WHEN
				t.data_status = '6' THEN TRUNCATE(tp.org_product_account/10000, 0)
			ELSE
				TRUNCATE(tp.product_account / 10000, 0)
			END AS product_account,
			CASE WHEN
				t.data_status = '5' THEN '4'
			WHEN
				t.data_status = '6' THEN '3'
			WHEN
				t.data_status = '4' AND EXISTS(SELECT 1 FROM wms_inve_transa_protocol p WHERE p.wms_inve_transa_id = t.wms_inve_transa_id AND p.end_of_date >= CURDATE() LIMIT 1) THEN '1'
			WHEN
				t.data_status = '4' AND EXISTS(SELECT 1 FROM wms_inve_transa_protocol p WHERE p.wms_inve_transa_id = t.wms_inve_transa_id AND p.end_of_date &lt; CURDATE() LIMIT 1) THEN '2'
			END AS status
		FROM
			wms_inve_transa t,
			wms_inve_transa_prod tp,
			wms_inve_pruduct_category pc
		WHERE
			t.wms_inve_transa_id = tp.wms_inve_transa_id
		AND tp.wms_inve_pruduct_category_id = pc.wms_inve_pruduct_category_id
		AND t.data_status IN (4, 5, 6)
		AND t.enable_flag = '1'
		AND tp.enable_flag = '1'
		AND pc.has_paper_protocol = '0'
		AND t.mobile_phone = #{mobile_phone }
		ORDER BY tp.wms_inve_pruduct_category_id desc, t.date_of_payment asc, t.wms_inve_transa_id asc
	</select>
	
	<select id="getWithoutPaperProtocolTransaProtocolInfoList" resultType="map">
		SELECT
			t.wms_inve_transa_id,
			(
				SELECT
					MAX(
						cp.wms_inve_clerk_protocol_id
					)
				FROM
					wms_inve_clerk_protocol cp
				WHERE
					cp.wms_inve_transa_id = t.wms_inve_transa_id
			) AS wms_inve_clerk_protocol_id,
			pc.wms_inve_pruduct_category_id
		FROM
			wms_inve_transa t,
			wms_inve_transa_prod tp,
			wms_inve_pruduct_category pc
		WHERE
			t.wms_inve_transa_id = tp.wms_inve_transa_id
		AND tp.wms_inve_pruduct_category_id = pc.wms_inve_pruduct_category_id
		AND t.data_status = '4'
		AND pc.has_paper_protocol = '0'
		AND t.enable_flag = '1'
		AND tp.enable_flag = '1'
	</select>
	
	<!-- 手持查询端查询柜员协议  按生效的协议主键倒序排序 -->
	<select id="getWmsInveClerkProtocolByTransaIdForPhone"  parameterType="map" resultType="WmsInveClerkProtocol">
			SELECT
				p.wms_inve_clerk_protocol_id,
				wms_inve_transa_id,
				p.prot_code,
				date_format(p.last_update_timestamp,'%Y-%m-%d %H:%i:%s') as last_update_timestamp_str				
			FROM
				wms_inve_clerk_protocol p
			WHERE
				p.wms_inve_transa_id = #{wms_inve_transa_id}
				and p.product_account = #{product_account}				
				and p.enable_flag = 1
			order by p.wms_inve_clerk_protocol_id desc
	</select>
	
	<select id="getWmsInveClerkProtocolCreateUserById" parameterType="int" resultType="com.zx.sframe.util.vo.UserBean">
		select 
      		 (select p.personnel_shortCode from pm_personnel p where p1.create_user_id = p.personnel_id) as userCode,
      		 (select p.personnel_name from pm_personnel p where p1.create_user_id = p.personnel_id) as realname
		from
			wms_inve_clerk_protocol p1
		<where>
			wms_inve_clerk_protocol_id = #{wms_inve_clerk_protocol_id}
		</where>	
	</select>
	
	<select id="getLastWmsInveClaimsInfo" parameterType="map" resultType="map">
		SELECT
			t1.wms_inve_transa_id,
			t1.wms_inve_clerk_protocol_id,
			t1.wms_inve_clerk_protocol_transa_crepkg_id,
			case 
				when t2.prot_code is null then '暂无'
			else 
				CONCAT(t2.prot_code,'-',DATE_FORMAT(t1.create_timestamp,'%m%d')) 
			end AS prot_code,
			DATE_FORMAT(t1.create_timestamp,'%Y-%m-%d') AS date_str
		FROM
			wms_inve_clerk_protocol_transa_crepkg t1,
			wms_inve_clerk_protocol t2
		WHERE
			t1.wms_inve_clerk_protocol_id = t2.wms_inve_clerk_protocol_id
		AND
			t1.wms_inve_transa_id = #{wms_inve_transa_id}
		AND
			t1.wms_inve_clerk_protocol_id = #{wms_inve_clerk_protocol_id}
		ORDER BY t1.wms_inve_clerk_protocol_transa_crepkg_id desc
	</select>
</mapper> 
