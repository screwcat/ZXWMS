package com.zx.emanage.cremanage.service.impl;import java.math.BigDecimal;import java.sql.Timestamp;import java.text.SimpleDateFormat;import java.util.HashMap;import java.util.List;import java.util.Map;import jodd.util.StringUtil;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import org.springframework.transaction.annotation.Transactional;import com.google.gson.Gson;import com.zx.emanage.cremanage.persist.WmsCreCreditHeadDao;import com.zx.emanage.cremanage.persist.WmsCreCreditLineCustomerChangeHeadDao;import com.zx.emanage.cremanage.persist.WmsCreHousingCreditConfirmDao;import com.zx.emanage.cremanage.persist.WmsCreHousingPaymentDao;import com.zx.emanage.cremanage.service.IWmsCreCreditHeadService;import com.zx.emanage.cremanage.service.IWmsCreHousingPaymentService;import com.zx.emanage.cremanage.service.IWmsLoanWorkFlowService;import com.zx.emanage.cremanage.vo.WmsCreHousingPaymentSearchBeanVO;import com.zx.emanage.cremanage.vo.WmsHouseCreditWorkFlowVO;import com.zx.emanage.sysmanage.persist.PmPersonnelDao;import com.zx.emanage.util.gen.SysTools;import com.zx.emanage.util.gen.WmsHelp;import com.zx.emanage.util.gen.entity.PmPersonnel;import com.zx.emanage.util.gen.entity.WmsCreCreditHead;import com.zx.emanage.util.gen.entity.WmsCreCreditLineCustomerChangeHead;import com.zx.emanage.util.gen.entity.WmsCreHousingCreditConfirm;import com.zx.emanage.util.gen.entity.WmsCreHousingPayment;import com.zx.emanage.util.gen.vo.WmsCreCreditHeadVO;import com.zx.platform.syscontext.PlatformGlobalVar;import com.zx.platform.syscontext.vo.GridDataBean;import com.zx.sframe.util.vo.UserBean;/** *  * 版权所有：版权所有(C) 2016，卓信金控 * 系统名称：财富管理平台 * @ClassName: WmsCreHousingPaymentServiceImpl * 模块名称： * @Description: 内容摘要：房产核查缴费 * @author baisong * @date 2016年12月22日 * @version V1.0 * history: * 1、2016年12月22日 baisong 创建文件 */@Service("WmsCreHousingPaymentService")public class WmsCreHousingPaymentServiceImpl implements IWmsCreHousingPaymentService {    private static Logger log = LoggerFactory.getLogger(WmsCreHousingPaymentServiceImpl.class);    @Autowired    private WmsCreHousingPaymentDao wmscrehousingpaymentDao;	@Autowired    private IWmsLoanWorkFlowService wmsLoanWorkFlowService;// 新房贷贷款流程    @Autowired    private WmsCreCreditHeadDao wmscrecreditheadDao;// 贷款主表    @Autowired    private WmsCreCreditLineCustomerChangeHeadDao wmsCreCreditLineCustomerChangeHeadDao;     @Autowired    private PmPersonnelDao pmPersonnelDao;    @Autowired    private IWmsCreCreditHeadService wmsCreCreditHeadService;    @Autowired    private WmsCreHousingCreditConfirmDao wmsCreHousingCreditConfirmDao;// 授信确认表    /**     * Description : 获取结果集(不带分页)     *      * @param queryInfo     * @return record list     * @author administrator     */    @Override    public Map<String, Object> getListWithoutPaging(WmsCreHousingPaymentSearchBeanVO queryInfo) {        Map<String, Object> paramMap = new HashMap<String, Object>();        paramMap.put("sortname", queryInfo.getSortname());        paramMap.put("sortorder", queryInfo.getSortorder());        List<Map<String, Object>> list = wmscrehousingpaymentDao.search(paramMap);        Map<String, Object> resMap = new HashMap<String, Object>();        resMap.put("Rows", list);        return resMap;    }    /**     * Description : 获取结果集(带分页)     *      * @param queryInfo     * @return record list     * @author administrator     */    @Override    public Map<String, Object> getListWithPaging(WmsCreHousingPaymentSearchBeanVO queryInfo) {        Map<String, Object> paramMap = new HashMap<String, Object>();        paramMap.put("sortname", queryInfo.getSortname());        paramMap.put("sortorder", queryInfo.getSortorder());        paramMap.put("pagesize", queryInfo.getPagesize());        paramMap.put("offset", queryInfo.getOffset());        List<Map<String, Object>> list = wmscrehousingpaymentDao.search(paramMap);        GridDataBean<Map<String, Object>> bean =             new GridDataBean<Map<String, Object>>(queryInfo.getPage(), wmscrehousingpaymentDao.findCount(paramMap), list);        return bean.getGridData();    }    /**     * Description : 通过主键获取结果     *      * @param primary key     * @return WmsCreHousingPayment     * @author administrator     */    @Override    public WmsCreHousingPayment getInfoByPK(Integer wms_cre_housing_payment_id) {        return wmscrehousingpaymentDao.get(wms_cre_housing_payment_id);    }    /**     * Description : 新增记录     *      * @param bean     * @return "success" or "error" or user defined     * @author administrator     */    @Override    @Transactional    public String save(WmsCreHousingPayment bean, UserBean user) {        String resStr = "success";        int ret = 0;        ret = wmscrehousingpaymentDao.save(bean);        if (ret == 0) {            resStr = "error";        }        return resStr;    }    /**     * Description : 更新记录     *      * @param bean contains pk at least     * @return "success" or "error" or user defined     * @author administrator     */    @Override    @Transactional    public String update(WmsCreHousingPayment bean, UserBean user) {        String resStr = "success";        int ret = 0;        ret = wmscrehousingpaymentDao.update(bean); // update a record replace columns,                                                   // nonsupport null val        if (ret == 0) {            resStr = "error";        }        return resStr;    }    /**     * Description : 获取List<WmsCreHousingPayment>结果集     *      * @param queryInfo     * @param isExludePKFlag, true is exclude primary key, false is include     *            primary key     * @return "success" or "repeat"     * @author administrator     */    private List<WmsCreHousingPayment> getListByEntity(WmsCreHousingPayment queryInfo, Boolean isExcludePKFlag) {        Map<String, Object> paramMap = new HashMap<String, Object>();        paramMap.put("isExcludePKFlag", isExcludePKFlag);        String resStr = "success";        List<WmsCreHousingPayment> beanList = wmscrehousingpaymentDao.getListByEntity(queryInfo);        return beanList;    }	@Override	public Map<String, Object> getSeachForPaymentVerification(			WmsCreCreditHeadVO queryInfo, UserBean user) {		Map<String, Object> paramMap = new HashMap<String, Object>();   	 if (StringUtil.isNotBlank(queryInfo.getBill_code()))        {            paramMap.put("bill_code", SysTools.getSqlLikeParam(queryInfo.getBill_code()));        }   	  if (queryInfo.getCreate_timestamp_begin() != null && !"".equals(queryInfo.getCreate_timestamp_begin()))         {             paramMap.put("create_timestamp_begin", queryInfo.getCreate_timestamp_begin());         }         if (queryInfo.getCreate_timestamp_end() != null && !"".equals(queryInfo.getCreate_timestamp_end()))         {             paramMap.put("create_timestamp_end", queryInfo.getCreate_timestamp_end());         }                           if (StringUtil.isNotBlank(queryInfo.getSalesman_name()))        {            paramMap.put("salesman_name", SysTools.getSqlLikeParam(queryInfo.getSalesman_name()));            paramMap.put("salesman_shortcode", SysTools.getSqlLikeParam(queryInfo.getSalesman_name()));        }        if (StringUtil.isNotBlank(queryInfo.getCustomer_name()))        {            paramMap.put("customer_name", SysTools.getSqlLikeParam(queryInfo.getCustomer_name()));        }        if (StringUtil.isNotBlank(queryInfo.getMobile_telephone1()))        {            paramMap.put("mobile_telephone1",SysTools.getSqlLikeParam(queryInfo.getMobile_telephone1()));        }        if (queryInfo.getCreate_timestamp_JFbegin() != null && !"".equals(queryInfo.getCreate_timestamp_JFbegin()))        {            paramMap.put("create_timestamp_JFbegin", queryInfo.getCreate_timestamp_JFbegin());        }        if (queryInfo.getCreate_timestamp_JFend() != null && !"".equals(queryInfo.getCreate_timestamp_JFend()))        {            paramMap.put("create_timestamp_JFend", queryInfo.getCreate_timestamp_JFend());        }                 paramMap.put("sortname", queryInfo.getSortname());        paramMap.put("sortorder", queryInfo.getSortorder());        paramMap.put("pagesize", queryInfo.getPagesize());        paramMap.put("offset", queryInfo.getOffset());        // 开发模式 1为开发模式 其他为正常权限模式        if (!"1".equals(PlatformGlobalVar.SYS_PROPERTIES.get("isDeveloperMode")))        {            paramMap.put("salesman_id", user.getUserId());// 登陆人id            paramMap.put("menu_url", WmsHelp.MENU_URL_FCHCJFCX_LIST);            paramMap.put("childrendept", wmsCreCreditHeadService.queryChildrenDeptInfo(paramMap)); // 获取可查看的部门        }        List<Map<String, Object>> list = wmscrehousingpaymentDao.getSeachForPaymentVerification(paramMap);        GridDataBean<Map<String, Object>> bean = new GridDataBean<Map<String, Object>>(                queryInfo.getPage(),                wmscrehousingpaymentDao.getSeachCountForPaymentVerification(paramMap),                list);        return bean.getGridData();	}	@Override    public Map<String, Object> getSeachForPaymentVerificationOut(WmsCreCreditHeadVO queryInfo, UserBean user)    {        Map<String, Object> paramMap = new HashMap<String, Object>();        if (StringUtil.isNotBlank(queryInfo.getBill_code()))        {            paramMap.put("bill_code", SysTools.getSqlLikeParam(queryInfo.getBill_code()));        }        if (queryInfo.getCreate_timestamp_begin() != null && !"".equals(queryInfo.getCreate_timestamp_begin()))        {            paramMap.put("create_timestamp_begin", queryInfo.getCreate_timestamp_begin());        }        if (queryInfo.getCreate_timestamp_end() != null && !"".equals(queryInfo.getCreate_timestamp_end()))        {            paramMap.put("create_timestamp_end", queryInfo.getCreate_timestamp_end());        }        if (StringUtil.isNotBlank(queryInfo.getSalesman_name()))        {            paramMap.put("salesman_name", SysTools.getSqlLikeParam(queryInfo.getSalesman_name()));            paramMap.put("salesman_shortcode", SysTools.getSqlLikeParam(queryInfo.getSalesman_name()));        }        if (StringUtil.isNotBlank(queryInfo.getCustomer_name()))        {            paramMap.put("customer_name", SysTools.getSqlLikeParam(queryInfo.getCustomer_name()));        }        if (StringUtil.isNotBlank(queryInfo.getMobile_telephone1()))        {            paramMap.put("mobile_telephone1", queryInfo.getMobile_telephone1());        }        if (queryInfo.getCreate_timestamp_JFbegin() != null && !"".equals(queryInfo.getCreate_timestamp_JFbegin()))        {            paramMap.put("create_timestamp_JFbegin", queryInfo.getCreate_timestamp_JFbegin());        }        if (queryInfo.getCreate_timestamp_JFend() != null && !"".equals(queryInfo.getCreate_timestamp_JFend()))        {            paramMap.put("create_timestamp_JFend", queryInfo.getCreate_timestamp_JFend());        }        paramMap.put("sortname", queryInfo.getSortname());        paramMap.put("sortorder", queryInfo.getSortorder());        // 开发模式 1为开发模式 其他为正常权限模式        if (!"1".equals(PlatformGlobalVar.SYS_PROPERTIES.get("isDeveloperMode")))        {            paramMap.put("salesman_id", user.getUserId());// 登陆人id            paramMap.put("menu_url", WmsHelp.MENU_URL_FCHCJFCX_LIST);            paramMap.put("childrendept", wmsCreCreditHeadService.queryChildrenDeptInfo(paramMap)); // 获取可查看的部门        }        paramMap.put("Rows", wmscrehousingpaymentDao.getSeachForPaymentVerificationout(paramMap));        return paramMap;	}		/**     * 缴费确认页面初始化数据     */	@Override	public Map<String, Object> housingPaymentVerificationDisp(WmsCreHousingPaymentSearchBeanVO queryInfo, UserBean user) {		Map<String, Object> paramMap = new HashMap<String, Object>();		paramMap.put("wms_cre_credit_head_id", queryInfo.getWms_cre_credit_head_id());        // 查询房产核查缴费数据        List<Map<String, Object>> list = wmscrehousingpaymentDao.search(paramMap);        paramMap=wmscrehousingpaymentDao.housingPaymentVerificationDisp(paramMap);        if (list != null && list.size() > 0)        {            paramMap.put("mobile_telephone", list.get(0).get("mobile_telephone"));//手机号            paramMap.put("payment_amount", list.get(0).get("payment_amount"));//付款金额        }        return paramMap;	}    /**     * @Title: housingPaymentVerificationSave     * @Description: TODO(房产核查缴费)     * @param queryInfo     * @param user     * @return      * @author: baisong     * @time:2016年12月22日 下午2:30:53     * @see com.zx.emanage.cremanage.service.IWmsCreHousingPaymentService#housingPaymentVerificationSave(com.zx.emanage.cremanage.vo.WmsCreHousingPaymentSearchBeanVO, com.zx.sframe.util.vo.UserBean)     * history:     * 1、2016年12月22日 baisong 创建方法     */	@Override	@Transactional	public String housingPaymentVerificationSave(WmsCreHousingPaymentSearchBeanVO queryInfo, UserBean user) {        // 处理流程        WmsHouseCreditWorkFlowVO vo = new WmsHouseCreditWorkFlowVO();        vo.setWms_cre_credit_head_id(queryInfo.getWms_cre_credit_head_id().toString());//        vo.setPass("true");        vo.setAdvice("房产核查缴费完成");        vo.setUserId(user.getUserId().toString());        vo.setDebtkey("HCJF");// 房产核查缴费        // 判断是否走流程        if (vo != null && vo.getPass() != null)        {            // 走流程            Map<String, Object> flowMap = wmsLoanWorkFlowService.publicApprovalStatus(vo);            // 判断流程是否正常            if (flowMap != null && flowMap.get("result") != null && "statusError".equals(flowMap.get("result").toString()))            {                return flowMap.get("result").toString();            }        }        // 查询列表的缴费确认        WmsCreHousingPayment ment = wmscrehousingpaymentDao.getAllByHeadId(queryInfo.getWms_cre_credit_head_id());        BigDecimal jine = new BigDecimal(0);        // 如果没输入金额，则不相加        if (queryInfo.getPayment_amount() != null && ment != null)        {            queryInfo.setWms_cre_housing_payment_id(ment.getWms_cre_housing_payment_id());            jine = ment.getPayment_amount().add(queryInfo.getPayment_amount());        }        else if (ment != null)        {            if (ment.getPayment_amount() != null)            {                jine = ment.getPayment_amount();            }        }        else        {            jine = queryInfo.getPayment_amount();        }		SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");		WmsCreHousingPayment bean = new WmsCreHousingPayment();		bean.setWms_cre_credit_head_id(queryInfo.getWms_cre_credit_head_id());		bean.setCustomer_name(queryInfo.getCustomer_name());		try {			bean.setApplication_date(new java.sql.Date(format.parse(queryInfo.getApplication_date()).getTime()));		} catch (Exception e) {			e.printStackTrace();		}				long nowTimeForLong = System.currentTimeMillis();		java.sql.Timestamp nowTimeForTimestamp = new java.sql.Timestamp(nowTimeForLong);				bean.setMobile_telephone(queryInfo.getMobile_telephone());		bean.setCommunity_name(queryInfo.getCommunity_name());		bean.setSalesman_id(queryInfo.getSalesman_id());		bean.setSalesman_name(queryInfo.getSalesman_name());		bean.setTeam_manager_id(queryInfo.getTeam_manager_id());		bean.setTeam_manager_name(queryInfo.getTeam_manager_name());		bean.setHouse_address(queryInfo.getHouse_address());		bean.setCreate_user_id(user.getUserId());		bean.setCreate_user_name(user.getRealname());		bean.setCreate_timestamp(nowTimeForTimestamp);		bean.setLast_update_user_id(user.getUserId());		bean.setLast_update_timestamp(nowTimeForTimestamp);        bean.setPayment_amount(jine);        String resStr = "success";        int ret = 0;        bean.setEnable_flag("1");        ret = wmscrehousingpaymentDao.save(bean);        if (ret == 0)        {            resStr = "error";        }        if (ment != null && ment.getWms_cre_housing_payment_id() != null)        {            bean.setWms_cre_housing_payment_id(ment.getWms_cre_housing_payment_id());            bean.setEnable_flag("2");            bean.setPayment_amount(queryInfo.getPayment_amount());            ret = wmscrehousingpaymentDao.update(bean);        }        // 志刚在2016-10-19说缴费确认页面修改的电话号码同步更新到客户表wms_cre_credit_line_customer_change_head        WmsCreCreditLineCustomerChangeHead wmsCreCreditLineCustomerChangeHead = new WmsCreCreditLineCustomerChangeHead();        wmsCreCreditLineCustomerChangeHead.setWms_cre_credit_head_id(queryInfo.getWms_cre_credit_head_id());        wmsCreCreditLineCustomerChangeHead.setMobile_telephone1(queryInfo.getMobile_telephone());        wmsCreCreditLineCustomerChangeHead.setIs_major("1");        this.wmsCreCreditLineCustomerChangeHeadDao.updateforBLTwo(wmsCreCreditLineCustomerChangeHead);        // 调用发送信息的接口出现异常 不会影响正常流程        try        {            WmsCreCreditHead wmsCreCreditHead = wmscrecreditheadDao.get(bean.getWms_cre_credit_head_id());// 查询单据信息            // 查询授信贷情况            WmsCreHousingCreditConfirm wmsCreHousingCreditConfirm = new WmsCreHousingCreditConfirm();            wmsCreHousingCreditConfirm.setEnable_flag("1");            wmsCreHousingCreditConfirm.setWms_cre_credit_head_id(bean.getWms_cre_credit_head_id());            // 授信确认结果 1：普通贷（默认值） 0：授信贷            wmsCreHousingCreditConfirm.setCredit_confirm_result("0");            List<WmsCreHousingCreditConfirm> list = wmsCreHousingCreditConfirmDao.getListByEntity(wmsCreHousingCreditConfirm);            // 查询客户姓名            Map<String, Object> customerChangeParamMap = new HashMap<String, Object>();            customerChangeParamMap.put("wms_cre_credit_head_id", bean.getWms_cre_credit_head_id());            customerChangeParamMap.put("is_major", "1");            customerChangeParamMap.put("enable_flag", "1");            List<Map<String, Object>> customerChangeList = wmsCreCreditLineCustomerChangeHeadDao.search(customerChangeParamMap);            PmPersonnel pmPersonnel = new PmPersonnel();            pmPersonnel.setPersonnel_id(wmsCreCreditHead.getSalesman_id());            List<PmPersonnel> listp = pmPersonnelDao.getListByEntity(pmPersonnel);            pmPersonnel = listp.get(0);            // 调用方法map            Map<String, Object> sendMap = new HashMap<String, Object>();            // 参数map            Map<String, String> paramMap = new HashMap<String, String>();            // 参数map            Map<String, String> msg_extras = new HashMap<String, String>();            // 发送短信map            Map<String, String> msgMap = new HashMap<String, String>();            sendMap.put("short_message", "1");// 短信            msgMap.put("tpl_id", "2033");            sendMap.put("user_id", wmsCreCreditHead.getSalesman_id());            paramMap.put("bill_code", wmsCreCreditHead.getBill_code());            paramMap.put("customer_name", customerChangeList.get(0).get("customer_name").toString());            paramMap.put("city", wmsCreCreditHead.getCity());            // 判断是否根据角色去获取消息接收人            sendMap.put("role_value", '1');//            // 根据菜单查询人员            sendMap.put("menu_url", WmsHelp.MENU_URL_FCHC_LIST);// 房产核查ual            sendMap.put("salesman_dept_id", wmsCreCreditHead.getSalesman_dept_id());// 初审评估ual            // 消息中心使用            sendMap.put("personnel_id", wmsCreCreditHead.getSalesman_id().toString());            sendMap.put("personnel_shortCode", wmsCreCreditHead.getSalesman_shortcode());            sendMap.put("personnel_name", wmsCreCreditHead.getSalesman_name());            sendMap.put("app_name", WmsHelp.APP_NAME_MIF);            // 极光推送需要的数据参数            sendMap.put("quart_message", "1");// 消息附加参数            paramMap.put("salesman_name_code", pmPersonnel.getPersonnel_name() + pmPersonnel.getPersonnel_shortcode());            msg_extras.put("wms_cre_credit_head_id", wmsCreCreditHead.getWms_cre_credit_head_id().toString());// 添加参数            sendMap.put("msg_extras", msg_extras);// 消息附加参数            // 发送消息中心 焦德龙            // 如果是消息中心            sendMap.put("message_center", "1");            // 提交人            paramMap.put("bill_code", wmsCreCreditHead.getBill_code());            paramMap.put("customer_name", customerChangeList.get(0).get("customer_name").toString());            paramMap.put("wms_cre_credit_head_id", bean.getWms_cre_credit_head_id().toString());            paramMap.put("bill_status", wmsCreCreditHead.getBill_status());            paramMap.put("city", wmsCreCreditHead.getCity());            paramMap.put("create_user_id", user.getUserId().toString());            paramMap.put("create_user_name", user.getRealname());            paramMap.put("app_name", WmsHelp.APP_NAME_MIF);            Gson gson = new Gson();            msgMap.put("paramJson", gson.toJson(paramMap));            sendMap.put("msgMap", msgMap);// 添加短信            sendMap.put("msg_map", paramMap);// 极光推送的消息内容参数            sendMap.put("msg_code", "20010");// 消息编码            sendMap.put("msg_code_role", "20010");// 消息编码            // 线程发送消息            this.wmsCreCreditHeadService.sendInfoAsynchronous(sendMap);            /*            msgMap.put("tpl_id", "2032");// 给电审发送短信息            sendMap.remove("role_value");// 角色            sendMap.remove("message_center");// 电审征信不发送消息中心            sendMap.remove("quart_message");// 电审征信不发送极光消息            // 判断是否是授信贷            if (list != null && list.size() > 0)            {                sendMap.put("role_value", WorkflowRoleHelp.HOUSE_DQDSFHY);// 电审员                sendMap.remove("is_dis_area");// 电审征信不区分地域                this.wmsCreCreditHeadService.getUserAndSendInfo(sendMap);                sendMap.put("role_value", WorkflowRoleHelp.HOUSE_DQZXFHY);// 征信员                this.wmsCreCreditHeadService.getUserAndSendInfo(sendMap);            }*/        }        catch (Exception e)        {            e.printStackTrace();        }        return resStr;	}	/**     * 获取单据授信确认结果信息     * @param wms_cre_credit_head_id     * @return     */	private String getCredit_Confirm_Info(Integer wms_cre_credit_head_id) {		String credit_confirm_result="";        // 查询房产授信确认信息    	WmsCreHousingCreditConfirm	wmsCreHousingCreditConfirm =new WmsCreHousingCreditConfirm();    	wmsCreHousingCreditConfirm.setWms_cre_credit_head_id(wms_cre_credit_head_id);    	wmsCreHousingCreditConfirm.setEnable_flag("1");        List<WmsCreHousingCreditConfirm> list=wmsCreHousingCreditConfirmDao.getListByEntity(wmsCreHousingCreditConfirm);		if(list!=null&&list.size()>0){			credit_confirm_result=list.get(0).getCredit_confirm_result();		}        return credit_confirm_result;	}    /**     * @Title: paymentExpired     * @Description: TODO(房产核查缴费过期)     * @param queryInfo     * @param user      * @author: jiaodelong     * @time:2017年2月21日 下午6:46:30     * @see com.zx.emanage.cremanage.service.IWmsCreHousingPaymentService#paymentExpired(com.zx.emanage.cremanage.vo.WmsHouseCreditWorkFlowVO, com.zx.sframe.util.vo.UserBean)     * history:     * 1、2017年2月21日 jiaodelong 创建方法     */	@Override	@Transactional	public void paymentExpired(WmsHouseCreditWorkFlowVO queryInfo, UserBean user) {        Timestamp sysTime = new Timestamp(System.currentTimeMillis()); // 获取当前系统时间        queryInfo.setAdvice("房产核查缴费过期");        queryInfo.setDebtkey("HCJF");        queryInfo.setPass("nullify");		queryInfo.setUserId(user.getUserId().toString());        queryInfo.setWms_cre_credit_head_id(queryInfo.getWms_cre_credit_head_id().toString());//        // 判断是否走流程        if (queryInfo != null && queryInfo.getPass() != null)        {            // 走流程            Map<String, Object> flowMap = wmsLoanWorkFlowService.publicApprovalStatus(queryInfo);            /* // 判断流程是否正常             if (flowMap != null && flowMap.get("result") != null && "statusError".equals(flowMap.get("result").toString()))             {                 return flowMap.get("result").toString();             }*/        }        // 保存主表作废信息		WmsCreCreditHead hbean=new WmsCreCreditHead();		hbean.setWms_cre_credit_head_id(Integer.valueOf(queryInfo.getWms_cre_credit_head_id()));        hbean.setNullify_type(queryInfo.getDebtkey());	    hbean.setNullify_user_name(user.getRealname());	    hbean.setNullify_user_id(user.getUserId());	    hbean.setNullify_timestamp(sysTime);	    hbean.setNullify_reason(queryInfo.getAdvice());//        int ret = wmscrecreditheadDao.update(hbean);// 更新贷款主表	    if(ret!=1){            throw new RuntimeException("房产核查缴费过期修改主表作废信息失败");	    }	}    /**     * @Title: housingPaymentVerificationTwoSave     * @Description: TODO(缴费查询缴费确认页面保存)     * @param queryInfo     * @param user     * @return String     * @author: jiaodelong     * @time:2016年12月7日 上午9:54:38     * @see com.zx.emanage.cremanage.service.IWmsCreHousingPaymentService#housingPaymentVerificationTwoSave(com.zx.emanage.cremanage.vo.WmsCreHousingPaymentSearchBeanVO, com.zx.sframe.util.vo.UserBean)     * history:     * 1、2016年12月7日 jiaodelong 创建方法    */    @Override    @Transactional    public String housingPaymentVerificationTwoSave(WmsCreHousingPaymentSearchBeanVO queryInfo, UserBean user)    {        // 如果没输入金额，则不相加        if (queryInfo.getPayment_amount() != null)        {            // 查询列表的缴费确认            WmsCreHousingPayment ment = wmscrehousingpaymentDao.getAllByHeadId(queryInfo.getWms_cre_credit_head_id());            BigDecimal jine = ment.getPayment_amount().add(queryInfo.getPayment_amount());            WmsCreHousingPayment Payment = new WmsCreHousingPayment();            Payment.setWms_cre_housing_payment_id(ment.getWms_cre_housing_payment_id());            Payment.setPayment_amount(jine);            wmscrehousingpaymentDao.update(Payment);        }        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");        WmsCreHousingPayment bean = new WmsCreHousingPayment();        bean.setWms_cre_credit_head_id(queryInfo.getWms_cre_credit_head_id());        bean.setCustomer_name(queryInfo.getCustomer_name());        try {            bean.setApplication_date(new java.sql.Date(format.parse(queryInfo.getApplication_date()).getTime()));        } catch (Exception e) {            e.printStackTrace();        }                long nowTimeForLong = System.currentTimeMillis();        java.sql.Timestamp nowTimeForTimestamp = new java.sql.Timestamp(nowTimeForLong);                bean.setMobile_telephone(queryInfo.getMobile_telephone());        bean.setCommunity_name(queryInfo.getCommunity_name());        bean.setSalesman_id(queryInfo.getSalesman_id());        bean.setSalesman_name(queryInfo.getSalesman_name());        bean.setTeam_manager_id(queryInfo.getTeam_manager_id());        bean.setTeam_manager_name(queryInfo.getTeam_manager_name());        bean.setHouse_address(queryInfo.getHouse_address());        bean.setCreate_user_id(user.getUserId());        bean.setCreate_user_name(user.getRealname());        bean.setCreate_timestamp(nowTimeForTimestamp);        bean.setLast_update_user_id(user.getUserId());        bean.setLast_update_timestamp(nowTimeForTimestamp);        // 如果等于空，金额为0        if(queryInfo.getPayment_amount() == null) {            bean.setPayment_amount(new BigDecimal(0));        } else {            bean.setPayment_amount(queryInfo.getPayment_amount());        }        bean.setEnable_flag("2");                String resStr = "success";        int ret = 0;        ret = wmscrehousingpaymentDao.save(bean);        if (ret == 0) {            resStr = "error";        }        return resStr;    }}