<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.zx.emanage.reportmanage.persist.WmsInveCustomerMonthlyIncomeDao">
	<!-- get 获取每月客户收益报表  每月后三天显示信息-->
	<select id="getMapInfo" parameterType="map" resultType="java.util.HashMap">
		select
			t.bill_code,
			t.cus_name,
			t.signing_date,
			t.salesman_name,
			t.product_account,
			t.category_name,
			t.category_deadline,
			t.data_status,
			t.days_of_calculation,
			t.income_rate,
			t.payable_basic_income,
			t.bonus_rate,
			t.payable_reward_income,
			t.return_date,
			t.product_interest_account,
			t.days_extend_income,
			t.extend_income,
			t.adjust_amount,
			t.adjust_remark,
			t.wms_inve_transa_income_id,
			t.wms_inve_transa_id,
			t.wms_inve_transa_prod_id,
			t.pay_status_page,
			CASE WHEN t.pay_status IS NULL THEN ''
				 WHEN t.pay_status = 0 THEN '未支付'
				 WHEN t.pay_status = 1 THEN	'已支付'
				 WHEN t.pay_status = 2 THEN	'已终止'
				 WHEN t.pay_status = 3 THEN '已支付'
				 WHEN t.pay_status = 4 THEN '已支付'
			END AS pay_status,
			t.wms_inve_pruduct_category_id
		from
		(
				SELECT
					w1.wms_inve_transa_income_id,
					w1.wms_inve_transa_id,
					w1.wms_inve_transa_prod_id,
					w2.bill_code,
					w2.cus_name,
					(DATE_FORMAT(w2.date_of_payment,'%Y/%m/%d')) AS signing_date,
					CONCAT(w2.salesman_name,'  ',w2.salesman_shortcode) as salesman_name,
					round((IFNULL(w1.product_account,0) / 10000)) as product_account,
					w3.category_name,
					w4.product_deadline as category_deadline,
					(SELECT	value_meaning FROM	wms_sys_dict_data WHERE wms_sys_dict_id = 55 AND value_code = w2.data_status ) AS data_status,
					IFNULL(sum(w1.days_of_calculation),0) as days_of_calculation,
					IFNULL(sum(w1.income_rate),0) as income_rate,
					case when DATE_FORMAT(w1.return_date,'%Y-%m') = DATE_FORMAT(now(),'%Y-%m') 
						 then (IFNULL(sum(w1.payable_basic_income),0) + IFNULL(sum(w1.renewal_income),0))
						 else IFNULL(sum(w1.payable_basic_income),0)
					end
					as payable_basic_income,
					IFNULL(sum(w1.bonus_rate),0) as bonus_rate,
					IFNULL(sum(w1.payable_reward_income),0) as payable_reward_income,
					case when DATE_FORMAT(w1.return_date,'%Y-%m') = DATE_FORMAT(now(),'%Y-%m') then DATE_FORMAT(LAST_DAY(w1.return_date),'%Y-%m-%d') else DATE_FORMAT(w1.act_return_date,'%Y-%m-%d') end as return_date,
					case when  DATE_FORMAT(w1.return_date,'%Y-%m') = DATE_FORMAT(now(),'%Y-%m') 
					     then (IFNULL(sum(w1.payable_basic_income),0) + IFNULL(sum(w1.payable_reward_income),0) + IFNULL(sum(w1.adjust_amount),0) + IFNULL(sum(w1.extend_income),0) + IFNULL(sum(w1.renewal_income),0))
					     else (IFNULL(sum(w1.payable_basic_income),0) + IFNULL(sum(w1.payable_reward_income),0) + IFNULL(sum(w1.adjust_amount),0) + IFNULL(sum(w1.extend_income),0))
					end
					AS product_interest_account,
					IFNULL(sum(w1.days_extend_income),0) as days_extend_income,
					IFNULL(sum(w1.extend_income),0) as extend_income,
					IFNULL(sum(w1.adjust_amount),0) adjust_amount,
					w1.adjust_remark,
					w1.pay_status,
					w3.wms_inve_pruduct_category_id,
					w1.pay_status as pay_status_page
				FROM wms_inve_transa_income w1
				LEFT JOIN wms_inve_transa w2 ON w1.wms_inve_transa_id = w2.wms_inve_transa_id
				LEFT JOIN wms_inve_pruduct_category w3 ON w1.wms_inve_pruduct_category_id = w3.wms_inve_pruduct_category_id
				LEFT JOIN wms_inve_transa_prod w4 ON w1.wms_inve_transa_prod_id = w4.wms_inve_transa_prod_id
				WHERE w1.pay_type in (2,3)
			    AND w2.wms_inve_transa_id NOT IN (SELECT * FROM (SELECT wms_inve_transa_id FROM wms_inve_transa_income_special) t1) 
				AND 
				CASE WHEN ISNULL(w2.old_wms_inve_transa_id) = 0 
			         THEN w2.old_wms_inve_transa_id NOT IN (SELECT * FROM (SELECT wms_inve_transa_id FROM wms_inve_transa_income_special) t2)
				   	 ELSE 1=1
				END
				AND w1.pay_status in(0,1,3,4)
				<if test="return_date!=null">
				AND DATE_FORMAT(w1.return_date,'%Y-%m') = DATE_FORMAT(#{return_date},'%Y-%m')
				AND
				CASE WHEN DATE_FORMAT(#{return_date},'%Y-%m') = DATE_FORMAT(NOW(),'%Y-%m')
						  THEN w2.data_status in(4,6)
		             WHEN DATE_FORMAT(#{return_date},'%Y-%m') &lt; DATE_FORMAT(NOW(),'%Y-%m')
						  THEN w2.data_status in(4,5,6)
		        END
				</if>
			    GROUP BY w1.wms_inve_transa_id, w1.pay_status
			    HAVING
			    (IFNULL(product_interest_account,0) > 0 or IFNULL(adjust_amount,0) != 0)
			    
			<if test="is_query_data_type!=null and is_query_data_type==1">
			 UNION ALL
	
			SELECT 
				NULL AS wms_inve_transa_income_id,
				t1.wms_inve_transa_id,
				wt3.wms_inve_transa_prod_id,
				t1.bill_code,
				t1.cus_name,
				(DATE_FORMAT(t1.date_of_payment,'%Y/%m/%d')) AS signing_date,
				CONCAT(t1.salesman_name,' ',t1.salesman_shortcode) AS salesman_name,
				round((IFNULL(wt3.product_account,0) / 10000)) as product_account,
				wt3.category_name,
				wt3.product_deadline AS category_deadline,
				(SELECT	value_meaning	FROM wms_sys_dict_data	WHERE wms_sys_dict_id = 55	AND value_code = t1.data_status) AS data_status,
				NULL AS days_of_calculation,
				NULL AS income_rate,
				NULL AS payable_basic_income,
				NULL AS bonus_rate,
				NULL AS payable_reward_income,
				NULL AS return_date,
				NULL AS product_interest_account,
				NULL AS days_extend_income,
				NULL AS extend_income,
				NULL AS adjust_amount,
				NULL AS adjust_remark,
				NULL AS pay_status,
				wt3.wms_inve_pruduct_category_id,
				NULL AS pay_status_page
			FROM wms_inve_transa t1
			INNER JOIN wms_inve_transa_prod wt3
			ON t1.wms_inve_transa_id = wt3.wms_inve_transa_id
			WHERE FIND_IN_SET(t1.wms_inve_transa_id,
					(
					SELECT
						GROUP_CONCAT(DISTINCT w1.wms_inve_transa_id)
					FROM wms_inve_transa_income w1
					LEFT JOIN wms_inve_transa w2 ON w1.wms_inve_transa_id = w2.wms_inve_transa_id
					LEFT JOIN wms_inve_pruduct_category w3 ON w1.wms_inve_pruduct_category_id = w3.wms_inve_pruduct_category_id
					LEFT JOIN wms_inve_transa_prod w4 ON w1.wms_inve_transa_prod_id = w4.wms_inve_transa_prod_id
					WHERE w1.pay_type in (2,3)
						AND w2.wms_inve_transa_id NOT IN (SELECT * FROM (SELECT wms_inve_transa_id FROM wms_inve_transa_income_special) t1) 
					AND 
					CASE WHEN ISNULL(w2.old_wms_inve_transa_id) = 0 
							  THEN w2.old_wms_inve_transa_id NOT IN (SELECT * FROM (SELECT wms_inve_transa_id FROM wms_inve_transa_income_special) t2)
						 ELSE 1=1
					END
					AND w1.pay_status in (0,1,3,4)
					<if test="return_date!=null">
					AND DATE_FORMAT(w1.return_date,'%Y-%m') = DATE_FORMAT(#{return_date},'%Y-%m')
					AND
					CASE WHEN DATE_FORMAT(#{return_date},'%Y-%m') = DATE_FORMAT(NOW(),'%Y-%m')
							  THEN w2.data_status in(4,6)
			             WHEN DATE_FORMAT(#{return_date},'%Y-%m') &lt; DATE_FORMAT(NOW(),'%Y-%m')
							  THEN w2.data_status in(4,5,6)
			        END
					</if>
					AND
				  	CASE WHEN  DATE_FORMAT(w1.return_date,'%Y-%m') = DATE_FORMAT(now(),'%Y-%m') 
					           THEN ((IFNULL(w1.payable_basic_income,0) + IFNULL(w1.payable_reward_income,0) + IFNULL(w1.adjust_amount,0) + IFNULL(w1.extend_income,0) + IFNULL(w1.renewal_income,0)) > 0
					                or ifnull(w1.adjust_amount,0) != 0)
					     ELSE ((IFNULL(w1.payable_basic_income,0) + IFNULL(w1.payable_reward_income,0) + IFNULL(w1.adjust_amount,0) + IFNULL(w1.extend_income,0)) > 0
					          or ifnull(w1.adjust_amount,0) != 0)
					END
				)
			) = 0
			AND IFNULL(t1.transa_type, 1) != 2
			<if test="return_date!=null">
			AND 
			CASE WHEN DATE_FORMAT(#{return_date},'%Y-%m') = DATE_FORMAT(NOW(),'%Y-%m')
                	  THEN t1.data_status = 4
			     WHEN DATE_FORMAT(#{return_date},'%Y-%m') &lt; DATE_FORMAT(NOW(),'%Y-%m')
					  THEN t1.data_status in(4,5,6)
			END
			</if>
			AND t1.enable_flag = 1
			</if>
		) t
		where
		1=1
		<if test="bill_code!=null">
			AND t.bill_code like '%${bill_code}%'
		</if>
		<if test="cus_name!=null">
			AND t.cus_name like '%${cus_name}%'
		</if>
		<if test="signing_date_begin!=null">
			AND DATE_FORMAT(t.signing_date,'%Y/%m/%d') &gt;= DATE_FORMAT(#{signing_date_begin},'%Y/%m/%d')
	    </if>
		<if test="signing_date_end!=null">
			AND DATE_FORMAT(t.signing_date,'%Y/%m/%d') &lt;= DATE_FORMAT(#{signing_date_end},'%Y/%m/%d')
		</if>
		<if test="category_name!=null">
			AND t.wms_inve_pruduct_category_id = #{category_name}	
		</if>
		<!-- 说明是历史数据 -->
		<if test="date_before != null and date_before == 1">
			<if test="is_bonus_rate!=null and is_bonus_rate==1">
			    AND IFNULL(t.bonus_rate,0) != 0
			</if>
			<if test="is_bonus_rate!=null and is_bonus_rate==2">
			    AND IFNULL(t.bonus_rate,0) = 0
			</if>
			<if test="is_extent_rate!=null and is_extent_rate==1">
			    AND IFNULL(t.extend_income,0) != 0
			</if>
			<if test="is_extent_rate!=null and is_extent_rate==2">
				AND IFNULL(t.extend_income,0) = 0
			</if>
			<if test="is_query_pay_status !=null and is_query_pay_status == 1">
				AND t.pay_status_page in (1,3,4)
			</if>
			<if test="is_query_pay_status !=null and is_query_pay_status == 2">
				AND t.pay_status_page = 0
			</if>
			AND t.wms_inve_transa_income_id is not null
		</if>
		<!-- 说明是当前月份数据 -->
		<if test="date_before != null and date_before == 2">
			<if test="is_query_data_type!=null and is_query_data_type==1">
				<if test="is_bonus_rate!=null and is_bonus_rate==1">
				    AND (IFNULL(t.bonus_rate,0) != 0 OR t.wms_inve_transa_income_id is null)
				</if>
				<if test="is_bonus_rate!=null and is_bonus_rate==2">
				    AND (IFNULL(t.bonus_rate,0) = 0 OR t.wms_inve_transa_income_id is null)
				</if>
				<if test="is_extent_rate!=null and is_extent_rate==1">
				    AND (IFNULL(t.extend_income,0) != 0 OR t.wms_inve_transa_income_id is null)
				</if>
				<if test="is_extent_rate!=null and is_extent_rate==2">
					AND (IFNULL(t.extend_income,0) = 0 OR t.wms_inve_transa_income_id is null)
				</if>
				<if test="is_query_pay_status !=null and is_query_pay_status == 1">
					AND t.pay_status_page in (1,3,4)
				</if>
				<if test="is_query_pay_status !=null and is_query_pay_status == 2">
					AND t.pay_status_page = 0
				</if>
			</if>
			<if test="is_query_data_type!=null and is_query_data_type==2">
				<if test="is_bonus_rate!=null and is_bonus_rate==1">
				    AND (IFNULL(t.bonus_rate,0) != 0 and t.wms_inve_transa_income_id is not null)
				</if>
				<if test="is_bonus_rate!=null and is_bonus_rate==2">
				    AND (IFNULL(t.bonus_rate,0) = 0 and t.wms_inve_transa_income_id is not null)
				</if>
				<if test="is_extent_rate!=null and is_extent_rate==1">
				    AND (IFNULL(t.extend_income,0) != 0 and t.wms_inve_transa_income_id is not null)
				</if>
				<if test="is_extent_rate!=null and is_extent_rate==2">
					AND (IFNULL(t.extend_income,0) = 0 and t.wms_inve_transa_income_id is not null)
				</if>
				<if test="is_query_pay_status !=null and is_query_pay_status == 1">
					AND t.pay_status_page in (1,3,4)
				</if>
				<if test="is_query_pay_status !=null and is_query_pay_status == 2">
					AND t.pay_status_page = 0
				</if>
				AND t.wms_inve_transa_income_id is not null
			</if> 
		</if>
		ORDER BY t.signing_date DESC ,t.wms_inve_transa_id  DESC
		<if test="offset != null and pagesize !=null">
			LIMIT ${offset} , ${pagesize}
		</if>
	</select>
	<!-- 获取每月客户收益报表 每月后三天显示信息 -->
	<select id="getMapInfoCount" parameterType="map" resultType="int">
		select
			count(1)
		from
		(
				SELECT
					w1.wms_inve_transa_income_id,
					w1.wms_inve_transa_id,
					w1.wms_inve_transa_prod_id,
					w2.bill_code,
					w2.cus_name,
					(DATE_FORMAT(w2.date_of_payment,'%Y/%m/%d')) AS signing_date,
					CONCAT(w2.salesman_name,'  ',w2.salesman_shortcode) as salesman_name,
					(IFNULL(w1.product_account,0) / 10000) as product_account,
					w3.category_name,
					w4.product_deadline as category_deadline,
					(SELECT	value_meaning FROM	wms_sys_dict_data WHERE wms_sys_dict_id = 55 AND value_code = w2.data_status ) AS data_status,
					w1.days_of_calculation,
					IFNULL(sum(w1.income_rate),0) as income_rate,
					case when DATE_FORMAT(w1.return_date,'%Y-%m') = DATE_FORMAT(now(),'%Y-%m') 
						 then (IFNULL(w1.payable_basic_income,0) + IFNULL(w1.renewal_income,0))
						 else w1.payable_basic_income
					end
					as payable_basic_income,
					ifnull(sum(w1.bonus_rate),0) as bonus_rate,
					ifnull(sum(w1.payable_reward_income),0) as payable_reward_income,
					case when DATE_FORMAT(w1.return_date,'%Y-%m') = DATE_FORMAT(now(),'%Y-%m') then DATE_FORMAT(LAST_DAY(w1.return_date),'%Y-%m-%d') else DATE_FORMAT(w1.act_return_date,'%Y-%m-%d') end as return_date,
					case when  DATE_FORMAT(w1.return_date,'%Y-%m') = DATE_FORMAT(now(),'%Y-%m') 
					     then (IFNULL(w1.payable_basic_income,0) + IFNULL(w1.payable_reward_income,0) + IFNULL(w1.adjust_amount,0) + IFNULL(sum(w1.extend_income),0) + IFNULL(w1.renewal_income,0))
					     else (IFNULL(w1.payable_basic_income,0) + IFNULL(w1.payable_reward_income,0) + IFNULL(w1.adjust_amount,0) + IFNULL(sum(w1.extend_income),0))
					end
					AS product_interest_account,
					IFNULL(sum(w1.days_extend_income),0) as days_extend_income,
					IFNULL(sum(w1.extend_income),0) as extend_income,
					IFNULL(w1.adjust_amount,0) adjust_amount,
					w1.adjust_remark,
					w1.pay_status,
					w3.wms_inve_pruduct_category_id,
					w1.pay_status as pay_status_page
				FROM wms_inve_transa_income w1
				LEFT JOIN wms_inve_transa w2 ON w1.wms_inve_transa_id = w2.wms_inve_transa_id
				LEFT JOIN wms_inve_pruduct_category w3 ON w1.wms_inve_pruduct_category_id = w3.wms_inve_pruduct_category_id
				LEFT JOIN wms_inve_transa_prod w4 ON w1.wms_inve_transa_prod_id = w4.wms_inve_transa_prod_id
				WHERE w1.pay_type in (2,3)
			    AND w2.wms_inve_transa_id NOT IN (SELECT * FROM (SELECT wms_inve_transa_id FROM wms_inve_transa_income_special) t1) 
				AND 
				CASE WHEN ISNULL(w2.old_wms_inve_transa_id) = 0 
			         THEN w2.old_wms_inve_transa_id NOT IN (SELECT * FROM (SELECT wms_inve_transa_id FROM wms_inve_transa_income_special) t2)
				   	 ELSE 1=1
				END
				AND w1.pay_status in(0,1,3,4)
				<if test="return_date!=null">
				AND DATE_FORMAT(w1.return_date,'%Y-%m') = DATE_FORMAT(#{return_date},'%Y-%m')
				AND
				CASE WHEN DATE_FORMAT(#{return_date},'%Y-%m') = DATE_FORMAT(NOW(),'%Y-%m')
						  THEN w2.data_status in(4,6)
		             WHEN DATE_FORMAT(#{return_date},'%Y-%m') &lt; DATE_FORMAT(NOW(),'%Y-%m')
						  THEN w2.data_status in(4,5,6)
		        END
				</if>
			    GROUP BY w1.wms_inve_transa_id, w1.pay_status
			   	HAVING
			    (IFNULL(product_interest_account,0) > 0 OR IFNULL(adjust_amount,0) != 0)
			     
			<if test="is_query_data_type!=null and is_query_data_type==1">
			 UNION ALL
	
			SELECT 
				NULL AS wms_inve_transa_income_id,
				t1.wms_inve_transa_id,
				wt3.wms_inve_transa_prod_id,
				t1.bill_code,
				t1.cus_name,
				(DATE_FORMAT(t1.date_of_payment,'%Y/%m/%d')) AS signing_date,
				CONCAT(t1.salesman_name,' ',t1.salesman_shortcode) AS salesman_name,
				wt3.product_account,
				wt3.category_name,
				wt3.product_deadline AS category_deadline,
				(SELECT	value_meaning	FROM wms_sys_dict_data	WHERE		wms_sys_dict_id = 55	AND value_code = t1.data_status) AS data_status,
				NULL AS days_of_calculation,
				NULL AS income_rate,
				NULL AS payable_basic_income,
				NULL AS bonus_rate,
				NULL AS payable_reward_income,
				NULL AS return_date,
				NULL AS product_interest_account,
				NULL AS days_extend_income,
				NULL AS extend_income,
				NULL AS adjust_amount,
				NULL AS adjust_remark,
				NULL AS pay_status,
				wt3.wms_inve_pruduct_category_id,
				NULL AS pay_status_page
			FROM wms_inve_transa t1
			INNER JOIN wms_inve_transa_prod wt3
			ON t1.wms_inve_transa_id = wt3.wms_inve_transa_id
			WHERE FIND_IN_SET(t1.wms_inve_transa_id,
					(
					SELECT
						GROUP_CONCAT(DISTINCT w1.wms_inve_transa_id)
					FROM wms_inve_transa_income w1
					LEFT JOIN wms_inve_transa w2 ON w1.wms_inve_transa_id = w2.wms_inve_transa_id
					LEFT JOIN wms_inve_pruduct_category w3 ON w1.wms_inve_pruduct_category_id = w3.wms_inve_pruduct_category_id
					LEFT JOIN wms_inve_transa_prod w4 ON w1.wms_inve_transa_prod_id = w4.wms_inve_transa_prod_id
					WHERE w1.pay_type in (2,3)
						AND w2.wms_inve_transa_id NOT IN (SELECT * FROM (SELECT wms_inve_transa_id FROM wms_inve_transa_income_special) t1) 
					AND 
					CASE WHEN ISNULL(w2.old_wms_inve_transa_id) = 0 
							  THEN w2.old_wms_inve_transa_id NOT IN (SELECT * FROM (SELECT wms_inve_transa_id FROM wms_inve_transa_income_special) t2)
						 ELSE 1=1
					END
					AND w1.pay_status in (0,1,3,4)
					<if test="return_date!=null">
					AND DATE_FORMAT(w1.return_date,'%Y-%m') = DATE_FORMAT(#{return_date},'%Y-%m')
					AND
					CASE WHEN DATE_FORMAT(#{return_date},'%Y-%m') = DATE_FORMAT(NOW(),'%Y-%m')
							  THEN w2.data_status in(4,6)
			             WHEN DATE_FORMAT(#{return_date},'%Y-%m') &lt; DATE_FORMAT(NOW(),'%Y-%m')
							  THEN w2.data_status in(4,5,6)
			        END
					</if>
					AND
					CASE WHEN  DATE_FORMAT(w1.return_date,'%Y-%m') = DATE_FORMAT(now(),'%Y-%m') 
					     THEN ((IFNULL(w1.payable_basic_income,0) + IFNULL(w1.payable_reward_income,0) + IFNULL(w1.adjust_amount,0) + IFNULL(w1.extend_income,0) + IFNULL(w1.renewal_income,0)) > 0
					          OR IFNULL(w1.adjust_amount,0) != 0)
					     ELSE ((IFNULL(w1.payable_basic_income,0) + IFNULL(w1.payable_reward_income,0) + IFNULL(w1.adjust_amount,0) + IFNULL(w1.extend_income,0)) > 0
					          OR IFNULL(w1.adjust_amount,0) != 0)
					END
				)
			) = 0
			<if test="return_date!=null">
			AND 
			CASE WHEN DATE_FORMAT(#{return_date},'%Y-%m') = DATE_FORMAT(NOW(),'%Y-%m')
                	  THEN t1.data_status = 4
			     WHEN DATE_FORMAT(#{return_date},'%Y-%m') &lt; DATE_FORMAT(NOW(),'%Y-%m')
					  THEN t1.data_status in(4,5,6)
			END
			</if>
			AND t1.enable_flag = 1
			</if>
		) t
		where
		1=1
		<if test="bill_code!=null">
			AND t.bill_code like '%${bill_code}%'
		</if>
		<if test="cus_name!=null">
			AND t.cus_name like '%${cus_name}%'
		</if>
		<if test="signing_date_begin!=null">
			AND DATE_FORMAT(t.signing_date,'%Y/%m/%d') &gt;= DATE_FORMAT(#{signing_date_begin},'%Y/%m/%d')
	    </if>
		<if test="signing_date_end!=null">
			AND DATE_FORMAT(t.signing_date,'%Y/%m/%d') &lt;= DATE_FORMAT(#{signing_date_end},'%Y/%m/%d')
		</if>
		<if test="category_name!=null">
			AND t.wms_inve_pruduct_category_id = #{category_name}	
		</if>
		<!-- 说明是历史数据 -->
		<if test="date_before != null and date_before == 1">
			<if test="is_bonus_rate!=null and is_bonus_rate==1">
			    AND IFNULL(t.bonus_rate,0) != 0
			</if>
			<if test="is_bonus_rate!=null and is_bonus_rate==2">
			    AND IFNULL(t.bonus_rate,0) = 0
			</if>
			<if test="is_extent_rate!=null and is_extent_rate==1">
			    AND IFNULL(t.extend_income,0) != 0
			</if>
			<if test="is_extent_rate!=null and is_extent_rate==2">
				AND IFNULL(t.extend_income,0) = 0
			</if>
			<if test="is_query_pay_status !=null and is_query_pay_status == 1">
				AND t.pay_status_page in (1,3,4)
			</if>
			<if test="is_query_pay_status !=null and is_query_pay_status == 2">
				AND t.pay_status_page = 0
			</if>
			AND t.wms_inve_transa_income_id is not null
		</if>
		<!-- 说明是当前月份数据 -->
		<if test="date_before != null and date_before == 2">
			<if test="is_query_data_type!=null and is_query_data_type==1">
				<if test="is_bonus_rate!=null and is_bonus_rate==1">
				    AND (IFNULL(t.bonus_rate,0) != 0 OR t.wms_inve_transa_income_id is null)
				</if>
				<if test="is_bonus_rate!=null and is_bonus_rate==2">
				    AND (IFNULL(t.bonus_rate,0) = 0 OR t.wms_inve_transa_income_id is null)
				</if>
				<if test="is_extent_rate!=null and is_extent_rate==1">
				    AND (IFNULL(t.extend_income,0) != 0 OR t.wms_inve_transa_income_id is null)
				</if>
				<if test="is_extent_rate!=null and is_extent_rate==2">
					AND (IFNULL(t.extend_income,0) = 0 OR t.wms_inve_transa_income_id is null)
				</if>
				<if test="is_query_pay_status !=null and is_query_pay_status == 1">
					AND t.pay_status_page in (1,3,4)
				</if>
				<if test="is_query_pay_status !=null and is_query_pay_status == 2">
					AND t.pay_status_page = 0
				</if>
			</if>
			<if test="is_query_data_type!=null and is_query_data_type==2">
				<if test="is_bonus_rate!=null and is_bonus_rate==1">
				    AND (IFNULL(t.bonus_rate,0) != 0 and t.wms_inve_transa_income_id is not null)
				</if>
				<if test="is_bonus_rate!=null and is_bonus_rate==2">
				    AND (IFNULL(t.bonus_rate,0) = 0 and t.wms_inve_transa_income_id is not null)
				</if>
				<if test="is_extent_rate!=null and is_extent_rate==1">
				    AND (IFNULL(t.extend_income,0) != 0 and t.wms_inve_transa_income_id is not null)
				</if>
				<if test="is_extent_rate!=null and is_extent_rate==2">
					AND (IFNULL(t.extend_income,0) = 0 and t.wms_inve_transa_income_id is not null)
				</if>
				<if test="is_query_pay_status !=null and is_query_pay_status == 1">
					AND t.pay_status_page in (1,3,4)
				</if>
				<if test="is_query_pay_status !=null and is_query_pay_status == 2">
					AND t.pay_status_page = 0
				</if>
				AND t.wms_inve_transa_income_id is not null
			</if> 
		</if>
		    	
	</select>
	<select id="getInveCustomerMonthlyIncomeListDetailInfo" parameterType="map" resultType="java.util.HashMap">
		select 
				 (select value_meaning from wms_sys_dict_data where wms_sys_dict_id=72 and value_code=p.bank_of_deposit_pro) as bank_of_deposit_pro,
				 (select value_meaning from wms_sys_dict_data where p_wms_sys_dict_data_id=p.bank_of_deposit_pro and value_code=p.bank_of_deposit_city) as bank_of_deposit_city,
				  p.bank_of_deposit,
			      p.bank_branch,
			      p.card_no
		from  wms_inve_transa_prod p
		<where>
			 p.enable_flag=1
			<if test="wms_inve_transa_prod_id !=null">
			    and p.wms_inve_transa_prod_id =#{wms_inve_transa_prod_id}
			</if>
		</where>
		<if test="sortname != null and sortorder !=null">
			ORDER BY ${sortname} ${sortorder}
		</if>
		<if test="offset != null and pagesize !=null">
			LIMIT ${offset} , ${pagesize}
		</if>
	</select>
	<select id="getInveCustomerMonthlyIncomeListDetailInfoCount" parameterType="map" resultType="int">
		select 
				count(wms_inve_transa_prod_id) as count
		from  wms_inve_transa_prod p
		<where>
		     1=1 and p.enable_flag=1
			<if test="wms_inve_transa_prod_id !=null">
			    and p.wms_inve_transa_prod_id =#{wms_inve_transa_prod_id}
			</if>
		</where>
		<if test="sortname != null and sortorder !=null">
			ORDER BY ${sortname} ${sortorder}
		</if>
		<if test="offset != null and pagesize !=null">
			LIMIT ${offset} , ${pagesize}
		</if>
	</select>
	<!--显示统计每月收益数据汇总-->
	<select id="getMapInfoo" parameterType="map" resultType="java.util.HashMap">
	SELECT
		SUM(t1.payable_reward_income) as payable_reward_income,
		(SUM(t1.payable_basic_income) + SUM(t1.extend_income) + sum(t1.renewal_income) + sum(t1.adjust_amount)) as payable_basic_income,
		(SUM(t1.payable_reward_income) + SUM(t1.payable_basic_income) + SUM(t1.extend_income) + SUM(t1.adjust_amount) + SUM(t1.renewal_income)) as payable_total_income
	FROM
	(
			select
				t.extend_income,
				t.payable_reward_income,
				t.payable_basic_income,
				t.adjust_amount,
				t.renewal_income,
				t.days_of_calculation
			from
				(
					SELECT
						IFNULL(sum(e.extend_income),0) as extend_income,
						IFNULL(e.payable_reward_income,0) as payable_reward_income,
						IFNULL(e.payable_basic_income,0) as payable_basic_income,
						IFNULL(e.adjust_amount,0) as adjust_amount,
						case when DATE_FORMAT(e.return_date,'%Y-%m') = DATE_FORMAT(now(),'%Y-%m')
						     then IFNULL(e.renewal_income,0)
						     else 0
						end 
						as renewal_income,
						e.days_of_calculation,
						e.pay_status
					FROM
						wms_inve_transa_income e
						LEFT JOIN wms_inve_transa a
						ON e.wms_inve_transa_id=a.wms_inve_transa_id
						LEFT JOIN wms_inve_transa_prod p
						ON e.wms_inve_transa_prod_id=p.wms_inve_transa_prod_id
						LEFT JOIN wms_inve_pruduct_category y
						ON e.wms_inve_pruduct_category_id=y.wms_inve_pruduct_category_id
					WHERE
						a.enable_flag=1
						AND p.enable_flag=1
						and e.pay_type in (2,3)
						AND a.wms_inve_transa_id NOT IN (SELECT * FROM (SELECT wms_inve_transa_id FROM wms_inve_transa_income_special) t1) 
						AND 
							CASE WHEN ISNULL(a.old_wms_inve_transa_id) = 0 THEN
								a.old_wms_inve_transa_id NOT IN (
								SELECT
									*
								FROM
									(
										SELECT
											wms_inve_transa_id
										FROM
											wms_inve_transa_income_special
									) t2
							)
							ELSE
								1=1
							END
						and e.pay_status in (0,1,3,4)
						<if test="return_date!=null">
								AND DATE_FORMAT(e.return_date,'%Y-%m') = DATE_FORMAT(#{return_date},'%Y-%m')
								AND
								CASE WHEN DATE_FORMAT(#{return_date},'%Y-%m') = DATE_FORMAT(NOW(),'%Y-%m')
										  THEN a.data_status in(4,6)
						             WHEN DATE_FORMAT(#{return_date},'%Y-%m') &lt; DATE_FORMAT(NOW(),'%Y-%m')
										  THEN a.data_status in(4,5,6)
						        END
						</if>
						<if test="signing_date_begin!=null">
							AND DATE_FORMAT(a.date_of_payment,'%Y/%m/%d') &gt;= DATE_FORMAT(#{signing_date_begin},'%Y/%m/%d')
						</if>
						<if test="signing_date_end!=null">
							AND DATE_FORMAT(a.date_of_payment,'%Y/%m/%d') &lt;= DATE_FORMAT(#{signing_date_end},'%Y/%m/%d')
						</if>
						<if test="category_name!=null">
							AND p.wms_inve_pruduct_category_id = #{category_name}
						</if>
						<if test="bill_code!=null">
							AND a.bill_code like '%${bill_code}%'
						</if>
						<if test="cus_name!=null">
							AND a.cus_name like '%${cus_name}%'
						</if>
					    GROUP BY e.wms_inve_transa_id, e.pay_status
					    HAVING
					    ((IFNULL(extend_income,0) + IFNULL(payable_reward_income,0)+IFNULL(payable_basic_income,0)+IFNULL(adjust_amount,0) +IFNULL(renewal_income,0))>0
					    OR IFNULL(adjust_amount,0) != 0)
				) t
			where
			 	1=1
		    <if test="is_bonus_rate!=null and is_bonus_rate==1">
				AND IFNULL(t.payable_reward_income,0) != 0
			</if>
			<if test="is_bonus_rate!=null and is_bonus_rate==2">
				AND IFNULL(t.payable_reward_income,0) = 0
			</if>
			<if test="is_extent_rate!=null and is_extent_rate==1">
			    AND IFNULL(t.extend_income, 0) != 0
			</if>
			<if test="is_extent_rate!=null and is_extent_rate==2">
			    AND IFNULL(t.extend_income, 0) = 0
			</if>
			<if test="is_query_data_type!=null and is_query_data_type==2">
				AND days_of_calculation is not null
			</if>
			<if test="is_query_pay_status !=null and is_query_pay_status == 1">
				AND t.pay_status in (1,3,4)
			</if>
			<if test="is_query_pay_status !=null and is_query_pay_status == 2">
				AND t.pay_status = 0
			</if>
	) t1
	</select>
</mapper>