<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:util="http://www.springframework.org/schema/util" 
	xsi:schemaLocation=" 
          http://www.springframework.org/schema/beans 
          http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
          http://www.springframework.org/schema/tx 
          http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
          http://www.springframework.org/schema/context 
          http://www.springframework.org/schema/context/spring-context-3.0.xsd 
          http://www.springframework.org/schema/util 
		  http://www.springframework.org/schema/util/spring-util-3.0.xsd
          http://www.springframework.org/schema/aop 
          http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
		p:location="classpath:spring/jdbc.properties" />		
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" p:driverClassName="${jdbc.driverClassName}"
		p:url="${jdbc.databaseurl}" p:defaultCatalog="" p:username="${jdbc.username}"
		p:password="${jdbc.password}" p:maxActive="${jdbc.maxActive}"
		p:maxIdle="${jdbc.maxIdle}" p:maxWait="${jdbc.maxWait}"
		p:defaultAutoCommit="${jdbc.defaultAutoCommit}" p:removeAbandoned="${jdbc.removeAbandoned}"
		p:removeAbandonedTimeout="${jdbc.removeAbandonedTimeout}"
		p:logAbandoned="${jdbc.logAbandoned}" />
		
		
	<!-- transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" p:defaultEncoding="utf-8" >
	 	<property name="resolveLazily" value="true"/>  
		<property name="maxUploadSize" value="100000000"/>
	</bean>  
	
	<util:properties id="settings" location="classpath:spring/jdbc.properties" />
	
	<bean id="throwsAdvice" class="com.zx.sframe.util.aspect.ThrowableManage"/>
	<bean id="beanNameAutoProxyCreator" class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
       <property name="beanNames">
            <list><value>*Service</value></list>
       </property>
       <property name="interceptorNames"><value>throwsAdvice</value></property>
	</bean>
	<aop:aspectj-autoproxy/>
	
	<!-- 验证码组件配置 -->
	<bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
		<property name="config">
			<bean class="com.google.code.kaptcha.util.Config">
				<constructor-arg>
					<props>
						<prop key="kaptcha.border">no</prop>
						<prop key="kaptcha.border.color">105,179,90</prop>
						<prop key="kaptcha.textproducer.font.color">red</prop>
						<prop key="kaptcha.image.width">250</prop>
						<prop key="kaptcha.textproducer.font.size">120</prop>
						<prop key="kaptcha.image.height">160</prop>
						<prop key="kaptcha.session.key">code</prop>
						<prop key="kaptcha.textproducer.char.length">4</prop>
						<prop key="kaptcha.textproducer.font.names">宋体,宋体,宋体</prop>
					</props>
				</constructor-arg>
			</bean>
		</property>
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- MyBatis配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
		<property name="typeAliasesPackage" value="com.zx.emanage.util.gen.entity" />
		<!-- 显式指定Mapper文件位置 -->
		<property name="mapperLocations" value="classpath:mybatis/*/*Mapper.xml" />
	</bean>
	<!-- 扫描basePackage下所有以@MyBatisRepository标识的 接口 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.zx.emanage" />
		<property name="annotationClass"
			value="com.zx.sframe.util.mybatis.MyBatisRepository" />
	</bean>
  
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">   
	    <constructor-arg index="0" ref="sqlSessionFactory" />   
	</bean>  
	
	<!-- activiti工作流 -->
	<bean id="processEngineConfiguration" class="org.activiti.spring.SpringProcessEngineConfiguration">
		<property name="dataSource" ref="dataSource" />

		<!-- Database configurations -->
		<property name="databaseSchemaUpdate" value="false" />

		<!-- job executor configurations -->
		<property name="jobExecutorActivate" value="false" />

		<property name="transactionManager" ref="transactionManager"/>

		<!-- font -->
        <property name="activityFontName" value="宋体"/>
        <property name="labelFontName" value="宋体"/>
	</bean>

    <bean id="processEngine" class="org.activiti.spring.ProcessEngineFactoryBean">
        <property name="processEngineConfiguration" ref="processEngineConfiguration"/>
    </bean>

    <bean id="repositoryService" factory-bean="processEngine" factory-method="getRepositoryService"/>
    <bean id="runtimeService" factory-bean="processEngine" factory-method="getRuntimeService"/>
    <bean id="formService" factory-bean="processEngine" factory-method="getFormService"/>
    <bean id="identityService" factory-bean="processEngine" factory-method="getIdentityService"/>
    <bean id="taskService" factory-bean="processEngine" factory-method="getTaskService"/>
    <bean id="historyService" factory-bean="processEngine" factory-method="getHistoryService"/>
    <bean id="managementService" factory-bean="processEngine" factory-method="getManagementService"/>
	
	<context:component-scan base-package="com.zx">
		<context:exclude-filter type="regex" expression="com.zx.emanage.*.web.*" /> 
	</context:component-scan>	
</beans>
