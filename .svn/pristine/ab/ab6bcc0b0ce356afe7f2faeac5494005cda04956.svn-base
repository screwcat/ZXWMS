package com.zx.emanage.inve.web;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.zx.emanage.inve.service.IWmsInvePhoneService;
import com.zx.emanage.inve.service.IWmsInveSignedApplicationService;
import com.zx.emanage.inve.vo.WmsInveTransaSearchBeanVO;
import com.zx.emanage.sysmanage.service.IWmsSysDictDataService;
import com.zx.emanage.util.gen.entity.CrmCustomerInfo;
import com.zx.emanage.util.gen.entity.WmsInveCustomer;
import com.zx.emanage.util.gen.entity.WmsInveTransa;
import com.zx.emanage.util.gen.entity.WmsInveTransaProd;
import com.zx.sframe.util.GlobalVal;
import com.zx.sframe.util.vo.UserBean;

/**
 * 版权所有：版权所有(C) 2016，卓信金控
 * 系统名称：财富管理平台
 * @ClassName: WmsInvePhoneController
 * 模块名称：
 * @Description: 内容摘要：
 * @author DongHao
 * @date 2016年12月30日
 * @version V1.0
 * history:
 * 1、2016年12月30日 DongHao 创建文件
 */
@Controller
public class WmsInvePhoneController
{

    @Autowired
    private IWmsInvePhoneService wmsInvePhoneService;

    @Autowired
    private IWmsSysDictDataService wmsSysDictDataService;

    @Autowired
    private IWmsInveSignedApplicationService wmsInveSignedApplicationService;

    /**
     * 
     * @Title: getSpecialMenuInfosMoa
     * @Description: 获取特殊功能菜单项
     * @param one_menu_code
     * @param personnel_id
     * @return 
     * @author: DongHao
     * @time:2016年12月30日 下午2:18:57
     * history:
     * 1、2016年12月30日 DongHao 创建方法
     */
    @RequestMapping(value = "/inve/getSpecialMenuInfosMoa.do", method = { RequestMethod.GET, RequestMethod.POST })
    @ResponseBody
    public Map<String, Object> getSpecialMenuInfosMoa(String one_menu_code, String personnel_id, String version)
    {
        Map<String, Object> resultMap = wmsInvePhoneService.getSpecialMenuInfosMoa(personnel_id, version);
        return resultMap;
    }

    /**
     * 
     * @Title: getSpecialTeamInfosMoa
     * @Description: 获取团队信息
     * @param personnel_id
     * @param dept_id
     * @param menu_code
     * @return 
     * @author: DongHao
     * @time:2017年1月1日 下午5:06:59
     * history:
     * 1、2017年1月1日 DongHao 创建方法
     */
    @RequestMapping(value = "/inve/getSpecialTeamInfosMoa.do", method = { RequestMethod.GET, RequestMethod.POST })
    @ResponseBody
    public Map<String, Object> getSpecialTeamInfosMoa(String personnel_id, String dept_id, String menu_code)
    {
        Map<String, Object> resultMap = wmsInvePhoneService.getSpecialTeamInfosMoa(Integer.parseInt(personnel_id), dept_id, menu_code);
        return resultMap;
    }

    /**
     * 
     * @Title: getSpecialDeptInfosMoa
     * @Description: 获取数据权限下的部门
     * @param personnel_id
     * @param dept_id
     * @param menu_code
     * @return 
     * @author: DongHao
     * @time:2017年1月3日 上午9:32:05
     * history:
     * 1、2017年1月3日 DongHao 创建方法
     */
    @RequestMapping(value = "/inve/getSpecialDeptInfosMoa.do", method = { RequestMethod.GET, RequestMethod.POST })
    @ResponseBody
    public Map<String, Object> getSpecialDeptInfosMoa(String personnel_id, String dept_id, String menu_code)
    {
        Map<String, Object> resultMap = wmsInvePhoneService.getSpecialDeptInfosMoa(personnel_id, dept_id, menu_code);
        return resultMap;
    }

    /**
     * 
     * @Title: getSyncMePerformanceInfosMoa
     * @Description: 同步与我有关的业绩信息
     * @param personnel_id 人员id
     * @param query_type 查询数据范围(1:表示待我处理数据,2:与我相关数据)
     * @return 
     * @author: DongHao
     * @time:2017年1月5日 下午2:49:48
     * history:
     * 1、2017年1月5日 DongHao 创建方法
     */
    @RequestMapping(value = "/inve/getSyncMePerformanceInfosMoa.do", method = { RequestMethod.GET, RequestMethod.POST })
    @ResponseBody
    public Map<String, Object> getSyncMePerformanceInfosMoa(String personnel_id, String query_type)
    {
        Map<String, Object> resultMap = wmsInvePhoneService.getSyncMePerformanceInfosMoa(personnel_id, query_type);
        return resultMap;
    }


    @RequestMapping(value = "/inve/phoneGetClerkDataMoa.do", method = { RequestMethod.GET, RequestMethod.POST })
    @ResponseBody
    public Map<String, Object> getClerkData(String personnel_id)
    {
        Map<String, Object> resultMap = wmsInvePhoneService.getClerkSortData(personnel_id);
        return resultMap;
    }

    @RequestMapping(value = "/inve/phoneGetClerkDataCountMoa.do", method = { RequestMethod.GET, RequestMethod.POST })
    @ResponseBody
    public Map<String, Object> getClerkDataCount(String personnel_id)
    {
        int i = wmsInvePhoneService.getClerkDataCount(personnel_id);
        Map<String, Object> map = new HashMap<>();
        map.put("count", i);
        return map;
    }

    /**
     * 
     * @Title: getAchVicegelListMoa
     * @Description: 获取数据权限下的副总清单
     * @param menu_code
     * @param personnel_id
     * @return 
     * @author: DongHao
     * @time:2017年1月6日 上午11:45:30
     * history:
     * 1、2017年1月6日 DongHao 创建方法
     */
    @RequestMapping(value = "/inve/getAchVicegelListMoa.do", method = { RequestMethod.GET, RequestMethod.POST })
    @ResponseBody
    public Map<String, Object> getAchVicegelListMoa(String menu_code, String personnel_id)
    {
        Map<String, Object> resultMap = new HashMap<String, Object>();
        List<Map<String, Object>> list = wmsInvePhoneService.getAchVicegelListMoa(menu_code, personnel_id);
        resultMap.put("Rows", list);
        return resultMap;
    }

    /**
     * @Title: getDictionaryDataPad
     * @Description: pad请求获取数据字典详细内容
     * @param wms_sys_dict_id
     * @param p_wms_sys_dict_data_id
     * @return 
     * @author: zhangyunfei
     * @time:2017年2月23日 上午8:54:28
     * history:
     * 1、2017年2月23日 Administrator 创建方法
     */
    @RequestMapping(value = "/inve/getDictionaryDataPad.do", method = { RequestMethod.GET, RequestMethod.POST })
    @ResponseBody
    public Map<String, Object> getDictionaryDataPad(String wms_sys_dict_id, String p_wms_sys_dict_data_id)
    {
        Map<String, Object> resultMap = new HashMap<String, Object>();
        Map<String, Object> map = new HashMap<String, Object>();

        try
        {
            map = wmsSysDictDataService.getDictionaryDataPad(wms_sys_dict_id, p_wms_sys_dict_data_id);
            resultMap.put("ret_code", "000");
            resultMap.put("ret_msg", "获取字典数据成功");
            resultMap.put("ret_data", map);
        }
        catch (Exception e)
        {
            resultMap.put("ret_code", "001");
            resultMap.put("ret_msg", "获取字典数据失败");
            resultMap.put("ret_data", map);
        }
        return resultMap;
    }

    /**
     * 
     * @Title: getIncomeCardPad
     * @Description: pad客户端获取用户收益卡数据
     * @param cus_name 客户姓名 
     * @param id_card 客户身份证号
     * @return 返回客户收益卡map集合
     * @author: DongHao
     * @time:2017年3月1日 下午8:45:38
     * history:
     * 1、2017年3月1日 DongHao 创建方法
     */
    @RequestMapping(value = "/inve/getIncomeCardPad.do", method = { RequestMethod.GET, RequestMethod.POST })
    @ResponseBody
    public Map<String, Object> getIncomeCardPad(String cus_name, String id_card)
    {
        Map<String, Object> resultMap = new HashMap<String, Object>();

        List<Map<String, Object>> list = new ArrayList<Map<String, Object>>();

        try
        {
            list = wmsInvePhoneService.getIncomeCardPad(cus_name, id_card);
            resultMap.put("ret_code", "000");
            resultMap.put("ret_msg", "获取收益卡信息成功");
            resultMap.put("ret_data", list);
        }
        catch (Exception e)
        {
            resultMap.put("ret_code", "001");
            resultMap.put("ret_msg", "获取收益卡信息失败");
            resultMap.put("ret_data", list);
        }

        return resultMap;
    }

    /**
     * 
     * @Title: getCustomerListPad
     * @Description: 根据客户名称、客户联系方式和客户有效证件进行获取客户信息
     * @param bean 客户信息
     * @return 返回map集合(包含电话号是否可以修改,客户信息结果list)两部分
     * @author: DongHao
     * @time:2017年3月1日 下午9:19:09
     * history:
     * 1、2017年3月1日 DongHao 创建方法
     */
    @RequestMapping(value = "/inve/getCustomerListPad.do", method = { RequestMethod.GET, RequestMethod.POST })
    @ResponseBody
    public Map<String, Object> getCustomerListPad(CrmCustomerInfo bean, HttpServletRequest request)
    {
        Map<String, Object> resultMap = new HashMap<String, Object>();

        UserBean user = (UserBean) request.getSession().getAttribute(GlobalVal.USER_SESSION);
        Map<String, Object> map = new HashMap<String, Object>();
        try
        {
            bean.setPersonnel_id(user.getUserId());
            bean.setPage(1);
            bean.setSize(1000);
            map = wmsInvePhoneService.getCustomerListPad(bean);
            resultMap.put("ret_code", "000");
            resultMap.put("ret_msg", "获得客户信息成功");
            resultMap.put("ret_data", map);
        }
        catch (Exception e)
        {
            resultMap.put("ret_code", "001");
            resultMap.put("ret_msg", "获得客户信息失败");
            resultMap.put("ret_data", map);
        }
        return resultMap;
    }

    /**
     * 
     * @Title: getCategoryListPad
     * @Description: pad客户端获取产品信息
     * @param category_type 产品类型1:表示主推产品;2:表示公司可售产品
     * @param device_num 设备序列号
     * @return 
     * @author: DongHao
     * @time:2017年3月1日 下午9:48:20
     * history:
     * 1、2017年3月1日 DongHao 创建方法
     */
    @RequestMapping(value = "/inve/getCategoryListPad.do", method = { RequestMethod.GET, RequestMethod.POST })
    @ResponseBody
    public Map<String, Object> getCategoryListPad(int category_type, String device_num, HttpServletRequest request)
    {
        Map<String, Object> resultMap = new HashMap<String, Object>();
        UserBean user = (UserBean) request.getSession().getAttribute(GlobalVal.USER_SESSION);
        List<Map<String, Object>> list = new ArrayList<>();
        try
        {
            list = wmsInvePhoneService.getCategoryListPad(category_type, user);
            resultMap.put("ret_code", "000");
            resultMap.put("ret_msg", "获得产品信息成功");
            resultMap.put("ret_data", list);
        }
        catch (Exception e)
        {
            resultMap.put("ret_code", "001");
            resultMap.put("ret_msg", "获得产品信息失败");
            resultMap.put("ret_data", list);
        }
        return resultMap;
    }

    /**
     * 
     * @Title: verificationCustomerPad
     * @Description: 验证客户关键信息是否存在
     * @param contact_number 联系电话
     * @param id_card_number 有效证件
     * @param costomer_id 客户id
     * @param request 信息对象
     * @return 返回map集合
     * @author: DongHao
     * @time:2017年3月2日 上午12:43:43
     * history:
     * 1、2017年3月2日 DongHao 创建方法
     */
    @RequestMapping(value = "/inve/verificationCustomerPad.do", method = { RequestMethod.GET, RequestMethod.POST })
    @ResponseBody
    public Map<String, Object> verificationCustomerPad(String contact_number, String id_card_number, String costomer_id, HttpServletRequest request)
    {
        Map<String, Object> resultMap = new HashMap<String, Object>();

        UserBean user = (UserBean) request.getSession().getAttribute(GlobalVal.USER_SESSION);
        Map<String, Object> map = new HashMap<String, Object>();
        try
        {
            map = wmsInvePhoneService.verificationCustomerPad(contact_number, id_card_number, costomer_id, user);
            resultMap.put("ret_code", "000");
            resultMap.put("ret_msg", "验证成功");
            resultMap.put("ret_data", map);
        }
        catch (Exception e)
        {
            resultMap.put("ret_code", "001");
            resultMap.put("ret_msg", "验证失败");
            resultMap.put("ret_data", map);
        }

        return resultMap;
    }

    /**
     * 
     * @Title: saveSignedInfoPad
     * @Description: pad客户端保存上单信息
     * @param request 页面参数信息
     * @param wmsInveTransa 上单表信息
     * @param wmsInveTransaProd 上单产品表信息
     * @param wmsCustomer 客户信息
     * @param beanVO 查询条件对象
     * @return 返回map集合
     * @author: DongHao
     * @time:2017年3月2日 上午3:07:39
     * history:
     * 1、2017年3月2日 DongHao 创建方法
     */
    @RequestMapping(value = "/inve/saveSignedInfoPad.do", method = { RequestMethod.GET, RequestMethod.POST })
    @ResponseBody
    public Map<String, Object> saveSignedInfoPad(HttpServletRequest request, WmsInveTransa wmsInveTransa, WmsInveTransaProd wmsInveTransaProd, WmsInveCustomer wmsCustomer, WmsInveTransaSearchBeanVO beanVO)
    {
        UserBean user = (UserBean) request.getSession().getAttribute(GlobalVal.USER_SESSION);

        Map<String, Object> resultMap = new HashMap<String, Object>();
        try
        {
            /*****************(1)pad客户端进行签单的时候首先对必填字段进行非空验证***********************/
            resultMap = wmsInveSignedApplicationService.verificationSignedInfo(wmsInveTransa, wmsInveTransaProd, wmsCustomer, beanVO);

            // 判断针对签单信息的非空验证是否通过
            if (resultMap != null && resultMap.size() != 0 && "000".equals(resultMap.get("ret_code").toString()))
            {
                if (wmsInveTransaProd != null)
                {
                    // 判断收益卡银行是否为空
                    if (wmsInveTransaProd.getBank_of_deposit_code() != null)
                    {
                        wmsInveTransaProd.setBank_of_deposit(wmsInveTransaProd.getBank_of_deposit_code());
                    }
                    // 判断收益卡所属省是否为空
                    if (wmsInveTransaProd.getBank_of_deposit_pro_code() != null)
                    {
                        wmsInveTransaProd.setBank_of_deposit_pro(wmsInveTransaProd.getBank_of_deposit_pro_code());
                    }
                    // 判断收益卡所属市是否为空
                    if (wmsInveTransaProd.getBank_of_deposit_city_code() != null)
                    {
                        wmsInveTransaProd.setBank_of_deposit_city(wmsInveTransaProd.getBank_of_deposit_city_code());
                    }
                }

                /*****************(2)pad客户端进行签单的时候要对有效证件和身份证号进行二次校验***********************/
                resultMap = wmsInvePhoneService.verificationCustomerPad(wmsInveTransa.getMobile_phone(), wmsInveTransa.getId_card(),
                                                                        wmsInveTransa.getCostomer_id() != null ? wmsInveTransa.getCostomer_id()
                                                                                                                              .toString() : "", user);

                // 判断针对pad客户端签单时的联系电话和有效证件号验证是否通过
                if (resultMap != null && resultMap.size() != 0 && "0".equals(resultMap.get("id_card_result").toString())
                    && "0".equals(resultMap.get("contact_number_result").toString()))
                {
                    // 执行pad端签单操作
                    resultMap = wmsInveSignedApplicationService.saveSignedInfoPad(wmsInveTransa, wmsInveTransaProd, wmsCustomer, beanVO, user);
                }
                else
                {
                    //判断错误提示信息是否为空
                    if(resultMap != null && resultMap.size() != 0)
                    {
                        //判断手机号验证是否出错
                        if("1".equals(resultMap.get("contact_number_result").toString()))
                        {
                            resultMap.put("ret_code", "130");
                            resultMap.put("ret_msg", resultMap.get("contact_number_reason").toString());
                        }
                        
                        //判断有效证件好验证是否出错
                        if("1".equals(resultMap.get("id_card_result").toString()))
                        {
                            resultMap.put("ret_code", "130");
                            resultMap.put("ret_msg", resultMap.get("id_card_reason").toString());
                        }
                        
                    }
                }

            }

        }
        catch (Exception e)
        {
            e.printStackTrace();
            resultMap.put("ret_code", "107");
            resultMap.put("ret_msg", "签单失败!");
        }

        return resultMap;
    }

    /**
     * 
     * @Title: getTeamCommMonByDeptManagerMoa
     * @Description: 获取管理佣金按部门经理进行汇总(接口 33)
     * @param page 当前页
     * @param page_size 每页显示的记录数
     * @param statics_month 统计月份
     * @param dept_ids 团队id(多个团队id以","分隔)
     * @param personnel_info 部门经理姓名或者部门经理短工号
     * @param personnel_id 当前登录moa人员id
     * @return 返回数据集合
     * @author: DongHao
     * @time:2017年3月10日 下午4:09:36
     * history:
     * 1、2017年3月10日 DongHao 创建方法
     */
    @RequestMapping(value = "/inve/getTeamCommMonByDeptManagerMoa.do", method = { RequestMethod.GET, RequestMethod.POST })
    @ResponseBody
    public Map<String, Object> getTeamCommMonByDeptManagerMoa(Integer page, Integer page_size, String statics_month, String dept_ids,
                                                              String personnel_info, Integer personnel_id)
    {
        Integer offset = 0;
        Integer pagesize = 0;
        if (page == 1)
        {
            offset = 0;
            pagesize = page_size;
        }
        else
        {
            offset = page_size * page - page_size;
            pagesize = page_size;
        }

        return wmsInvePhoneService.getTeamCommMonByDeptManagerMoa(offset, pagesize, statics_month, dept_ids, personnel_info, personnel_id);
    }

    /**
     * 
     * @Title: getTeamCommMonBySalemanMoa
     * @Description: 获取管理佣金按客户经理汇总
     * @param page 当前页
     * @param page_size 每页显示的记录数
     * @param statics_month 统计月份
     * @param dept_ids 团队id值(多个团队id以","分隔)
     * @param personnel_id 部门经理人员id
     * @param personnel_info 客户经理姓名或客户经理短工号
     * @param user_id 当前登录moa的人员id
     * @return 返回Map数据集合
     * @author: DongHao
     * @time:2017年3月13日 上午9:45:34
     * history:
     * 1、2017年3月13日 DongHao 创建方法
     */
    @RequestMapping(value = "/inve/getTeamCommMonBySalemanMoa.do", method = { RequestMethod.GET, RequestMethod.POST })
    @ResponseBody
    public Map<String, Object> getTeamCommMonBySalemanMoa(Integer page, Integer page_size, String statics_month, String dept_ids,
                                                          String personnel_info, String personnel_id, Integer user_id)
    {
        Integer offset = 0;
        Integer pagesize = 0;
        if (page == 1)
        {
            offset = 0;
            pagesize = page_size;
        }
        else
        {
            offset = page_size * page - page_size;
            pagesize = page_size;
        }

        return wmsInvePhoneService.getTeamCommMonBySalemanMoa(offset, pagesize, statics_month, dept_ids, personnel_info, personnel_id, user_id);
    }

    /**
     * 
     * @Title: getTeamCommMonByItemMoa
     * @Description: 获取管理佣金按佣金项汇总
     * @param statics_month 佣金统计月份
     * @param personnel_id 客户经理人员id
     * @return 返回结果集合
     * @author: DongHao
     * @time:2017年3月13日 上午11:16:48
     * history:
     * 1、2017年3月13日 DongHao 创建方法
     */
    @RequestMapping(value = "/inve/getTeamCommMonByItemMoa.do", method = { RequestMethod.GET, RequestMethod.POST })
    @ResponseBody
    public Map<String, Object> getTeamCommMonByItemMoa(String statics_month, String personnel_id)
    {
        return wmsInvePhoneService.getTeamCommMonByItemMoa(statics_month, personnel_id);
    }

    /**
     * 
     * @Title: getTeamCommMonByDataMoa
     * @Description: 获取管理佣金按单据展现
     * @param page 当前页
     * @param page_size 每页显示多少记录数
     * @param personnel_info 客户姓名
     * @param statics_month 佣金统计月份
     * @param personnel_id 人员id
     * @param comm_item_ids 佣金项id(01表示老佣金,02表示新佣金)
     * @return  返回结果集合
     * @author: DongHao
     * @time:2017年3月13日 上午11:57:18
     * history:
     * 1、2017年3月13日 DongHao 创建方法
     */
    @RequestMapping(value = "/inve/getTeamCommMonByDataMoa.do", method = { RequestMethod.GET, RequestMethod.POST })
    @ResponseBody
    public Map<String, Object> getTeamCommMonByDataMoa(Integer page, Integer page_size, String personnel_info, String statics_month,
                                                       Integer personnel_id, String comm_item_ids)
    {
        Integer offset = 0;
        Integer pagesize = 0;
        if (page == 1)
        {
            offset = 0;
            pagesize = page_size;
        }
        else
        {
            offset = page_size * page - page_size;
            pagesize = page_size;
        }

        return wmsInvePhoneService.getTeamCommMonByDataMoa(offset, pagesize, personnel_info, statics_month, personnel_id, comm_item_ids);
    }

    /**
     * 
     * @Title: getTeamCommMonByManagerMoa
     * @Description: 获取管理佣金按客户经理汇总For副总/中分总/总经理/后线领导
     * @param page 当前页
     * @param page_size 每页显示的记录数
     * @param personnel_info 客户经理姓名或客户经理的短工号
     * @param statics_month 佣金统计月份
     * @param personnel_id 当前登录Moa系统的人员id
     * @return 返回结果集合
     * @author: DongHao
     * @time:2017年3月13日 上午11:42:49
     * history:
     * 1、2017年3月13日 DongHao 创建方法
     */
    @RequestMapping(value = "/inve/getTeamCommMonByManagerMoa.do", method = { RequestMethod.GET, RequestMethod.POST })
    @ResponseBody
    public Map<String, Object> getTeamCommMonByManagerMoa(Integer page, Integer page_size, String personnel_info, String statics_month,
                                                          Integer personnel_id)
    {
        Integer offset = 0;
        Integer pagesize = 0;
        if (page == 1)
        {
            offset = 0;
            pagesize = page_size;
        }
        else
        {
            offset = page_size * page - page_size;
            pagesize = page_size;
        }

        return wmsInvePhoneService.getTeamCommMonByManagerMoa(offset, pagesize, personnel_info, statics_month, personnel_id);
    }
}
