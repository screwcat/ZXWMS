<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<link href="../../css/zx-all.css" rel="stylesheet" type="text/css" />
<link href="../../css/app.css" rel="stylesheet" type="text/css" />
<script src="../../js/zx-all.js" type="text/javascript"></script>
<script src="../../js/exportxls.js?v=2"></script>
<script type="text/javascript" charset="utf-8" src="../../js/media/js/ZeroClipboard.js"></script>
<title>还款提醒列表</title>
</head>
<body style="overflow-y: hidden;">
	<div class="l-panel-search clearfix centertoolbar-w">
		<div id="searchbar" class="l-searchbar clearfix">
			<!--查询条件-->
			<div class="l-panel-search-cond clearfix">
				<div class="float-l">
					<div class="l-panel-search-title" style="margin-left: 16px">单据编号：</div>
					<div class="l-panel-search-item">
						<input type="text" id="bill_code" />
					</div>
				</div>
				<div class="float-l" style="margin-left: 12px;">
					<div class="l-panel-search-title" style="margin-left: 16px">业务员：</div>
					<div class="l-panel-search-item">
						<input type="text" id="salesman_name_str" />
					</div>
				</div>
				<div class="float-l">
					<div class="l-panel-search-title" style="margin-left: 16px">还款日期：</div>
					<div class="l-panel-search-item">
						<input id="current_repay_date" class="Wdate" type="text"
							onclick="WdatePicker({dateFmt:'yyyy-MM-dd',isShowClear:true})"
							style="width: 133px; vertical-align: top;" />
					</div>
				</div>
			</div>
			<div class="l-panel-search-cond clearfix">
				<div class="float-l">
					<div class="l-panel-search-title" style="margin-left: 16px">客户姓名：</div>
					<div class="l-panel-search-item">
						<input type="text" id="customer_name" />
					</div>
				</div>
				<div class="float-l">
					<div class="l-panel-search-title" style="margin-left: 16px">联系电话：</div>
					<div class="l-panel-search-item">
						<input type="text" id="mobile_telephone" />
					</div>
				</div>
				<div class="float-l" style="margin-left: 35px">
					<div class="l-panel-search-title">产品：</div>
					<div class="l-panel-search-item">
						<select id="category_id">
		                </select>
					</div>
				</div>
			</div>
		</div>
	</div>
	<div id="centertoolbar" class="minwidth400"></div>
	<div id="grid"></div>
	<!-- 工具条初始化 -->
	<script type="text/javascript">
		var grid;
		var toolbar;
		var params;
		var dialog;
		var columns;
		var selectrow;
		var repay_status_arr = '1,2,4';//正常 逾期 续贷
		
		var checkedIds = [];//保存自选行id(id可替换为任意字段值，但字段值需唯一)
        var checkedDatasAll = [];//保存rowdata
        
        //还款日期(默认当前日期+2天)
        $('#current_repay_date').val(getDateAdd());
        //产品下拉框
		globalUtil.init_select_value("category_id", "wms_sys_dict_data_id", "value_meaning", "true", "26,27");
        
		$(function() {
			initGrid();
			var toolbarItemData = [];
			toolbarItemData.push({
				text : '信息修改',
				click : update,
				icon : 'modify'
			});
			toolbarItemData.push({
				line : true
			});
			toolbarItemData.push({
				text : '电话记录',
				click : phone_records,
				icon : 'phremind'
			});
			toolbarItemData.push({
				line : true
			});
			toolbarItemData.push({
				text : '发送短信',
				click : send_message,
				icon : 'approve'
			});
			toolbarItemData.push({
				line : true
			});
			toolbarItemData.push({
				text : '历史查询',
				click : history_search,
				icon : 'search'
			});
			toolbarItemData.push({
				line : true
			});
			toolbarItemData.push({
				text : '查询',
				click : search,
				icon : 'search'
			});
			toolbarItemData.push({
				line : true
			});
			toolbarItemData.push({
				text : '清空',
				click : clear,
				icon : 'empty'
			});
			toolbarItemData.push({
				line : true
			});
			toolbarItemData.push({
				text : '导出Excel',
				icon : 'export',
				id : 'ToolTables_XLS_2'
			});
			toolbarItemData.push({
				line : true
			});
			$("#centertoolbar").ligerToolBar({
				items : toolbarItemData
			});
			search();
			registerCsv();
		});
		
		function initParams() {
            params = globalUtil.getFormParam("searchbar");
            params.repay_status_arr = repay_status_arr;
			if($('#category_id').val() != -1) {
				params.category_id = $('#category_id').val();
			}
        }
		
		//实现数据导出功能
		function registerCsv() {
			var moviePath = "../../js/media/swf/copy_csv_xls_pdf.swf";
			var fileName = '还款提醒.xls';
			var titleJson = '';
			var dataJson = '';
			var obj = $("div[toolbarid='ToolTables_XLS_2']")[0];//获取菜单对象
			var getDataFun = function() {
				var text = {};
				text.title = {
					'send_message_date': '发送短信时间',
					'bill_code' : '单据编号',
					'current_repay_date' : '还款日期',
					'repay_status_name' : '还款状态',
					'bill_type_name' : '业务状态',
					'the_number' : '次数',
					'customer_name' : '客户姓名',
					'mobile_telephone' : '联系电话',
					'com_debtor_name' : '共贷人姓名',
					'com_debtor_tel' : '共贷人电话',
					'send_message_number' : '短信发送电话',
					'category_name' : '产品',
					'principal_lower' : '合同金额（元）',
					'borrow_deadline' : '还款期数',
					'refund_limit_month' : '月还款金额（元）',
					'should_repay_principal' : '应还款金额（元）',
					'repay_period' : '已还期数',
					'refund_bank' : '开户银行',
					'refund_number' : '银行卡号',
					'track_handle_result' : '跟踪处理结果',
					'phone_date' : '拨打电话时间',
					'phone_handle_result' : '电话记录',
					'salesman_name_str' : '业务员/工号',
					'team_manager_name' : '团队经理',
					'sales_epartment_name' : '所属营业部',
					'warn_remak' : '备注',
					'bill_code_group' : '组合贷编号'
				};
				
				//定义需要导出的列名以及列名与数据的对应关系
				initParams();
				var json = globalUtil.syncPostJson("/remind/searchRepaymentReminderList.do?sortname=customer_name&sortorder=asc&need_paging_flag=0", params);//同步获取需要导出的数据内容
				text.data = json.Rows;
				return text;
			};
			registerXlsFlashBtn(moviePath, fileName, titleJson, dataJson, obj, getDataFun);
		}
		
		//清空所填写内容
		function clear() {
			$("#searchbar input").each(function () {
				$(this).val('');
			});
			$('#category_id').val('-1');
			$('#current_repay_date').val(getDateAdd());
			search();
		}
		
		//表格初始化
		function initGrid() {
			columns = [{
				display : '发送短信时间',
				name : 'send_message_date',
				width : 80,
			}, {
				display : '单据编号',
				name : 'bill_code',
				width : 100,
			}, {
				display : '还款日期',
				name : 'current_repay_date',
				width : 80,
			}, {
				display : '还款状态',
				name : 'repay_status_name',
				width : 60,
			}, {
				display : '业务状态',
				name : 'bill_type_name',
				width : 60,
			}, {
				display : '次数',
				name : 'the_number',
				width : 40,
			}, {
				display : '客户姓名',
				name : 'customer_name',
				width : 60,
			}, {
				display : '联系电话',
				name : 'mobile_telephone',
				width : 80,
			}, {
				display : '共贷人姓名',
				name : 'com_debtor_name',
				width : 70,
			}, {
				display : '共贷人电话',
				name : 'com_debtor_tel',
				width : 80,
			}, {
				display : '短信发送电话',
				name : 'send_message_number',
				width : 100,
			}, {
				display : '产品',
				name : 'category_name',
				width : 70,
			}, {
				display : '合同金额（元）',
				name : 'principal_lower',
				width : 90,
			}, {
				display : '还款期数',
				name : 'borrow_deadline',
				width : 60,
			}, {
				display : '月还款金额（元）',
				name : 'refund_limit_month',
				width : 100,
			}, {
				display : '应还款金额（元）',
				name : 'should_repay_principal',
				width : 100,
			}, {
				display : '已还期数',
				name : 'repay_period',
				width : 60,
			}, {
				display : '开户银行',
				name : 'refund_bank',
				width : 60,
			}, {
				display : '银行卡号',
				name : 'refund_number',
				width : 120,
			}, {
				display : '跟踪处理结果',
				name : 'track_handle_result',
				width : 160,
			}, {
				display : '拨打电话时间',
				name : 'phone_date',
				width : 100,
			}, {
				display : '电话记录',
				name : 'phone_handle_result',
				width : 160,
			}, {
				display : '联系人信息',
				name : 'phone_handle_result',
				width : 160,
				//添加超链接
                render: function (rowdata, rowindex, value) { 
                	   var wms_cre_credit_head_id=rowdata.wms_cre_credit_head_id;
                	   if(rowdata.old_wms_cre_credit_head_id!=null&&rowdata.old_wms_cre_credit_head_id!=undefined){
                		   wms_cre_credit_head_id=rowdata.old_wms_cre_credit_head_id;
                	   }
                	   if(wms_cre_credit_head_id==null||wms_cre_credit_head_id==""||wms_cre_credit_head_id==undefined){
                		   return "----";   
                	   }
        			return '<a href="javascript:contactsInfo('+wms_cre_credit_head_id+');" style="color:#056AFF;text-decoration: none;">'+"查看"+'</a>';
                }
			}, {
				display : '业务员/工号',
				name : 'salesman_name_str',
				width : 80,
			}, {
				display : '团队经理',
				name : 'team_manager_name',
				width : 60,
			}, {
				display : '所属营业部',
				name : 'sales_epartment_name',
				width : 80,
			}, {
				display : '备注',
				name : 'warn_remak',
				width : 300,
			},{
				display : '组合贷编号',
				name : 'bill_code_group',
				minWidth : 150,
			}];
			
			grid = $("#grid").ligerGrid({
				columns : columns,
				url : global_param.context_name + '/remind/searchRepaymentReminderList.do',
				sortName : 'customer_name', // 排序列名
				sortOrder : 'asc', // 排序方式
				rownumbers : true,
				allowUnSelectRow : true,
				checkbox: true,
        		isChecked: false,
        		onCheckRow: onCheckRowFunc,
        		onCheckAllRow: onCheckAllRowFunc,
				usePager : true,
				enabledSort: true,
				width : '100%',
				height : '95%',
				heightDiff : -4,
				parms : {
					_filterParms : -1
				}
			});
		}
		//联系人信息
        function contactsInfo(wms_cre_credit_head_id){
          	var url = globalUtil.getHtml("../loanappro/contactsInfo.html?wms_cre_credit_head_id="+wms_cre_credit_head_id);
         		dialog=$.ligerDialog.open({
         			url:url,
         			title: '联系人信息',
  		        width: 1000,
  		        height: globalUtil.setDialogHeight(550),
  		        onHiddenOrClose: function(){
  		    	},
  		        isResize: false
         		});
          }
// 		$('.l-grid-hd-cell-text l-grid-hd-cell-btn-checkbox').prepend('是否发送短信');
		
		//信息修改
		function update() {
			var row = grid.getSelectedRow();
			if(row == null) {
                globalUtil.warnMsg(globalErrorMsg['100000']);//请选择一行记录进行修改
                return;
			} if(checkedIds.length > 1) {
                globalUtil.warnMsg(globalErrorMsg['100053']);//只能选择一条记录
                return;
			} else {
			    var url = globalUtil.getHtml("EditRepaymentInfo.html?wms_cre_credit_notary_warn_id=" + row.wms_cre_credit_notary_warn_id+"&should_repay_principal=" + row.should_repay_principal);
	            dialog = $.ligerDialog.open({
	            url: url,
	           	title: '信息修改',
	 		        width: 600,
	 		        height: globalUtil.setDialogHeight(300),
	 		        onHiddenOrClose: function() {
	 		        },
	 		        isResize: false
	        	});    
			}
		}
		
		//电话记录
		function phone_records() {
			var row = grid.getSelectedRow();
			if(row == null) {
                globalUtil.warnMsg(globalErrorMsg['100031']);//请选择一行记录
                return;
			} if(checkedIds.length > 1) {
                globalUtil.warnMsg(globalErrorMsg['100053']);//只能选择一条记录
                return;
			} else {
			    var url = globalUtil.getHtml("phoneRecords.html?wms_cre_credit_notary_warn_id=" + row.wms_cre_credit_notary_warn_id);
	            dialog = $.ligerDialog.open({
		            url: url,
		           	title: '电话记录',
		           	width: 600,
	 		        height: globalUtil.setDialogHeight(300),
		 		    onHiddenOrClose: function() {
		 		    },
		 		    isResize: false
	        	});    
			}
		}
		
		//发送短信
		function send_message() {
			if(checkedIds.length == 0) {
                globalUtil.warnMsg(globalErrorMsg['100054']);//请至少选择一行记录
                return;
			} 
			var realSendMessageArr = [];
			var checkedDatasAllNumAfterSplit = [];
			//先将选中数据根据电话号码拆分
			var tmpNumArr = [];
			var tmpObj = {};
			for(var i = 0; i < checkedDatasAll.length; i++) {
				if(typeof(checkedDatasAll[i].send_message_number) != "undefined") {
					tmpNumArr = checkedDatasAll[i].send_message_number.split(',');
					for(var k = 0; k < tmpNumArr.length; k++) {
						tmpObj = globalUtil.deepCopy(checkedDatasAll[i]);
						tmpObj.send_message_number = tmpNumArr[k];
						checkedDatasAllNumAfterSplit.push(tmpObj);
					}
				} else {
					checkedDatasAllNumAfterSplit.push(tmpObj);
				}
			}
			var addFlag = true;
			//身份证号、联系电话(用逗号隔开)、还款账户全部相同则为重复记录：只发送一条短信
			for(var i = 0; i < checkedDatasAllNumAfterSplit.length; i++) {
				addFlag = true;
				for(var j = 0; j < realSendMessageArr.length; j++) {
					if(
					      (
						      (
						          typeof(checkedDatasAllNumAfterSplit[i].id_card) == "undefined" && typeof(realSendMessageArr[j].id_card) == "undefined"
						      ) 
						      || 
						      (checkedDatasAllNumAfterSplit[i].id_card == realSendMessageArr[j].id_card)
					      ) 
						      &&
	    	              (
	    	                  (
	    	                	  typeof(checkedDatasAllNumAfterSplit[i].send_message_number) == "undefined" && typeof(realSendMessageArr[j].send_message_number) == "undefined"
	    	                  ) 
	    	                  || 
	    	                  (checkedDatasAllNumAfterSplit[i].send_message_number == realSendMessageArr[j].send_message_number)
	    	              )  
	    	                  &&
	    	    	      (
	    	    	    	  (
	    	    	    		  typeof(checkedDatasAllNumAfterSplit[i].refund_number) == "undefined" && typeof(realSendMessageArr[j].refund_number) == "undefined"
	    	    	    	  ) 
	    	    	    	  || 
	    	    	    	  (checkedDatasAllNumAfterSplit[i].refund_number == realSendMessageArr[j].refund_number)
	    	    	      )
	    	    	  ) {
						addFlag = false;
						break;
					}
				}
				if(addFlag) {
					realSendMessageArr.push(checkedDatasAllNumAfterSplit[i]);
				} else if(checkedDatasAllNumAfterSplit[i].wms_cre_credit_notary_warn_id != realSendMessageArr[j].wms_cre_credit_notary_warn_id) {
					realSendMessageArr[j].should_repay_principal = 
						parseFloat(realSendMessageArr[j].should_repay_principal) +
						parseFloat(checkedDatasAllNumAfterSplit[i].should_repay_principal);
				}
			}
			globalUtil.confirmMsg((globalErrorMsg['1700034']).replace('${num1}', checkedIds.length).replace('${num2}', realSendMessageArr.length), 
				function(yes) {
		            if(yes) {
		            	var reqMap = {};
		            	reqMap.wms_cre_credit_notary_warn_id_arr = checkedIds;
		            	reqMap.wms_cre_credit_notary_warn_list_json = JSON.stringify(realSendMessageArr);
		            	$.ajax({
		        	        url: global_param.context_name + '/remind/sendMessageForRepaymentReminder.do',
		        	        type: 'POST',
		        	        data: reqMap,
		        	        async: false,
		        	        traditional: true,
		        	        success: function(data) {
		        	        	if(data == "success") {
		        	        		globalUtil.successMsg(globalErrorMsg['100002'], function() {  
		        	        			research();
		        	                });
		        	        	} else {
		        	        		globalUtil.warnMsg(globalErrorMsg['100012']);
		        	        	}
		        	        }
		        	    });
		            }
	        	}
			);
		}
		
		//历史查询
		function history_search() {
			var row = grid.getSelectedRow();
			if(row == null) {
                globalUtil.warnMsg(globalErrorMsg['100031']);//请选择一行记录
                return;
			} if(checkedIds.length > 1) {
                globalUtil.warnMsg(globalErrorMsg['100053']);//只能选择一条记录
                return;
			} else {
			    var url = globalUtil.getHtml("HistorySearch.html?wms_cre_credit_notary_warn_id=" + row.wms_cre_credit_notary_warn_id);
	            dialog = $.ligerDialog.open({
		            url: url,
		           	title: '历史查询',
		           	width: 850,
	 		        height: globalUtil.setDialogHeight(500),
		 		    onHiddenOrClose: function() {
		 		    },
		 		    isResize: false
	        	});    
			}
		}
		
		//初始化复选框方法
        function isCheckedFunc(rowdatas) {
        	$(rowdatas).each(function(i, o) {
        		addCheckedId(o.wms_cre_credit_notary_warn_id, o);
        	});
        	return true;
        }
        
     	//选中、取消复选框事件方法
        function onCheckRowFunc(checked, data) {
        	if (checked) {
        		addCheckedId(data.wms_cre_credit_notary_warn_id, data);
        	} else {
        		removeCheckedId(data.wms_cre_credit_notary_warn_id, data);
        	}
        }
     	
     	//选中、取消全部选项事件方法
        function onCheckAllRowFunc(checked, data) {
        	for (var rowid in this.records) {
        		if (checked) {
        			addCheckedId(this.records[rowid]['wms_cre_credit_notary_warn_id'], this.records[rowid]);
        		} else {
        			removeCheckedId(this.records[rowid]['wms_cre_credit_notary_warn_id']);
        		}
        	}
        }
        
        //向checkedCustomer中添加id的方法
        function addCheckedId(id, data) {
        	//判断是否重复
        	if(findCheckedIndex(id) == -1) {
	       		checkedIds.push(id);
	       		checkedDatasAll.push(data);
        	}
        }
        
        //从checkedCustomer中移除id的方法
        function removeCheckedId(id, data) {
        	var remove_index = findCheckedIndex(id);
        	checkedIds.splice(remove_index, 1);
        	checkedDatasAll.splice(remove_index, 1);
        }
        
        //在已选id中查找是否已存在指定id
        function findCheckedIndex(id) {
        	var return_index = -1;
        	$(checkedIds).each(function(i, o) {
        		if(o == id) {
        			return_index = i;
        			return;
        		}
        	}); 
        	return return_index;
        };
        
		//查询
		function search() {
			initParams();
			checkedIds = [];
			checkedDatasAll = [];
            global_ligerui_extend.search(grid, params);
		}
		
		//查询：当前页
		function research() {
			initParams();
			checkedIds = [];
			checkedDatasAll = [];
            global_ligerui_extend.research(grid, params);
		}
		
		function closeDialog() {
    	    dialog.hide();
    	    search();
        }
		
		//翻页清空当前页选择的数据
		$(document).on('click', '.l-bar-button', function() {
			checkedIds = [];
			checkedDatasAll = [];
		}).on('blur', '.pcontrol input', function() {
			checkedIds = [];
			checkedDatasAll = [];
		});	
		//获取日期
		function getDateAdd(){
			 var dateNow=new Date((new Date()).getTime() + 1000 * 60 * 60 * 24 * 2).format("yyyy-MM-dd");
		     var  dayNow= dateNow.substring(8,10);
		     //如果日期==31号 则日期加1
		     if(dayNow==31){
		        dateNow=new Date((new Date()).getTime() + 1000 * 60 * 60 * 24 * 3).format("yyyy-MM-dd");
		     }
		     return dateNow;
		}
	</script>
</body>
</html>